// ==============================================================
// Generated by Vitis HLS v2023.2.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="simple_threshold_simple_threshold,hls_ip_2023_2_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcku5p-ffvb676-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.192400,HLS_SYN_LAT=130,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=4466,HLS_SYN_LUT=4811,HLS_VERSION=2023_2_1}" *)

module simple_threshold (
        ap_clk,
        ap_rst_n,
        top_bid_TDATA,
        top_bid_TVALID,
        top_bid_TREADY,
        top_ask_TDATA,
        top_ask_TVALID,
        top_ask_TREADY,
        incoming_time_TDATA,
        incoming_time_TVALID,
        incoming_time_TREADY,
        incoming_meta_TDATA,
        incoming_meta_TVALID,
        incoming_meta_TREADY,
        outgoing_order_TDATA,
        outgoing_order_TVALID,
        outgoing_order_TREADY,
        outgoing_time_TDATA,
        outgoing_time_TVALID,
        outgoing_time_TREADY,
        outgoing_meta_TDATA,
        outgoing_meta_TVALID,
        outgoing_meta_TREADY
);

parameter    ap_ST_fsm_state1 = 155'd1;
parameter    ap_ST_fsm_state2 = 155'd2;
parameter    ap_ST_fsm_state3 = 155'd4;
parameter    ap_ST_fsm_state4 = 155'd8;
parameter    ap_ST_fsm_state5 = 155'd16;
parameter    ap_ST_fsm_state6 = 155'd32;
parameter    ap_ST_fsm_state7 = 155'd64;
parameter    ap_ST_fsm_state8 = 155'd128;
parameter    ap_ST_fsm_state9 = 155'd256;
parameter    ap_ST_fsm_state10 = 155'd512;
parameter    ap_ST_fsm_state11 = 155'd1024;
parameter    ap_ST_fsm_state12 = 155'd2048;
parameter    ap_ST_fsm_state13 = 155'd4096;
parameter    ap_ST_fsm_state14 = 155'd8192;
parameter    ap_ST_fsm_state15 = 155'd16384;
parameter    ap_ST_fsm_state16 = 155'd32768;
parameter    ap_ST_fsm_state17 = 155'd65536;
parameter    ap_ST_fsm_state18 = 155'd131072;
parameter    ap_ST_fsm_state19 = 155'd262144;
parameter    ap_ST_fsm_state20 = 155'd524288;
parameter    ap_ST_fsm_state21 = 155'd1048576;
parameter    ap_ST_fsm_state22 = 155'd2097152;
parameter    ap_ST_fsm_state23 = 155'd4194304;
parameter    ap_ST_fsm_state24 = 155'd8388608;
parameter    ap_ST_fsm_state25 = 155'd16777216;
parameter    ap_ST_fsm_state26 = 155'd33554432;
parameter    ap_ST_fsm_state27 = 155'd67108864;
parameter    ap_ST_fsm_state28 = 155'd134217728;
parameter    ap_ST_fsm_state29 = 155'd268435456;
parameter    ap_ST_fsm_state30 = 155'd536870912;
parameter    ap_ST_fsm_state31 = 155'd1073741824;
parameter    ap_ST_fsm_state32 = 155'd2147483648;
parameter    ap_ST_fsm_state33 = 155'd4294967296;
parameter    ap_ST_fsm_state34 = 155'd8589934592;
parameter    ap_ST_fsm_state35 = 155'd17179869184;
parameter    ap_ST_fsm_state36 = 155'd34359738368;
parameter    ap_ST_fsm_state37 = 155'd68719476736;
parameter    ap_ST_fsm_state38 = 155'd137438953472;
parameter    ap_ST_fsm_state39 = 155'd274877906944;
parameter    ap_ST_fsm_state40 = 155'd549755813888;
parameter    ap_ST_fsm_state41 = 155'd1099511627776;
parameter    ap_ST_fsm_state42 = 155'd2199023255552;
parameter    ap_ST_fsm_state43 = 155'd4398046511104;
parameter    ap_ST_fsm_state44 = 155'd8796093022208;
parameter    ap_ST_fsm_state45 = 155'd17592186044416;
parameter    ap_ST_fsm_state46 = 155'd35184372088832;
parameter    ap_ST_fsm_state47 = 155'd70368744177664;
parameter    ap_ST_fsm_state48 = 155'd140737488355328;
parameter    ap_ST_fsm_state49 = 155'd281474976710656;
parameter    ap_ST_fsm_state50 = 155'd562949953421312;
parameter    ap_ST_fsm_state51 = 155'd1125899906842624;
parameter    ap_ST_fsm_state52 = 155'd2251799813685248;
parameter    ap_ST_fsm_state53 = 155'd4503599627370496;
parameter    ap_ST_fsm_state54 = 155'd9007199254740992;
parameter    ap_ST_fsm_state55 = 155'd18014398509481984;
parameter    ap_ST_fsm_state56 = 155'd36028797018963968;
parameter    ap_ST_fsm_state57 = 155'd72057594037927936;
parameter    ap_ST_fsm_state58 = 155'd144115188075855872;
parameter    ap_ST_fsm_state59 = 155'd288230376151711744;
parameter    ap_ST_fsm_state60 = 155'd576460752303423488;
parameter    ap_ST_fsm_state61 = 155'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 155'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 155'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 155'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 155'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 155'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 155'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 155'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 155'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 155'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 155'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 155'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 155'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 155'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 155'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 155'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 155'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 155'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 155'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 155'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 155'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 155'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 155'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 155'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 155'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 155'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 155'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 155'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 155'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 155'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 155'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 155'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 155'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 155'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 155'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 155'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 155'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 155'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 155'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 155'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 155'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 155'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 155'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 155'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 155'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 155'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 155'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 155'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 155'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 155'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 155'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 155'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 155'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 155'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 155'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 155'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 155'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 155'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state119 = 155'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state120 = 155'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state121 = 155'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state122 = 155'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state123 = 155'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state124 = 155'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_state125 = 155'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_state126 = 155'd42535295865117307932921825928971026432;
parameter    ap_ST_fsm_state127 = 155'd85070591730234615865843651857942052864;
parameter    ap_ST_fsm_state128 = 155'd170141183460469231731687303715884105728;
parameter    ap_ST_fsm_state129 = 155'd340282366920938463463374607431768211456;
parameter    ap_ST_fsm_state130 = 155'd680564733841876926926749214863536422912;
parameter    ap_ST_fsm_state131 = 155'd1361129467683753853853498429727072845824;
parameter    ap_ST_fsm_state132 = 155'd2722258935367507707706996859454145691648;
parameter    ap_ST_fsm_state133 = 155'd5444517870735015415413993718908291383296;
parameter    ap_ST_fsm_state134 = 155'd10889035741470030830827987437816582766592;
parameter    ap_ST_fsm_state135 = 155'd21778071482940061661655974875633165533184;
parameter    ap_ST_fsm_state136 = 155'd43556142965880123323311949751266331066368;
parameter    ap_ST_fsm_state137 = 155'd87112285931760246646623899502532662132736;
parameter    ap_ST_fsm_state138 = 155'd174224571863520493293247799005065324265472;
parameter    ap_ST_fsm_state139 = 155'd348449143727040986586495598010130648530944;
parameter    ap_ST_fsm_state140 = 155'd696898287454081973172991196020261297061888;
parameter    ap_ST_fsm_state141 = 155'd1393796574908163946345982392040522594123776;
parameter    ap_ST_fsm_state142 = 155'd2787593149816327892691964784081045188247552;
parameter    ap_ST_fsm_state143 = 155'd5575186299632655785383929568162090376495104;
parameter    ap_ST_fsm_state144 = 155'd11150372599265311570767859136324180752990208;
parameter    ap_ST_fsm_state145 = 155'd22300745198530623141535718272648361505980416;
parameter    ap_ST_fsm_state146 = 155'd44601490397061246283071436545296723011960832;
parameter    ap_ST_fsm_state147 = 155'd89202980794122492566142873090593446023921664;
parameter    ap_ST_fsm_state148 = 155'd178405961588244985132285746181186892047843328;
parameter    ap_ST_fsm_state149 = 155'd356811923176489970264571492362373784095686656;
parameter    ap_ST_fsm_state150 = 155'd713623846352979940529142984724747568191373312;
parameter    ap_ST_fsm_state151 = 155'd1427247692705959881058285969449495136382746624;
parameter    ap_ST_fsm_state152 = 155'd2854495385411919762116571938898990272765493248;
parameter    ap_ST_fsm_state153 = 155'd5708990770823839524233143877797980545530986496;
parameter    ap_ST_fsm_state154 = 155'd11417981541647679048466287755595961091061972992;
parameter    ap_ST_fsm_state155 = 155'd22835963083295358096932575511191922182123945984;

input   ap_clk;
input   ap_rst_n;
input  [95:0] top_bid_TDATA;
input   top_bid_TVALID;
output   top_bid_TREADY;
input  [95:0] top_ask_TDATA;
input   top_ask_TVALID;
output   top_ask_TREADY;
input  [63:0] incoming_time_TDATA;
input   incoming_time_TVALID;
output   incoming_time_TREADY;
input  [127:0] incoming_meta_TDATA;
input   incoming_meta_TVALID;
output   incoming_meta_TREADY;
output  [95:0] outgoing_order_TDATA;
output   outgoing_order_TVALID;
input   outgoing_order_TREADY;
output  [63:0] outgoing_time_TDATA;
output   outgoing_time_TVALID;
input   outgoing_time_TREADY;
output  [127:0] outgoing_meta_TDATA;
output   outgoing_meta_TVALID;
input   outgoing_meta_TREADY;

 reg    ap_rst_n_inv;
reg   [30:0] cooldownTimer;
reg   [31:0] updateCounter;
reg   [31:0] updateMovingAverages_float_float_float_int_shortTermPrices;
reg   [31:0] updateMovingAverages_float_float_float_int_shortTermPrices_1;
reg   [31:0] updateMovingAverages_float_float_float_int_shortTermPrices_2;
reg   [31:0] updateMovingAverages_float_float_float_int_shortTermPrices_3;
reg   [31:0] updateMovingAverages_float_float_float_int_shortTermPrices_4;
reg   [31:0] updateMovingAverages_float_float_float_int_longTermPrices;
reg   [31:0] updateMovingAverages_float_float_float_int_longTermPrices_5;
reg   [31:0] updateMovingAverages_float_float_float_int_longTermPrices_6;
reg   [31:0] updateMovingAverages_float_float_float_int_longTermPrices_7;
reg   [31:0] updateMovingAverages_float_float_float_int_longTermPrices_8;
reg   [31:0] updateMovingAverages_float_float_float_int_longTermPrices_9;
reg   [31:0] updateMovingAverages_float_float_float_int_longTermPrices_10;
reg   [31:0] updateMovingAverages_float_float_float_int_longTermPrices_11;
reg   [31:0] updateMovingAverages_float_float_float_int_longTermPrices_12;
reg   [31:0] updateMovingAverages_float_float_float_int_longTermPrices_13;
reg   [31:0] p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_10;
reg   [31:0] p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_11;
reg   [31:0] p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_12;
reg   [31:0] p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_13;
reg   [31:0] p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_14;
reg   [31:0] p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_15;
reg   [31:0] p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_16;
reg   [31:0] p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_17;
reg   [31:0] p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_18;
reg   [31:0] p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_19;
reg   [31:0] updateRSI_float_float_int_priceChanges;
reg   [31:0] updateRSI_float_float_int_priceChanges_14;
reg   [31:0] updateRSI_float_float_int_priceChanges_15;
reg   [31:0] updateRSI_float_float_int_priceChanges_16;
reg   [31:0] updateRSI_float_float_int_priceChanges_17;
reg   [31:0] updateRSI_float_float_int_priceChanges_18;
reg   [31:0] updateRSI_float_float_int_priceChanges_19;
reg   [31:0] updateRSI_float_float_int_priceChanges_20;
reg   [31:0] updateRSI_float_float_int_priceChanges_21;
reg   [31:0] updateRSI_float_float_int_priceChanges_22;
reg   [31:0] p_ZZ9updateRSIfRfRiE12priceChanges_10;
reg   [31:0] p_ZZ9updateRSIfRfRiE12priceChanges_11;
reg   [31:0] p_ZZ9updateRSIfRfRiE12priceChanges_12;
reg   [31:0] p_ZZ9updateRSIfRfRiE12priceChanges_13;
reg    top_bid_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [154:0] ap_CS_fsm;
wire    ap_CS_fsm_state35;
reg    top_ask_TDATA_blk_n;
reg    incoming_time_TDATA_blk_n;
wire    ap_CS_fsm_state154;
wire   [0:0] icmp_ln166_fu_1938_p2;
reg    incoming_meta_TDATA_blk_n;
reg    outgoing_order_TDATA_blk_n;
wire    ap_CS_fsm_state155;
reg   [0:0] tmp_reg_2004;
reg   [0:0] and_ln151_reg_2011;
reg   [0:0] and_ln164_reg_2338;
reg   [0:0] icmp_ln166_reg_2372;
reg    outgoing_time_TDATA_blk_n;
reg    outgoing_meta_TDATA_blk_n;
wire   [31:0] grp_fu_495_p2;
reg   [31:0] reg_543;
wire    ap_CS_fsm_state110;
wire    ap_CS_fsm_state125;
wire    ap_CS_fsm_state134;
wire    ap_CS_fsm_state147;
wire   [31:0] grp_fu_500_p2;
reg   [31:0] reg_552;
wire   [31:0] grp_fu_488_p2;
reg   [31:0] reg_562;
wire    ap_CS_fsm_state138;
wire    ap_CS_fsm_state151;
wire   [0:0] tmp_nbreadreq_fu_350_p3;
wire    ap_CS_fsm_state1;
wire   [0:0] and_ln151_fu_580_p2;
wire   [0:0] tmp_24_fu_590_p3;
reg   [0:0] tmp_24_reg_2018;
wire   [31:0] xor_ln45_fu_606_p2;
reg   [31:0] xor_ln45_reg_2025;
wire   [15:0] bid_price_fu_618_p1;
reg   [15:0] bid_price_reg_2032;
reg   [7:0] bid_size_reg_2037;
wire   [15:0] ask_price_fu_632_p1;
reg   [15:0] ask_price_reg_2042;
reg   [7:0] ask_size_reg_2047;
reg   [15:0] lshr_ln_reg_2052;
wire   [31:0] select_ln156_2_fu_956_p3;
reg   [31:0] select_ln156_2_reg_2060;
wire    ap_CS_fsm_state36;
reg   [31:0] updateMovingAverages_float_float_float_int_longTermPrices_load_reg_2121;
wire    ap_CS_fsm_state71;
reg   [31:0] updateMovingAverages_float_float_float_int_longTermPrices_5_load_reg_2126;
reg   [31:0] updateMovingAverages_float_float_float_int_longTermPrices_6_load_reg_2131;
reg   [31:0] updateMovingAverages_float_float_float_int_longTermPrices_7_load_reg_2136;
reg   [31:0] updateMovingAverages_float_float_float_int_longTermPrices_8_load_reg_2141;
reg   [31:0] updateMovingAverages_float_float_float_int_longTermPrices_9_load_reg_2146;
reg   [31:0] updateMovingAverages_float_float_float_int_longTermPrices_10_load_reg_2151;
reg   [31:0] updateMovingAverages_float_float_float_int_longTermPrices_11_load_reg_2156;
reg   [31:0] updateMovingAverages_float_float_float_int_longTermPrices_12_load_reg_2161;
reg   [31:0] updateMovingAverages_float_float_float_int_longTermPrices_13_load_reg_2166;
reg   [31:0] p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_10_load_reg_2171;
reg   [31:0] updateMovingAverages_float_float_float_int_longTermPrices_reg_2176;
reg   [31:0] updateMovingAverages_float_float_float_int_longTermPrices_35_reg_2181;
reg   [31:0] updateMovingAverages_float_float_float_int_longTermPrices_36_reg_2186;
reg   [31:0] updateMovingAverages_float_float_float_int_longTermPrices_37_reg_2191;
reg   [31:0] updateMovingAverages_float_float_float_int_longTermPrices_38_reg_2196;
reg   [31:0] p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_16_load_reg_2201;
reg   [31:0] p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_17_load_reg_2206;
reg   [31:0] p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_18_load_reg_2211;
reg   [31:0] p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_19_load_reg_2216;
wire   [0:0] icmp_ln70_fu_1269_p2;
reg   [0:0] icmp_ln70_reg_2221;
wire   [3:0] select_ln72_fu_1298_p3;
reg   [3:0] select_ln72_reg_2232;
wire    ap_CS_fsm_state106;
wire   [31:0] previousPrice_fu_1425_p3;
reg   [31:0] previousPrice_reg_2236;
wire   [0:0] and_ln161_fu_1573_p2;
reg   [0:0] and_ln161_reg_2241;
wire    ap_CS_fsm_state111;
wire   [31:0] bitcast_ln75_fu_1579_p1;
reg   [31:0] bitcast_ln75_reg_2247;
wire    ap_CS_fsm_state112;
wire   [0:0] and_ln75_fu_1615_p2;
reg   [0:0] and_ln75_reg_2252;
wire   [0:0] grp_fu_522_p2;
reg   [0:0] tmp_15_reg_2258;
wire   [0:0] grp_fu_526_p2;
reg   [0:0] tmp_19_reg_2263;
reg   [31:0] sub_i7_reg_2268;
wire    ap_CS_fsm_state114;
wire   [31:0] gain_1_fu_1630_p3;
reg   [31:0] gain_1_reg_2273;
wire    ap_CS_fsm_state116;
wire   [31:0] loss_1_fu_1637_p3;
reg   [31:0] loss_1_reg_2278;
wire   [62:0] trunc_ln479_fu_1648_p1;
reg   [62:0] trunc_ln479_reg_2283;
wire   [63:0] grp_fu_514_p1;
reg   [63:0] conv1_i_reg_2288;
wire    ap_CS_fsm_state117;
wire   [0:0] icmp_ln83_fu_1682_p2;
reg   [0:0] icmp_ln83_reg_2298;
wire    ap_CS_fsm_state126;
wire   [0:0] icmp_ln83_1_fu_1688_p2;
reg   [0:0] icmp_ln83_1_reg_2303;
wire   [0:0] grp_fu_517_p2;
reg   [0:0] tmp_11_reg_2308;
wire    ap_CS_fsm_state127;
wire   [31:0] rs_fu_1703_p3;
wire    ap_CS_fsm_state135;
wire   [63:0] grp_fu_534_p2;
reg   [63:0] div_i8_reg_2318;
wire   [31:0] grp_fu_508_p1;
wire    ap_CS_fsm_state140;
wire   [0:0] icmp_ln164_fu_1730_p2;
reg   [0:0] icmp_ln164_reg_2328;
wire   [0:0] icmp_ln164_1_fu_1736_p2;
reg   [0:0] icmp_ln164_1_reg_2333;
wire   [0:0] and_ln164_fu_1746_p2;
wire    ap_CS_fsm_state141;
wire   [0:0] or_ln161_2_fu_1782_p2;
reg   [0:0] or_ln161_2_reg_2342;
wire    ap_CS_fsm_state152;
wire   [0:0] isUptrend_fu_1797_p2;
reg   [0:0] isUptrend_reg_2348;
wire    ap_CS_fsm_state153;
wire   [0:0] and_ln162_3_fu_1824_p2;
reg   [0:0] and_ln162_3_reg_2354;
wire   [7:0] tradeOrder_size_3_fu_1837_p3;
reg   [7:0] tradeOrder_size_3_reg_2361;
wire   [0:0] tradeOrder_direction_fu_1850_p2;
reg   [0:0] tradeOrder_direction_reg_2367;
wire    grp_simple_threshold_Pipeline_VITIS_LOOP_49_1_fu_453_ap_start;
wire    grp_simple_threshold_Pipeline_VITIS_LOOP_49_1_fu_453_ap_done;
wire    grp_simple_threshold_Pipeline_VITIS_LOOP_49_1_fu_453_ap_idle;
wire    grp_simple_threshold_Pipeline_VITIS_LOOP_49_1_fu_453_ap_ready;
wire   [31:0] grp_simple_threshold_Pipeline_VITIS_LOOP_49_1_fu_453_shortSum_out;
wire    grp_simple_threshold_Pipeline_VITIS_LOOP_49_1_fu_453_shortSum_out_ap_vld;
wire   [31:0] grp_simple_threshold_Pipeline_VITIS_LOOP_49_1_fu_453_grp_fu_488_p_din0;
wire   [31:0] grp_simple_threshold_Pipeline_VITIS_LOOP_49_1_fu_453_grp_fu_488_p_din1;
wire   [0:0] grp_simple_threshold_Pipeline_VITIS_LOOP_49_1_fu_453_grp_fu_488_p_opcode;
wire    grp_simple_threshold_Pipeline_VITIS_LOOP_49_1_fu_453_grp_fu_488_p_ce;
wire    grp_simple_threshold_Pipeline_VITIS_LOOP_52_2_fu_463_ap_start;
wire    grp_simple_threshold_Pipeline_VITIS_LOOP_52_2_fu_463_ap_done;
wire    grp_simple_threshold_Pipeline_VITIS_LOOP_52_2_fu_463_ap_idle;
wire    grp_simple_threshold_Pipeline_VITIS_LOOP_52_2_fu_463_ap_ready;
wire   [31:0] grp_simple_threshold_Pipeline_VITIS_LOOP_52_2_fu_463_longSum_out;
wire    grp_simple_threshold_Pipeline_VITIS_LOOP_52_2_fu_463_longSum_out_ap_vld;
reg   [0:0] ap_phi_mux_cooldownTimer_flag_3_phi_fu_417_p10;
reg   [0:0] cooldownTimer_flag_3_reg_413;
reg    ap_predicate_op692_write_state155;
reg    ap_predicate_op693_write_state155;
reg    ap_predicate_op694_write_state155;
wire    regslice_both_outgoing_order_U_apdone_blk;
wire    regslice_both_outgoing_time_U_apdone_blk;
wire    regslice_both_outgoing_meta_U_apdone_blk;
reg    ap_block_state155;
reg    ap_block_state155_io;
reg    ap_block_state154;
reg    ap_block_state154_io;
reg   [30:0] ap_phi_mux_empty_phi_fu_438_p10;
reg   [30:0] empty_reg_434;
reg    grp_simple_threshold_Pipeline_VITIS_LOOP_49_1_fu_453_ap_start_reg;
wire    ap_CS_fsm_state72;
reg    grp_simple_threshold_Pipeline_VITIS_LOOP_52_2_fu_463_ap_start_reg;
wire   [30:0] select_ln178_fu_1978_p3;
wire   [0:0] or_ln178_fu_1972_p2;
wire   [31:0] add_ln58_fu_1258_p2;
wire   [2:0] select_ln45_fu_974_p3;
wire   [4:0] select_ln46_fu_1026_p3;
reg   [31:0] ap_sig_allocacmp_updateMovingAverages_float_float_float_int_longTermPrices_load;
reg   [31:0] ap_sig_allocacmp_updateMovingAverages_float_float_float_int_longTermPrices_5_load;
reg   [31:0] ap_sig_allocacmp_updateMovingAverages_float_float_float_int_longTermPrices_6_load;
reg   [31:0] ap_sig_allocacmp_updateMovingAverages_float_float_float_int_longTermPrices_7_load;
reg   [31:0] ap_sig_allocacmp_updateMovingAverages_float_float_float_int_longTermPrices_8_load;
reg   [31:0] ap_sig_allocacmp_updateMovingAverages_float_float_float_int_longTermPrices_9_load;
reg   [31:0] ap_sig_allocacmp_updateMovingAverages_float_float_float_int_longTermPrices_10_load;
reg   [31:0] ap_sig_allocacmp_updateMovingAverages_float_float_float_int_longTermPrices_11_load;
reg   [31:0] ap_sig_allocacmp_updateMovingAverages_float_float_float_int_longTermPrices_12_load;
reg   [31:0] ap_sig_allocacmp_updateMovingAverages_float_float_float_int_longTermPrices_13_load;
reg   [31:0] ap_sig_allocacmp_p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_10_load;
reg   [31:0] ap_sig_allocacmp_updateMovingAverages_float_float_float_int_longTermPrices;
reg   [31:0] ap_sig_allocacmp_updateMovingAverages_float_float_float_int_longTermPrices_35;
reg   [31:0] ap_sig_allocacmp_updateMovingAverages_float_float_float_int_longTermPrices_36;
reg   [31:0] ap_sig_allocacmp_updateMovingAverages_float_float_float_int_longTermPrices_37;
reg   [31:0] ap_sig_allocacmp_updateMovingAverages_float_float_float_int_longTermPrices_38;
reg   [31:0] ap_sig_allocacmp_p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_16_load;
reg   [31:0] ap_sig_allocacmp_p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_17_load;
reg   [31:0] ap_sig_allocacmp_p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_18_load;
reg   [31:0] ap_sig_allocacmp_p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_19_load;
wire    ap_CS_fsm_state102;
wire   [0:0] tmp_1_nbreadreq_fu_358_p3;
reg    ap_block_state35;
reg   [31:0] grp_fu_488_p0;
reg   [31:0] grp_fu_488_p1;
wire    ap_CS_fsm_state107;
wire    ap_CS_fsm_state113;
wire    ap_CS_fsm_state148;
reg   [31:0] grp_fu_495_p0;
reg   [31:0] grp_fu_495_p1;
wire    ap_CS_fsm_state139;
reg   [31:0] grp_fu_500_p0;
reg   [31:0] grp_fu_500_p1;
wire    ap_CS_fsm_state115;
reg   [31:0] grp_fu_517_p0;
reg   [31:0] grp_fu_517_p1;
reg   [31:0] grp_fu_522_p0;
reg   [31:0] grp_fu_522_p1;
wire   [63:0] grp_fu_534_p0;
wire   [23:0] mul_ln109_fu_538_p0;
wire   [25:0] mul_ln109_fu_538_p1;
wire   [0:0] icmp_ln151_fu_574_p2;
wire   [31:0] select_ln45_1_fu_598_p3;
wire   [31:0] grp_fu_612_p0;
wire   [3:0] grp_fu_612_p1;
wire   [16:0] zext_ln156_1_fu_650_p1;
wire   [16:0] zext_ln156_fu_646_p1;
wire   [16:0] add_ln156_fu_654_p2;
wire   [17:0] zext_ln156_2_fu_670_p1;
reg   [17:0] tmp_4_fu_678_p4;
wire   [18:0] tmp_5_fu_688_p3;
wire  signed [31:0] sext_ln156_fu_696_p1;
reg   [31:0] tmp_6_fu_700_p3;
wire   [31:0] sub_ln156_fu_712_p2;
wire   [31:0] add_ln156_1_fu_718_p2;
wire   [30:0] tmp_2_fu_724_p4;
wire   [4:0] trunc_ln156_1_fu_740_p1;
wire   [4:0] sub_ln156_3_fu_744_p2;
wire   [17:0] zext_ln156_8_fu_750_p1;
wire   [17:0] lshr_ln156_1_fu_754_p2;
wire   [15:0] trunc_ln156_2_fu_760_p1;
wire   [15:0] and_ln156_2_fu_764_p2;
wire   [0:0] icmp_ln156_1_fu_734_p2;
wire   [0:0] icmp_ln156_2_fu_769_p2;
wire   [0:0] tmp_7_fu_781_p3;
wire   [17:0] trunc_ln156_3_fu_795_p1;
wire   [0:0] bit_select30_i_i1_fu_799_p3;
wire   [0:0] xor_ln156_fu_789_p2;
wire   [0:0] and_ln156_1_fu_807_p2;
wire   [0:0] and_ln156_fu_775_p2;
wire   [0:0] or_ln156_fu_813_p2;
wire   [31:0] add_ln156_2_fu_836_p2;
wire   [63:0] zext_ln156_3_fu_827_p1;
wire   [63:0] zext_ln156_4_fu_842_p1;
wire   [31:0] sub_ln156_1_fu_852_p2;
wire   [63:0] zext_ln156_5_fu_858_p1;
wire   [0:0] icmp_ln156_3_fu_830_p2;
wire   [63:0] lshr_ln156_fu_846_p2;
wire   [63:0] shl_ln156_fu_862_p2;
wire   [1:0] or_ln_fu_819_p3;
wire   [63:0] select_ln156_fu_868_p3;
wire   [63:0] zext_ln156_6_fu_876_p1;
wire   [63:0] add_ln156_3_fu_880_p2;
wire   [62:0] lshr_ln156_2_fu_886_p4;
wire   [0:0] tmp_13_fu_900_p3;
wire   [7:0] trunc_ln156_fu_708_p1;
wire   [7:0] sub_ln156_2_fu_916_p2;
wire   [7:0] select_ln156_1_fu_908_p3;
wire   [7:0] add_ln156_4_fu_922_p2;
wire   [63:0] zext_ln156_7_fu_896_p1;
wire   [8:0] tmp_3_fu_928_p3;
wire   [63:0] pi_assign_fu_936_p5;
wire   [31:0] LD_fu_948_p1;
wire   [0:0] icmp_ln156_fu_673_p2;
wire   [31:0] bitcast_ln766_fu_952_p1;
wire   [2:0] grp_fu_612_p2;
wire   [2:0] trunc_ln45_fu_964_p1;
wire   [2:0] sub_ln45_fu_968_p2;
wire   [5:0] grp_fu_1011_p1;
wire   [4:0] grp_fu_1011_p2;
wire   [4:0] trunc_ln46_fu_1016_p1;
wire   [4:0] sub_ln46_fu_1020_p2;
wire   [4:0] grp_fu_1275_p1;
wire   [3:0] grp_fu_1275_p2;
wire   [3:0] trunc_ln72_fu_1288_p1;
wire   [3:0] sub_ln72_fu_1292_p2;
wire   [31:0] tmp_8_fu_1361_p29;
wire   [3:0] tmp_8_fu_1361_p30;
wire   [31:0] tmp_8_fu_1361_p31;
wire   [31:0] bitcast_ln161_fu_1501_p1;
wire   [31:0] bitcast_ln161_1_fu_1519_p1;
wire   [7:0] tmp_12_fu_1505_p4;
wire   [22:0] trunc_ln161_fu_1515_p1;
wire   [0:0] icmp_ln161_1_fu_1543_p2;
wire   [0:0] icmp_ln161_fu_1537_p2;
wire   [7:0] tmp_14_fu_1523_p4;
wire   [22:0] trunc_ln161_1_fu_1533_p1;
wire   [0:0] icmp_ln161_3_fu_1561_p2;
wire   [0:0] icmp_ln161_2_fu_1555_p2;
wire   [0:0] or_ln161_fu_1549_p2;
wire   [0:0] or_ln161_1_fu_1567_p2;
wire   [7:0] tmp_9_fu_1583_p4;
wire   [22:0] trunc_ln75_fu_1593_p1;
wire   [0:0] icmp_ln75_1_fu_1603_p2;
wire   [0:0] icmp_ln75_fu_1597_p2;
wire   [0:0] or_ln75_fu_1609_p2;
wire   [31:0] xor_ln76_fu_1621_p2;
wire   [31:0] loss_fu_1626_p1;
wire   [63:0] grp_fu_511_p1;
wire   [63:0] data_fu_1644_p1;
wire   [63:0] t_fu_1652_p3;
wire   [31:0] bitcast_ln83_fu_1664_p1;
wire   [7:0] tmp_10_fu_1668_p4;
wire   [22:0] trunc_ln83_fu_1678_p1;
wire   [0:0] or_ln83_fu_1694_p2;
wire   [0:0] and_ln83_fu_1698_p2;
wire   [31:0] bitcast_ln164_fu_1712_p1;
wire   [7:0] tmp_21_fu_1716_p4;
wire   [22:0] trunc_ln164_fu_1726_p1;
wire   [0:0] or_ln164_fu_1742_p2;
wire   [31:0] bitcast_ln161_2_fu_1752_p1;
wire   [7:0] tmp_16_fu_1756_p4;
wire   [22:0] trunc_ln161_2_fu_1766_p1;
wire   [0:0] icmp_ln161_5_fu_1776_p2;
wire   [0:0] icmp_ln161_4_fu_1770_p2;
wire   [0:0] and_ln161_1_fu_1788_p2;
wire   [0:0] and_ln161_2_fu_1792_p2;
wire   [0:0] and_ln162_1_fu_1807_p2;
wire   [0:0] xor_ln161_fu_1812_p2;
wire   [0:0] and_ln162_2_fu_1818_p2;
wire   [0:0] and_ln162_fu_1803_p2;
wire   [7:0] tradeOrder_size_2_fu_1830_p3;
wire   [0:0] and_ln162_4_fu_1844_p2;
wire   [15:0] mul_ln104_fu_1859_p0;
wire   [9:0] mul_ln104_fu_1859_p1;
wire   [23:0] mul_ln104_fu_1859_p2;
wire   [23:0] shl_ln_fu_1875_p3;
wire   [48:0] mul_ln109_fu_538_p2;
wire   [15:0] tradeOrder_price_fu_1865_p4;
wire   [15:0] tradeOrder_price_1_fu_1887_p4;
wire   [15:0] tradeOrder_price_2_fu_1897_p3;
wire   [0:0] or_ln162_fu_1918_p2;
wire   [7:0] select_ln162_fu_1911_p3;
wire   [7:0] tradeOrder_orderID_fu_1922_p3;
wire  signed [8:0] sext_ln162_fu_1930_p1;
wire   [31:0] zext_ln162_fu_1934_p1;
wire   [15:0] tradeOrder_price_3_fu_1904_p3;
wire   [64:0] tmp_17_fu_1943_p6;
wire   [0:0] icmp_ln178_fu_1960_p2;
wire   [30:0] add_ln179_fu_1966_p2;
reg   [1:0] grp_fu_488_opcode;
reg    grp_fu_488_ce;
reg   [4:0] grp_fu_517_opcode;
reg   [4:0] grp_fu_522_opcode;
reg    grp_fu_612_ap_start;
wire    grp_fu_612_ap_done;
reg    grp_fu_612_ce;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state34;
reg    grp_fu_1011_ap_start;
wire    grp_fu_1011_ap_done;
reg    grp_fu_1275_ap_start;
wire    grp_fu_1275_ap_done;
reg    grp_fu_1275_ce;
reg    ap_block_state72_on_subcall_done;
wire    ap_CS_fsm_state73;
wire    ap_CS_fsm_state74;
wire    ap_CS_fsm_state75;
wire    ap_CS_fsm_state76;
wire    ap_CS_fsm_state77;
wire    ap_CS_fsm_state78;
wire    ap_CS_fsm_state79;
wire    ap_CS_fsm_state80;
wire    ap_CS_fsm_state81;
wire    ap_CS_fsm_state82;
wire    ap_CS_fsm_state83;
wire    ap_CS_fsm_state84;
wire    ap_CS_fsm_state85;
wire    ap_CS_fsm_state86;
wire    ap_CS_fsm_state87;
wire    ap_CS_fsm_state88;
wire    ap_CS_fsm_state89;
wire    ap_CS_fsm_state90;
wire    ap_CS_fsm_state91;
wire    ap_CS_fsm_state92;
wire    ap_CS_fsm_state93;
wire    ap_CS_fsm_state94;
wire    ap_CS_fsm_state95;
wire    ap_CS_fsm_state96;
wire    ap_CS_fsm_state97;
wire    ap_CS_fsm_state98;
wire    ap_CS_fsm_state99;
wire    ap_CS_fsm_state100;
wire    ap_CS_fsm_state101;
wire    ap_CS_fsm_state103;
wire    ap_CS_fsm_state104;
wire    ap_CS_fsm_state105;
reg   [154:0] ap_NS_fsm;
wire    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
reg    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
wire    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
wire    ap_ST_fsm_state41_blk;
wire    ap_ST_fsm_state42_blk;
wire    ap_ST_fsm_state43_blk;
wire    ap_ST_fsm_state44_blk;
wire    ap_ST_fsm_state45_blk;
wire    ap_ST_fsm_state46_blk;
wire    ap_ST_fsm_state47_blk;
wire    ap_ST_fsm_state48_blk;
wire    ap_ST_fsm_state49_blk;
wire    ap_ST_fsm_state50_blk;
wire    ap_ST_fsm_state51_blk;
wire    ap_ST_fsm_state52_blk;
wire    ap_ST_fsm_state53_blk;
wire    ap_ST_fsm_state54_blk;
wire    ap_ST_fsm_state55_blk;
wire    ap_ST_fsm_state56_blk;
wire    ap_ST_fsm_state57_blk;
wire    ap_ST_fsm_state58_blk;
wire    ap_ST_fsm_state59_blk;
wire    ap_ST_fsm_state60_blk;
wire    ap_ST_fsm_state61_blk;
wire    ap_ST_fsm_state62_blk;
wire    ap_ST_fsm_state63_blk;
wire    ap_ST_fsm_state64_blk;
wire    ap_ST_fsm_state65_blk;
wire    ap_ST_fsm_state66_blk;
wire    ap_ST_fsm_state67_blk;
wire    ap_ST_fsm_state68_blk;
wire    ap_ST_fsm_state69_blk;
wire    ap_ST_fsm_state70_blk;
wire    ap_ST_fsm_state71_blk;
reg    ap_ST_fsm_state72_blk;
wire    ap_ST_fsm_state73_blk;
wire    ap_ST_fsm_state74_blk;
wire    ap_ST_fsm_state75_blk;
wire    ap_ST_fsm_state76_blk;
wire    ap_ST_fsm_state77_blk;
wire    ap_ST_fsm_state78_blk;
wire    ap_ST_fsm_state79_blk;
wire    ap_ST_fsm_state80_blk;
wire    ap_ST_fsm_state81_blk;
wire    ap_ST_fsm_state82_blk;
wire    ap_ST_fsm_state83_blk;
wire    ap_ST_fsm_state84_blk;
wire    ap_ST_fsm_state85_blk;
wire    ap_ST_fsm_state86_blk;
wire    ap_ST_fsm_state87_blk;
wire    ap_ST_fsm_state88_blk;
wire    ap_ST_fsm_state89_blk;
wire    ap_ST_fsm_state90_blk;
wire    ap_ST_fsm_state91_blk;
wire    ap_ST_fsm_state92_blk;
wire    ap_ST_fsm_state93_blk;
wire    ap_ST_fsm_state94_blk;
wire    ap_ST_fsm_state95_blk;
wire    ap_ST_fsm_state96_blk;
wire    ap_ST_fsm_state97_blk;
wire    ap_ST_fsm_state98_blk;
wire    ap_ST_fsm_state99_blk;
wire    ap_ST_fsm_state100_blk;
wire    ap_ST_fsm_state101_blk;
wire    ap_ST_fsm_state102_blk;
wire    ap_ST_fsm_state103_blk;
wire    ap_ST_fsm_state104_blk;
wire    ap_ST_fsm_state105_blk;
wire    ap_ST_fsm_state106_blk;
wire    ap_ST_fsm_state107_blk;
wire    ap_ST_fsm_state108_blk;
wire    ap_ST_fsm_state109_blk;
wire    ap_ST_fsm_state110_blk;
wire    ap_ST_fsm_state111_blk;
wire    ap_ST_fsm_state112_blk;
wire    ap_ST_fsm_state113_blk;
wire    ap_ST_fsm_state114_blk;
wire    ap_ST_fsm_state115_blk;
wire    ap_ST_fsm_state116_blk;
wire    ap_ST_fsm_state117_blk;
wire    ap_ST_fsm_state118_blk;
wire    ap_ST_fsm_state119_blk;
wire    ap_ST_fsm_state120_blk;
wire    ap_ST_fsm_state121_blk;
wire    ap_ST_fsm_state122_blk;
wire    ap_ST_fsm_state123_blk;
wire    ap_ST_fsm_state124_blk;
wire    ap_ST_fsm_state125_blk;
wire    ap_ST_fsm_state126_blk;
wire    ap_ST_fsm_state127_blk;
wire    ap_ST_fsm_state128_blk;
wire    ap_ST_fsm_state129_blk;
wire    ap_ST_fsm_state130_blk;
wire    ap_ST_fsm_state131_blk;
wire    ap_ST_fsm_state132_blk;
wire    ap_ST_fsm_state133_blk;
wire    ap_ST_fsm_state134_blk;
wire    ap_ST_fsm_state135_blk;
wire    ap_ST_fsm_state136_blk;
wire    ap_ST_fsm_state137_blk;
wire    ap_ST_fsm_state138_blk;
wire    ap_ST_fsm_state139_blk;
wire    ap_ST_fsm_state140_blk;
wire    ap_ST_fsm_state141_blk;
wire    ap_ST_fsm_state142_blk;
wire    ap_ST_fsm_state143_blk;
wire    ap_ST_fsm_state144_blk;
wire    ap_ST_fsm_state145_blk;
wire    ap_ST_fsm_state146_blk;
wire    ap_ST_fsm_state147_blk;
wire    ap_ST_fsm_state148_blk;
wire    ap_ST_fsm_state149_blk;
wire    ap_ST_fsm_state150_blk;
wire    ap_ST_fsm_state151_blk;
wire    ap_ST_fsm_state152_blk;
wire    ap_ST_fsm_state153_blk;
reg    ap_ST_fsm_state154_blk;
reg    ap_ST_fsm_state155_blk;
wire    regslice_both_top_bid_U_apdone_blk;
wire   [95:0] top_bid_TDATA_int_regslice;
wire    top_bid_TVALID_int_regslice;
reg    top_bid_TREADY_int_regslice;
wire    regslice_both_top_bid_U_ack_in;
wire    regslice_both_top_ask_U_apdone_blk;
wire   [95:0] top_ask_TDATA_int_regslice;
wire    top_ask_TVALID_int_regslice;
reg    top_ask_TREADY_int_regslice;
wire    regslice_both_top_ask_U_ack_in;
wire    regslice_both_incoming_time_U_apdone_blk;
wire   [63:0] incoming_time_TDATA_int_regslice;
wire    incoming_time_TVALID_int_regslice;
reg    incoming_time_TREADY_int_regslice;
wire    regslice_both_incoming_time_U_ack_in;
wire    regslice_both_incoming_meta_U_apdone_blk;
wire   [127:0] incoming_meta_TDATA_int_regslice;
wire    incoming_meta_TVALID_int_regslice;
reg    incoming_meta_TREADY_int_regslice;
wire    regslice_both_incoming_meta_U_ack_in;
wire   [95:0] outgoing_order_TDATA_int_regslice;
reg    outgoing_order_TVALID_int_regslice;
wire    outgoing_order_TREADY_int_regslice;
wire    regslice_both_outgoing_order_U_vld_out;
reg    outgoing_time_TVALID_int_regslice;
wire    outgoing_time_TREADY_int_regslice;
wire    regslice_both_outgoing_time_U_vld_out;
reg    outgoing_meta_TVALID_int_regslice;
wire    outgoing_meta_TREADY_int_regslice;
wire    regslice_both_outgoing_meta_U_vld_out;
wire   [23:0] mul_ln104_fu_1859_p00;
wire   [48:0] mul_ln109_fu_538_p00;
wire   [3:0] tmp_8_fu_1361_p1;
wire   [3:0] tmp_8_fu_1361_p3;
wire   [3:0] tmp_8_fu_1361_p5;
wire   [3:0] tmp_8_fu_1361_p7;
wire   [3:0] tmp_8_fu_1361_p9;
wire   [3:0] tmp_8_fu_1361_p11;
wire   [3:0] tmp_8_fu_1361_p13;
wire   [3:0] tmp_8_fu_1361_p15;
wire  signed [3:0] tmp_8_fu_1361_p17;
wire  signed [3:0] tmp_8_fu_1361_p19;
wire  signed [3:0] tmp_8_fu_1361_p21;
wire  signed [3:0] tmp_8_fu_1361_p23;
wire  signed [3:0] tmp_8_fu_1361_p25;
wire  signed [3:0] tmp_8_fu_1361_p27;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 cooldownTimer = 31'd10;
#0 updateCounter = 32'd0;
#0 updateMovingAverages_float_float_float_int_shortTermPrices = 32'd0;
#0 updateMovingAverages_float_float_float_int_shortTermPrices_1 = 32'd0;
#0 updateMovingAverages_float_float_float_int_shortTermPrices_2 = 32'd0;
#0 updateMovingAverages_float_float_float_int_shortTermPrices_3 = 32'd0;
#0 updateMovingAverages_float_float_float_int_shortTermPrices_4 = 32'd0;
#0 updateMovingAverages_float_float_float_int_longTermPrices = 32'd0;
#0 updateMovingAverages_float_float_float_int_longTermPrices_5 = 32'd0;
#0 updateMovingAverages_float_float_float_int_longTermPrices_6 = 32'd0;
#0 updateMovingAverages_float_float_float_int_longTermPrices_7 = 32'd0;
#0 updateMovingAverages_float_float_float_int_longTermPrices_8 = 32'd0;
#0 updateMovingAverages_float_float_float_int_longTermPrices_9 = 32'd0;
#0 updateMovingAverages_float_float_float_int_longTermPrices_10 = 32'd0;
#0 updateMovingAverages_float_float_float_int_longTermPrices_11 = 32'd0;
#0 updateMovingAverages_float_float_float_int_longTermPrices_12 = 32'd0;
#0 updateMovingAverages_float_float_float_int_longTermPrices_13 = 32'd0;
#0 p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_10 = 32'd0;
#0 p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_11 = 32'd0;
#0 p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_12 = 32'd0;
#0 p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_13 = 32'd0;
#0 p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_14 = 32'd0;
#0 p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_15 = 32'd0;
#0 p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_16 = 32'd0;
#0 p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_17 = 32'd0;
#0 p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_18 = 32'd0;
#0 p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_19 = 32'd0;
#0 updateRSI_float_float_int_priceChanges = 32'd0;
#0 updateRSI_float_float_int_priceChanges_14 = 32'd0;
#0 updateRSI_float_float_int_priceChanges_15 = 32'd0;
#0 updateRSI_float_float_int_priceChanges_16 = 32'd0;
#0 updateRSI_float_float_int_priceChanges_17 = 32'd0;
#0 updateRSI_float_float_int_priceChanges_18 = 32'd0;
#0 updateRSI_float_float_int_priceChanges_19 = 32'd0;
#0 updateRSI_float_float_int_priceChanges_20 = 32'd0;
#0 updateRSI_float_float_int_priceChanges_21 = 32'd0;
#0 updateRSI_float_float_int_priceChanges_22 = 32'd0;
#0 p_ZZ9updateRSIfRfRiE12priceChanges_10 = 32'd0;
#0 p_ZZ9updateRSIfRfRiE12priceChanges_11 = 32'd0;
#0 p_ZZ9updateRSIfRfRiE12priceChanges_12 = 32'd0;
#0 p_ZZ9updateRSIfRfRiE12priceChanges_13 = 32'd0;
#0 ap_CS_fsm = 155'd1;
#0 grp_simple_threshold_Pipeline_VITIS_LOOP_49_1_fu_453_ap_start_reg = 1'b0;
#0 grp_simple_threshold_Pipeline_VITIS_LOOP_52_2_fu_463_ap_start_reg = 1'b0;
end

simple_threshold_simple_threshold_Pipeline_VITIS_LOOP_49_1 grp_simple_threshold_Pipeline_VITIS_LOOP_49_1_fu_453(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_simple_threshold_Pipeline_VITIS_LOOP_49_1_fu_453_ap_start),
    .ap_done(grp_simple_threshold_Pipeline_VITIS_LOOP_49_1_fu_453_ap_done),
    .ap_idle(grp_simple_threshold_Pipeline_VITIS_LOOP_49_1_fu_453_ap_idle),
    .ap_ready(grp_simple_threshold_Pipeline_VITIS_LOOP_49_1_fu_453_ap_ready),
    .updateMovingAverages_float_float_float_int_shortTermPrices_load(updateMovingAverages_float_float_float_int_shortTermPrices),
    .updateMovingAverages_float_float_float_int_shortTermPrices_1_load(updateMovingAverages_float_float_float_int_shortTermPrices_1),
    .updateMovingAverages_float_float_float_int_shortTermPrices_2_load(updateMovingAverages_float_float_float_int_shortTermPrices_2),
    .updateMovingAverages_float_float_float_int_shortTermPrices_3_load(updateMovingAverages_float_float_float_int_shortTermPrices_3),
    .updateMovingAverages_float_float_float_int_shortTermPrices_4_load(updateMovingAverages_float_float_float_int_shortTermPrices_4),
    .shortSum_out(grp_simple_threshold_Pipeline_VITIS_LOOP_49_1_fu_453_shortSum_out),
    .shortSum_out_ap_vld(grp_simple_threshold_Pipeline_VITIS_LOOP_49_1_fu_453_shortSum_out_ap_vld),
    .grp_fu_488_p_din0(grp_simple_threshold_Pipeline_VITIS_LOOP_49_1_fu_453_grp_fu_488_p_din0),
    .grp_fu_488_p_din1(grp_simple_threshold_Pipeline_VITIS_LOOP_49_1_fu_453_grp_fu_488_p_din1),
    .grp_fu_488_p_opcode(grp_simple_threshold_Pipeline_VITIS_LOOP_49_1_fu_453_grp_fu_488_p_opcode),
    .grp_fu_488_p_dout0(grp_fu_488_p2),
    .grp_fu_488_p_ce(grp_simple_threshold_Pipeline_VITIS_LOOP_49_1_fu_453_grp_fu_488_p_ce)
);

simple_threshold_simple_threshold_Pipeline_VITIS_LOOP_52_2 grp_simple_threshold_Pipeline_VITIS_LOOP_52_2_fu_463(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_simple_threshold_Pipeline_VITIS_LOOP_52_2_fu_463_ap_start),
    .ap_done(grp_simple_threshold_Pipeline_VITIS_LOOP_52_2_fu_463_ap_done),
    .ap_idle(grp_simple_threshold_Pipeline_VITIS_LOOP_52_2_fu_463_ap_idle),
    .ap_ready(grp_simple_threshold_Pipeline_VITIS_LOOP_52_2_fu_463_ap_ready),
    .updateMovingAverages_float_float_float_int_longTermPrices_load(updateMovingAverages_float_float_float_int_longTermPrices_load_reg_2121),
    .updateMovingAverages_float_float_float_int_longTermPrices_5_load(updateMovingAverages_float_float_float_int_longTermPrices_5_load_reg_2126),
    .updateMovingAverages_float_float_float_int_longTermPrices_6_load(updateMovingAverages_float_float_float_int_longTermPrices_6_load_reg_2131),
    .updateMovingAverages_float_float_float_int_longTermPrices_7_load(updateMovingAverages_float_float_float_int_longTermPrices_7_load_reg_2136),
    .updateMovingAverages_float_float_float_int_longTermPrices_8_load(updateMovingAverages_float_float_float_int_longTermPrices_8_load_reg_2141),
    .updateMovingAverages_float_float_float_int_longTermPrices_9_load(updateMovingAverages_float_float_float_int_longTermPrices_9_load_reg_2146),
    .updateMovingAverages_float_float_float_int_longTermPrices_10_load(updateMovingAverages_float_float_float_int_longTermPrices_10_load_reg_2151),
    .updateMovingAverages_float_float_float_int_longTermPrices_11_load(updateMovingAverages_float_float_float_int_longTermPrices_11_load_reg_2156),
    .updateMovingAverages_float_float_float_int_longTermPrices_12_load(updateMovingAverages_float_float_float_int_longTermPrices_12_load_reg_2161),
    .updateMovingAverages_float_float_float_int_longTermPrices_13_load(updateMovingAverages_float_float_float_int_longTermPrices_13_load_reg_2166),
    .p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_10_load(p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_10_load_reg_2171),
    .updateMovingAverages_float_float_float_int_longTermPrices_6(updateMovingAverages_float_float_float_int_longTermPrices_reg_2176),
    .updateMovingAverages_float_float_float_int_longTermPrices_7(updateMovingAverages_float_float_float_int_longTermPrices_35_reg_2181),
    .updateMovingAverages_float_float_float_int_longTermPrices_8(updateMovingAverages_float_float_float_int_longTermPrices_36_reg_2186),
    .updateMovingAverages_float_float_float_int_longTermPrices_9(updateMovingAverages_float_float_float_int_longTermPrices_37_reg_2191),
    .updateMovingAverages_float_float_float_int_longTermPrices(updateMovingAverages_float_float_float_int_longTermPrices_38_reg_2196),
    .p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_16_load(p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_16_load_reg_2201),
    .p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_17_load(p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_17_load_reg_2206),
    .p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_18_load(p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_18_load_reg_2211),
    .p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_19_load(p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_19_load_reg_2216),
    .longSum_out(grp_simple_threshold_Pipeline_VITIS_LOOP_52_2_fu_463_longSum_out),
    .longSum_out_ap_vld(grp_simple_threshold_Pipeline_VITIS_LOOP_52_2_fu_463_longSum_out_ap_vld)
);

simple_threshold_faddfsub_32ns_32ns_32_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
faddfsub_32ns_32ns_32_4_full_dsp_1_U35(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_488_p0),
    .din1(grp_fu_488_p1),
    .opcode(grp_fu_488_opcode),
    .ce(grp_fu_488_ce),
    .dout(grp_fu_488_p2)
);

simple_threshold_fdiv_32ns_32ns_32_9_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fdiv_32ns_32ns_32_9_no_dsp_1_U36(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_495_p0),
    .din1(grp_fu_495_p1),
    .ce(1'b1),
    .dout(grp_fu_495_p2)
);

simple_threshold_fdiv_32ns_32ns_32_9_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fdiv_32ns_32ns_32_9_no_dsp_1_U37(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_500_p0),
    .din1(grp_fu_500_p1),
    .ce(1'b1),
    .dout(grp_fu_500_p2)
);

simple_threshold_fptrunc_64ns_32_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
fptrunc_64ns_32_2_no_dsp_1_U38(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(div_i8_reg_2318),
    .ce(1'b1),
    .dout(grp_fu_508_p1)
);

simple_threshold_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U39(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(sub_i7_reg_2268),
    .ce(1'b1),
    .dout(grp_fu_511_p1)
);

simple_threshold_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U40(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(reg_552),
    .ce(1'b1),
    .dout(grp_fu_514_p1)
);

simple_threshold_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U41(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_517_p0),
    .din1(grp_fu_517_p1),
    .ce(1'b1),
    .opcode(grp_fu_517_opcode),
    .dout(grp_fu_517_p2)
);

simple_threshold_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U42(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_522_p0),
    .din1(grp_fu_522_p1),
    .ce(1'b1),
    .opcode(grp_fu_522_opcode),
    .dout(grp_fu_522_p2)
);

simple_threshold_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U43(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(reg_543),
    .din1(reg_552),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_526_p2)
);

simple_threshold_ddiv_64ns_64ns_64_22_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 22 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
ddiv_64ns_64ns_64_22_no_dsp_1_U44(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_534_p0),
    .din1(conv1_i_reg_2288),
    .ce(1'b1),
    .dout(grp_fu_534_p2)
);

simple_threshold_mul_24ns_26ns_49_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 26 ),
    .dout_WIDTH( 49 ))
mul_24ns_26ns_49_1_1_U45(
    .din0(mul_ln109_fu_538_p0),
    .din1(mul_ln109_fu_538_p1),
    .dout(mul_ln109_fu_538_p2)
);

simple_threshold_urem_32ns_4ns_3_36_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 3 ))
urem_32ns_4ns_3_36_seq_1_U46(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .start(grp_fu_612_ap_start),
    .done(grp_fu_612_ap_done),
    .din0(grp_fu_612_p0),
    .din1(grp_fu_612_p1),
    .ce(grp_fu_612_ce),
    .dout(grp_fu_612_p2)
);

simple_threshold_urem_32ns_6ns_5_36_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 5 ))
urem_32ns_6ns_5_36_seq_1_U47(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .start(grp_fu_1011_ap_start),
    .done(grp_fu_1011_ap_done),
    .din0(xor_ln45_reg_2025),
    .din1(grp_fu_1011_p1),
    .ce(1'b1),
    .dout(grp_fu_1011_p2)
);

simple_threshold_urem_32ns_5ns_4_36_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 4 ))
urem_32ns_5ns_4_36_seq_1_U48(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .start(grp_fu_1275_ap_start),
    .done(grp_fu_1275_ap_done),
    .din0(xor_ln45_reg_2025),
    .din1(grp_fu_1275_p1),
    .ce(grp_fu_1275_ce),
    .dout(grp_fu_1275_p2)
);

simple_threshold_sparsemux_29_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h0 ),
    .din0_WIDTH( 32 ),
    .CASE1( 4'h1 ),
    .din1_WIDTH( 32 ),
    .CASE2( 4'h2 ),
    .din2_WIDTH( 32 ),
    .CASE3( 4'h3 ),
    .din3_WIDTH( 32 ),
    .CASE4( 4'h4 ),
    .din4_WIDTH( 32 ),
    .CASE5( 4'h5 ),
    .din5_WIDTH( 32 ),
    .CASE6( 4'h6 ),
    .din6_WIDTH( 32 ),
    .CASE7( 4'h7 ),
    .din7_WIDTH( 32 ),
    .CASE8( 4'h8 ),
    .din8_WIDTH( 32 ),
    .CASE9( 4'h9 ),
    .din9_WIDTH( 32 ),
    .CASE10( 4'hA ),
    .din10_WIDTH( 32 ),
    .CASE11( 4'hB ),
    .din11_WIDTH( 32 ),
    .CASE12( 4'hC ),
    .din12_WIDTH( 32 ),
    .CASE13( 4'hD ),
    .din13_WIDTH( 32 ),
    .def_WIDTH( 32 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
sparsemux_29_4_32_1_1_U49(
    .din0(updateRSI_float_float_int_priceChanges),
    .din1(updateRSI_float_float_int_priceChanges_14),
    .din2(updateRSI_float_float_int_priceChanges_15),
    .din3(updateRSI_float_float_int_priceChanges_16),
    .din4(updateRSI_float_float_int_priceChanges_17),
    .din5(updateRSI_float_float_int_priceChanges_18),
    .din6(updateRSI_float_float_int_priceChanges_19),
    .din7(updateRSI_float_float_int_priceChanges_20),
    .din8(updateRSI_float_float_int_priceChanges_21),
    .din9(updateRSI_float_float_int_priceChanges_22),
    .din10(p_ZZ9updateRSIfRfRiE12priceChanges_10),
    .din11(p_ZZ9updateRSIfRfRiE12priceChanges_11),
    .din12(p_ZZ9updateRSIfRfRiE12priceChanges_12),
    .din13(p_ZZ9updateRSIfRfRiE12priceChanges_13),
    .def(tmp_8_fu_1361_p29),
    .sel(tmp_8_fu_1361_p30),
    .dout(tmp_8_fu_1361_p31)
);

simple_threshold_mul_16ns_10ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 24 ))
mul_16ns_10ns_24_1_1_U50(
    .din0(mul_ln104_fu_1859_p0),
    .din1(mul_ln104_fu_1859_p1),
    .dout(mul_ln104_fu_1859_p2)
);

simple_threshold_regslice_both #(
    .DataWidth( 96 ))
regslice_both_top_bid_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(top_bid_TDATA),
    .vld_in(top_bid_TVALID),
    .ack_in(regslice_both_top_bid_U_ack_in),
    .data_out(top_bid_TDATA_int_regslice),
    .vld_out(top_bid_TVALID_int_regslice),
    .ack_out(top_bid_TREADY_int_regslice),
    .apdone_blk(regslice_both_top_bid_U_apdone_blk)
);

simple_threshold_regslice_both #(
    .DataWidth( 96 ))
regslice_both_top_ask_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(top_ask_TDATA),
    .vld_in(top_ask_TVALID),
    .ack_in(regslice_both_top_ask_U_ack_in),
    .data_out(top_ask_TDATA_int_regslice),
    .vld_out(top_ask_TVALID_int_regslice),
    .ack_out(top_ask_TREADY_int_regslice),
    .apdone_blk(regslice_both_top_ask_U_apdone_blk)
);

simple_threshold_regslice_both #(
    .DataWidth( 64 ))
regslice_both_incoming_time_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(incoming_time_TDATA),
    .vld_in(incoming_time_TVALID),
    .ack_in(regslice_both_incoming_time_U_ack_in),
    .data_out(incoming_time_TDATA_int_regslice),
    .vld_out(incoming_time_TVALID_int_regslice),
    .ack_out(incoming_time_TREADY_int_regslice),
    .apdone_blk(regslice_both_incoming_time_U_apdone_blk)
);

simple_threshold_regslice_both #(
    .DataWidth( 128 ))
regslice_both_incoming_meta_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(incoming_meta_TDATA),
    .vld_in(incoming_meta_TVALID),
    .ack_in(regslice_both_incoming_meta_U_ack_in),
    .data_out(incoming_meta_TDATA_int_regslice),
    .vld_out(incoming_meta_TVALID_int_regslice),
    .ack_out(incoming_meta_TREADY_int_regslice),
    .apdone_blk(regslice_both_incoming_meta_U_apdone_blk)
);

simple_threshold_regslice_both #(
    .DataWidth( 96 ))
regslice_both_outgoing_order_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(outgoing_order_TDATA_int_regslice),
    .vld_in(outgoing_order_TVALID_int_regslice),
    .ack_in(outgoing_order_TREADY_int_regslice),
    .data_out(outgoing_order_TDATA),
    .vld_out(regslice_both_outgoing_order_U_vld_out),
    .ack_out(outgoing_order_TREADY),
    .apdone_blk(regslice_both_outgoing_order_U_apdone_blk)
);

simple_threshold_regslice_both #(
    .DataWidth( 64 ))
regslice_both_outgoing_time_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(incoming_time_TDATA_int_regslice),
    .vld_in(outgoing_time_TVALID_int_regslice),
    .ack_in(outgoing_time_TREADY_int_regslice),
    .data_out(outgoing_time_TDATA),
    .vld_out(regslice_both_outgoing_time_U_vld_out),
    .ack_out(outgoing_time_TREADY),
    .apdone_blk(regslice_both_outgoing_time_U_apdone_blk)
);

simple_threshold_regslice_both #(
    .DataWidth( 128 ))
regslice_both_outgoing_meta_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(incoming_meta_TDATA_int_regslice),
    .vld_in(outgoing_meta_TVALID_int_regslice),
    .ack_in(outgoing_meta_TREADY_int_regslice),
    .data_out(outgoing_meta_TDATA),
    .vld_out(regslice_both_outgoing_meta_U_vld_out),
    .ack_out(outgoing_meta_TREADY),
    .apdone_blk(regslice_both_outgoing_meta_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_simple_threshold_Pipeline_VITIS_LOOP_49_1_fu_453_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state71)) begin
            grp_simple_threshold_Pipeline_VITIS_LOOP_49_1_fu_453_ap_start_reg <= 1'b1;
        end else if ((grp_simple_threshold_Pipeline_VITIS_LOOP_49_1_fu_453_ap_ready == 1'b1)) begin
            grp_simple_threshold_Pipeline_VITIS_LOOP_49_1_fu_453_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_simple_threshold_Pipeline_VITIS_LOOP_52_2_fu_463_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state71)) begin
            grp_simple_threshold_Pipeline_VITIS_LOOP_52_2_fu_463_ap_start_reg <= 1'b1;
        end else if ((grp_simple_threshold_Pipeline_VITIS_LOOP_52_2_fu_463_ap_ready == 1'b1)) begin
            grp_simple_threshold_Pipeline_VITIS_LOOP_52_2_fu_463_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((~((1'b1 == ap_block_state154_io) | (1'b1 == ap_block_state154)) & (icmp_ln166_fu_1938_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state154)) | ((1'd0 == and_ln164_reg_2338) & (1'b1 == ap_CS_fsm_state153)) | ((tmp_nbreadreq_fu_350_p3 == 1'd1) & (1'd0 == and_ln151_fu_580_p2) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_nbreadreq_fu_350_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        cooldownTimer_flag_3_reg_413 <= 1'd0;
    end else if ((~((1'b1 == ap_block_state155_io) | (1'b1 == ap_block_state155)) & (icmp_ln166_reg_2372 == 1'd0) & (1'd1 == and_ln164_reg_2338) & (1'd1 == and_ln151_reg_2011) & (tmp_reg_2004 == 1'd1) & (1'b1 == ap_CS_fsm_state155))) begin
        cooldownTimer_flag_3_reg_413 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((~((1'b1 == ap_block_state154_io) | (1'b1 == ap_block_state154)) & (icmp_ln166_fu_1938_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state154)) | ((1'd0 == and_ln164_reg_2338) & (1'b1 == ap_CS_fsm_state153)))) begin
        empty_reg_434 <= 31'd0;
    end else if ((((tmp_nbreadreq_fu_350_p3 == 1'd1) & (1'd0 == and_ln151_fu_580_p2) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_nbreadreq_fu_350_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        empty_reg_434 <= cooldownTimer;
    end else if ((~((1'b1 == ap_block_state155_io) | (1'b1 == ap_block_state155)) & (icmp_ln166_reg_2372 == 1'd0) & (1'd1 == and_ln164_reg_2338) & (1'd1 == and_ln151_reg_2011) & (tmp_reg_2004 == 1'd1) & (1'b1 == ap_CS_fsm_state155))) begin
        empty_reg_434 <= 31'd10;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        and_ln151_reg_2011 <= and_ln151_fu_580_p2;
        tmp_24_reg_2018 <= updateCounter[32'd31];
        tmp_reg_2004 <= tmp_nbreadreq_fu_350_p3;
        xor_ln45_reg_2025 <= xor_ln45_fu_606_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state111)) begin
        and_ln161_reg_2241 <= and_ln161_fu_1573_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state153)) begin
        and_ln162_3_reg_2354 <= and_ln162_3_fu_1824_p2;
        isUptrend_reg_2348 <= isUptrend_fu_1797_p2;
        tradeOrder_direction_reg_2367 <= tradeOrder_direction_fu_1850_p2;
        tradeOrder_size_3_reg_2361 <= tradeOrder_size_3_fu_1837_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state141)) begin
        and_ln164_reg_2338 <= and_ln164_fu_1746_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state112)) begin
        and_ln75_reg_2252 <= and_ln75_fu_1615_p2;
        bitcast_ln75_reg_2247 <= bitcast_ln75_fu_1579_p1;
        tmp_15_reg_2258 <= grp_fu_522_p2;
        tmp_19_reg_2263 <= grp_fu_526_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        ask_price_reg_2042 <= ask_price_fu_632_p1;
        ask_size_reg_2047 <= {{top_ask_TDATA_int_regslice[23:16]}};
        bid_price_reg_2032 <= bid_price_fu_618_p1;
        bid_size_reg_2037 <= {{top_bid_TDATA_int_regslice[23:16]}};
        lshr_ln_reg_2052 <= {{add_ln156_fu_654_p2[16:1]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state116)) begin
        conv1_i_reg_2288 <= grp_fu_514_p1;
        gain_1_reg_2273 <= gain_1_fu_1630_p3;
        loss_1_reg_2278 <= loss_1_fu_1637_p3;
        trunc_ln479_reg_2283 <= trunc_ln479_fu_1648_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state155_io) | (1'b1 == ap_block_state155)) & (or_ln178_fu_1972_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state155))) begin
        cooldownTimer <= select_ln178_fu_1978_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state138)) begin
        div_i8_reg_2318 <= grp_fu_534_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state140)) begin
        icmp_ln164_1_reg_2333 <= icmp_ln164_1_fu_1736_p2;
        icmp_ln164_reg_2328 <= icmp_ln164_fu_1730_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state154)) begin
        icmp_ln166_reg_2372 <= icmp_ln166_fu_1938_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        icmp_ln70_reg_2221 <= icmp_ln70_fu_1269_p2;
        p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_10_load_reg_2171 <= ap_sig_allocacmp_p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_10_load;
        p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_16_load_reg_2201 <= ap_sig_allocacmp_p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_16_load;
        p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_17_load_reg_2206 <= ap_sig_allocacmp_p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_17_load;
        p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_18_load_reg_2211 <= ap_sig_allocacmp_p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_18_load;
        p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_19_load_reg_2216 <= ap_sig_allocacmp_p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_19_load;
        updateCounter <= add_ln58_fu_1258_p2;
        updateMovingAverages_float_float_float_int_longTermPrices_10_load_reg_2151 <= ap_sig_allocacmp_updateMovingAverages_float_float_float_int_longTermPrices_10_load;
        updateMovingAverages_float_float_float_int_longTermPrices_11_load_reg_2156 <= ap_sig_allocacmp_updateMovingAverages_float_float_float_int_longTermPrices_11_load;
        updateMovingAverages_float_float_float_int_longTermPrices_12_load_reg_2161 <= ap_sig_allocacmp_updateMovingAverages_float_float_float_int_longTermPrices_12_load;
        updateMovingAverages_float_float_float_int_longTermPrices_13_load_reg_2166 <= ap_sig_allocacmp_updateMovingAverages_float_float_float_int_longTermPrices_13_load;
        updateMovingAverages_float_float_float_int_longTermPrices_35_reg_2181 <= ap_sig_allocacmp_updateMovingAverages_float_float_float_int_longTermPrices_35;
        updateMovingAverages_float_float_float_int_longTermPrices_36_reg_2186 <= ap_sig_allocacmp_updateMovingAverages_float_float_float_int_longTermPrices_36;
        updateMovingAverages_float_float_float_int_longTermPrices_37_reg_2191 <= ap_sig_allocacmp_updateMovingAverages_float_float_float_int_longTermPrices_37;
        updateMovingAverages_float_float_float_int_longTermPrices_38_reg_2196 <= ap_sig_allocacmp_updateMovingAverages_float_float_float_int_longTermPrices_38;
        updateMovingAverages_float_float_float_int_longTermPrices_5_load_reg_2126 <= ap_sig_allocacmp_updateMovingAverages_float_float_float_int_longTermPrices_5_load;
        updateMovingAverages_float_float_float_int_longTermPrices_6_load_reg_2131 <= ap_sig_allocacmp_updateMovingAverages_float_float_float_int_longTermPrices_6_load;
        updateMovingAverages_float_float_float_int_longTermPrices_7_load_reg_2136 <= ap_sig_allocacmp_updateMovingAverages_float_float_float_int_longTermPrices_7_load;
        updateMovingAverages_float_float_float_int_longTermPrices_8_load_reg_2141 <= ap_sig_allocacmp_updateMovingAverages_float_float_float_int_longTermPrices_8_load;
        updateMovingAverages_float_float_float_int_longTermPrices_9_load_reg_2146 <= ap_sig_allocacmp_updateMovingAverages_float_float_float_int_longTermPrices_9_load;
        updateMovingAverages_float_float_float_int_longTermPrices_load_reg_2121 <= ap_sig_allocacmp_updateMovingAverages_float_float_float_int_longTermPrices_load;
        updateMovingAverages_float_float_float_int_longTermPrices_reg_2176 <= ap_sig_allocacmp_updateMovingAverages_float_float_float_int_longTermPrices;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state126)) begin
        icmp_ln83_1_reg_2303 <= icmp_ln83_1_fu_1688_p2;
        icmp_ln83_reg_2298 <= icmp_ln83_fu_1682_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state152)) begin
        or_ln161_2_reg_2342 <= or_ln161_2_fu_1782_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln46_fu_1026_p3 == 5'd10) & (1'b1 == ap_CS_fsm_state71))) begin
        p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_10 <= select_ln156_2_reg_2060;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln46_fu_1026_p3 == 5'd11) & (1'b1 == ap_CS_fsm_state71))) begin
        p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_11 <= select_ln156_2_reg_2060;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln46_fu_1026_p3 == 5'd12) & (1'b1 == ap_CS_fsm_state71))) begin
        p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_12 <= select_ln156_2_reg_2060;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln46_fu_1026_p3 == 5'd13) & (1'b1 == ap_CS_fsm_state71))) begin
        p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_13 <= select_ln156_2_reg_2060;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln46_fu_1026_p3 == 5'd14) & (1'b1 == ap_CS_fsm_state71))) begin
        p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_14 <= select_ln156_2_reg_2060;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln46_fu_1026_p3 == 5'd15) & (1'b1 == ap_CS_fsm_state71))) begin
        p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_15 <= select_ln156_2_reg_2060;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln46_fu_1026_p3 == 5'd16) & (1'b1 == ap_CS_fsm_state71))) begin
        p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_16 <= select_ln156_2_reg_2060;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln46_fu_1026_p3 == 5'd17) & (1'b1 == ap_CS_fsm_state71))) begin
        p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_17 <= select_ln156_2_reg_2060;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln46_fu_1026_p3 == 5'd18) & (1'b1 == ap_CS_fsm_state71))) begin
        p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_18 <= select_ln156_2_reg_2060;
    end
end

always @ (posedge ap_clk) begin
    if ((~(select_ln46_fu_1026_p3 == 5'd18) & ~(select_ln46_fu_1026_p3 == 5'd17) & ~(select_ln46_fu_1026_p3 == 5'd16) & ~(select_ln46_fu_1026_p3 == 5'd15) & ~(select_ln46_fu_1026_p3 == 5'd14) & ~(select_ln46_fu_1026_p3 == 5'd13) & ~(select_ln46_fu_1026_p3 == 5'd12) & ~(select_ln46_fu_1026_p3 == 5'd11) & ~(select_ln46_fu_1026_p3 == 5'd10) & ~(select_ln46_fu_1026_p3 == 5'd9) & ~(select_ln46_fu_1026_p3 == 5'd8) & ~(select_ln46_fu_1026_p3 == 5'd7) & ~(select_ln46_fu_1026_p3 == 5'd6) & ~(select_ln46_fu_1026_p3 == 5'd5) & ~(select_ln46_fu_1026_p3 == 5'd4) & ~(select_ln46_fu_1026_p3 == 5'd3) & ~(select_ln46_fu_1026_p3 == 5'd2) & ~(select_ln46_fu_1026_p3 == 5'd1) & ~(select_ln46_fu_1026_p3 == 5'd0) & (1'b1 == ap_CS_fsm_state71))) begin
        p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_19 <= select_ln156_2_reg_2060;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln72_reg_2232 == 4'd9) & (1'b1 == ap_CS_fsm_state110))) begin
        p_ZZ9updateRSIfRfRiE12priceChanges_10 <= select_ln156_2_reg_2060;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln72_reg_2232 == 4'd10) & (1'b1 == ap_CS_fsm_state110))) begin
        p_ZZ9updateRSIfRfRiE12priceChanges_11 <= select_ln156_2_reg_2060;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln72_reg_2232 == 4'd11) & (1'b1 == ap_CS_fsm_state110))) begin
        p_ZZ9updateRSIfRfRiE12priceChanges_12 <= select_ln156_2_reg_2060;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln72_reg_2232 == 4'd12) & (1'b1 == ap_CS_fsm_state110))) begin
        p_ZZ9updateRSIfRfRiE12priceChanges_13 <= select_ln156_2_reg_2060;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state106)) begin
        previousPrice_reg_2236 <= previousPrice_fu_1425_p3;
        select_ln72_reg_2232 <= select_ln72_fu_1298_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state147) | (1'b1 == ap_CS_fsm_state134) | (1'b1 == ap_CS_fsm_state125) | (1'b1 == ap_CS_fsm_state110))) begin
        reg_543 <= grp_fu_495_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state125) | (1'b1 == ap_CS_fsm_state110))) begin
        reg_552 <= grp_fu_500_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state151) | (1'b1 == ap_CS_fsm_state138) | (1'b1 == ap_CS_fsm_state110))) begin
        reg_562 <= grp_fu_488_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        select_ln156_2_reg_2060 <= select_ln156_2_fu_956_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state114)) begin
        sub_i7_reg_2268 <= grp_fu_488_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state127)) begin
        tmp_11_reg_2308 <= grp_fu_517_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln46_fu_1026_p3 == 5'd0) & (1'b1 == ap_CS_fsm_state71))) begin
        updateMovingAverages_float_float_float_int_longTermPrices <= select_ln156_2_reg_2060;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln46_fu_1026_p3 == 5'd6) & (1'b1 == ap_CS_fsm_state71))) begin
        updateMovingAverages_float_float_float_int_longTermPrices_10 <= select_ln156_2_reg_2060;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln46_fu_1026_p3 == 5'd7) & (1'b1 == ap_CS_fsm_state71))) begin
        updateMovingAverages_float_float_float_int_longTermPrices_11 <= select_ln156_2_reg_2060;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln46_fu_1026_p3 == 5'd8) & (1'b1 == ap_CS_fsm_state71))) begin
        updateMovingAverages_float_float_float_int_longTermPrices_12 <= select_ln156_2_reg_2060;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln46_fu_1026_p3 == 5'd9) & (1'b1 == ap_CS_fsm_state71))) begin
        updateMovingAverages_float_float_float_int_longTermPrices_13 <= select_ln156_2_reg_2060;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln46_fu_1026_p3 == 5'd1) & (1'b1 == ap_CS_fsm_state71))) begin
        updateMovingAverages_float_float_float_int_longTermPrices_5 <= select_ln156_2_reg_2060;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln46_fu_1026_p3 == 5'd2) & (1'b1 == ap_CS_fsm_state71))) begin
        updateMovingAverages_float_float_float_int_longTermPrices_6 <= select_ln156_2_reg_2060;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln46_fu_1026_p3 == 5'd3) & (1'b1 == ap_CS_fsm_state71))) begin
        updateMovingAverages_float_float_float_int_longTermPrices_7 <= select_ln156_2_reg_2060;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln46_fu_1026_p3 == 5'd4) & (1'b1 == ap_CS_fsm_state71))) begin
        updateMovingAverages_float_float_float_int_longTermPrices_8 <= select_ln156_2_reg_2060;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln46_fu_1026_p3 == 5'd5) & (1'b1 == ap_CS_fsm_state71))) begin
        updateMovingAverages_float_float_float_int_longTermPrices_9 <= select_ln156_2_reg_2060;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln45_fu_974_p3 == 3'd0) & (1'b1 == ap_CS_fsm_state36))) begin
        updateMovingAverages_float_float_float_int_shortTermPrices <= select_ln156_2_fu_956_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln45_fu_974_p3 == 3'd1) & (1'b1 == ap_CS_fsm_state36))) begin
        updateMovingAverages_float_float_float_int_shortTermPrices_1 <= select_ln156_2_fu_956_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln45_fu_974_p3 == 3'd2) & (1'b1 == ap_CS_fsm_state36))) begin
        updateMovingAverages_float_float_float_int_shortTermPrices_2 <= select_ln156_2_fu_956_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln45_fu_974_p3 == 3'd3) & (1'b1 == ap_CS_fsm_state36))) begin
        updateMovingAverages_float_float_float_int_shortTermPrices_3 <= select_ln156_2_fu_956_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~(select_ln45_fu_974_p3 == 3'd3) & ~(select_ln45_fu_974_p3 == 3'd2) & ~(select_ln45_fu_974_p3 == 3'd1) & ~(select_ln45_fu_974_p3 == 3'd0) & (1'b1 == ap_CS_fsm_state36))) begin
        updateMovingAverages_float_float_float_int_shortTermPrices_4 <= select_ln156_2_fu_956_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state110) & ((select_ln72_reg_2232 == 4'd13) | ((select_ln72_reg_2232 == 4'd14) | (select_ln72_reg_2232 == 4'd15))))) begin
        updateRSI_float_float_int_priceChanges <= select_ln156_2_reg_2060;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln72_reg_2232 == 4'd0) & (1'b1 == ap_CS_fsm_state110))) begin
        updateRSI_float_float_int_priceChanges_14 <= select_ln156_2_reg_2060;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln72_reg_2232 == 4'd1) & (1'b1 == ap_CS_fsm_state110))) begin
        updateRSI_float_float_int_priceChanges_15 <= select_ln156_2_reg_2060;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln72_reg_2232 == 4'd2) & (1'b1 == ap_CS_fsm_state110))) begin
        updateRSI_float_float_int_priceChanges_16 <= select_ln156_2_reg_2060;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln72_reg_2232 == 4'd3) & (1'b1 == ap_CS_fsm_state110))) begin
        updateRSI_float_float_int_priceChanges_17 <= select_ln156_2_reg_2060;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln72_reg_2232 == 4'd4) & (1'b1 == ap_CS_fsm_state110))) begin
        updateRSI_float_float_int_priceChanges_18 <= select_ln156_2_reg_2060;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln72_reg_2232 == 4'd5) & (1'b1 == ap_CS_fsm_state110))) begin
        updateRSI_float_float_int_priceChanges_19 <= select_ln156_2_reg_2060;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln72_reg_2232 == 4'd6) & (1'b1 == ap_CS_fsm_state110))) begin
        updateRSI_float_float_int_priceChanges_20 <= select_ln156_2_reg_2060;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln72_reg_2232 == 4'd7) & (1'b1 == ap_CS_fsm_state110))) begin
        updateRSI_float_float_int_priceChanges_21 <= select_ln156_2_reg_2060;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln72_reg_2232 == 4'd8) & (1'b1 == ap_CS_fsm_state110))) begin
        updateRSI_float_float_int_priceChanges_22 <= select_ln156_2_reg_2060;
    end
end

assign ap_ST_fsm_state100_blk = 1'b0;

assign ap_ST_fsm_state101_blk = 1'b0;

assign ap_ST_fsm_state102_blk = 1'b0;

assign ap_ST_fsm_state103_blk = 1'b0;

assign ap_ST_fsm_state104_blk = 1'b0;

assign ap_ST_fsm_state105_blk = 1'b0;

assign ap_ST_fsm_state106_blk = 1'b0;

assign ap_ST_fsm_state107_blk = 1'b0;

assign ap_ST_fsm_state108_blk = 1'b0;

assign ap_ST_fsm_state109_blk = 1'b0;

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state110_blk = 1'b0;

assign ap_ST_fsm_state111_blk = 1'b0;

assign ap_ST_fsm_state112_blk = 1'b0;

assign ap_ST_fsm_state113_blk = 1'b0;

assign ap_ST_fsm_state114_blk = 1'b0;

assign ap_ST_fsm_state115_blk = 1'b0;

assign ap_ST_fsm_state116_blk = 1'b0;

assign ap_ST_fsm_state117_blk = 1'b0;

assign ap_ST_fsm_state118_blk = 1'b0;

assign ap_ST_fsm_state119_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state120_blk = 1'b0;

assign ap_ST_fsm_state121_blk = 1'b0;

assign ap_ST_fsm_state122_blk = 1'b0;

assign ap_ST_fsm_state123_blk = 1'b0;

assign ap_ST_fsm_state124_blk = 1'b0;

assign ap_ST_fsm_state125_blk = 1'b0;

assign ap_ST_fsm_state126_blk = 1'b0;

assign ap_ST_fsm_state127_blk = 1'b0;

assign ap_ST_fsm_state128_blk = 1'b0;

assign ap_ST_fsm_state129_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state130_blk = 1'b0;

assign ap_ST_fsm_state131_blk = 1'b0;

assign ap_ST_fsm_state132_blk = 1'b0;

assign ap_ST_fsm_state133_blk = 1'b0;

assign ap_ST_fsm_state134_blk = 1'b0;

assign ap_ST_fsm_state135_blk = 1'b0;

assign ap_ST_fsm_state136_blk = 1'b0;

assign ap_ST_fsm_state137_blk = 1'b0;

assign ap_ST_fsm_state138_blk = 1'b0;

assign ap_ST_fsm_state139_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state140_blk = 1'b0;

assign ap_ST_fsm_state141_blk = 1'b0;

assign ap_ST_fsm_state142_blk = 1'b0;

assign ap_ST_fsm_state143_blk = 1'b0;

assign ap_ST_fsm_state144_blk = 1'b0;

assign ap_ST_fsm_state145_blk = 1'b0;

assign ap_ST_fsm_state146_blk = 1'b0;

assign ap_ST_fsm_state147_blk = 1'b0;

assign ap_ST_fsm_state148_blk = 1'b0;

assign ap_ST_fsm_state149_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state150_blk = 1'b0;

assign ap_ST_fsm_state151_blk = 1'b0;

assign ap_ST_fsm_state152_blk = 1'b0;

assign ap_ST_fsm_state153_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_block_state154_io) | (1'b1 == ap_block_state154))) begin
        ap_ST_fsm_state154_blk = 1'b1;
    end else begin
        ap_ST_fsm_state154_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_block_state155_io) | (1'b1 == ap_block_state155))) begin
        ap_ST_fsm_state155_blk = 1'b1;
    end else begin
        ap_ST_fsm_state155_blk = 1'b0;
    end
end

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

assign ap_ST_fsm_state1_blk = 1'b0;

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state35)) begin
        ap_ST_fsm_state35_blk = 1'b1;
    end else begin
        ap_ST_fsm_state35_blk = 1'b0;
    end
end

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

assign ap_ST_fsm_state38_blk = 1'b0;

assign ap_ST_fsm_state39_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state40_blk = 1'b0;

assign ap_ST_fsm_state41_blk = 1'b0;

assign ap_ST_fsm_state42_blk = 1'b0;

assign ap_ST_fsm_state43_blk = 1'b0;

assign ap_ST_fsm_state44_blk = 1'b0;

assign ap_ST_fsm_state45_blk = 1'b0;

assign ap_ST_fsm_state46_blk = 1'b0;

assign ap_ST_fsm_state47_blk = 1'b0;

assign ap_ST_fsm_state48_blk = 1'b0;

assign ap_ST_fsm_state49_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state50_blk = 1'b0;

assign ap_ST_fsm_state51_blk = 1'b0;

assign ap_ST_fsm_state52_blk = 1'b0;

assign ap_ST_fsm_state53_blk = 1'b0;

assign ap_ST_fsm_state54_blk = 1'b0;

assign ap_ST_fsm_state55_blk = 1'b0;

assign ap_ST_fsm_state56_blk = 1'b0;

assign ap_ST_fsm_state57_blk = 1'b0;

assign ap_ST_fsm_state58_blk = 1'b0;

assign ap_ST_fsm_state59_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state60_blk = 1'b0;

assign ap_ST_fsm_state61_blk = 1'b0;

assign ap_ST_fsm_state62_blk = 1'b0;

assign ap_ST_fsm_state63_blk = 1'b0;

assign ap_ST_fsm_state64_blk = 1'b0;

assign ap_ST_fsm_state65_blk = 1'b0;

assign ap_ST_fsm_state66_blk = 1'b0;

assign ap_ST_fsm_state67_blk = 1'b0;

assign ap_ST_fsm_state68_blk = 1'b0;

assign ap_ST_fsm_state69_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state70_blk = 1'b0;

assign ap_ST_fsm_state71_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state72_on_subcall_done)) begin
        ap_ST_fsm_state72_blk = 1'b1;
    end else begin
        ap_ST_fsm_state72_blk = 1'b0;
    end
end

assign ap_ST_fsm_state73_blk = 1'b0;

assign ap_ST_fsm_state74_blk = 1'b0;

assign ap_ST_fsm_state75_blk = 1'b0;

assign ap_ST_fsm_state76_blk = 1'b0;

assign ap_ST_fsm_state77_blk = 1'b0;

assign ap_ST_fsm_state78_blk = 1'b0;

assign ap_ST_fsm_state79_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state80_blk = 1'b0;

assign ap_ST_fsm_state81_blk = 1'b0;

assign ap_ST_fsm_state82_blk = 1'b0;

assign ap_ST_fsm_state83_blk = 1'b0;

assign ap_ST_fsm_state84_blk = 1'b0;

assign ap_ST_fsm_state85_blk = 1'b0;

assign ap_ST_fsm_state86_blk = 1'b0;

assign ap_ST_fsm_state87_blk = 1'b0;

assign ap_ST_fsm_state88_blk = 1'b0;

assign ap_ST_fsm_state89_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state90_blk = 1'b0;

assign ap_ST_fsm_state91_blk = 1'b0;

assign ap_ST_fsm_state92_blk = 1'b0;

assign ap_ST_fsm_state93_blk = 1'b0;

assign ap_ST_fsm_state94_blk = 1'b0;

assign ap_ST_fsm_state95_blk = 1'b0;

assign ap_ST_fsm_state96_blk = 1'b0;

assign ap_ST_fsm_state97_blk = 1'b0;

assign ap_ST_fsm_state98_blk = 1'b0;

assign ap_ST_fsm_state99_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((icmp_ln166_reg_2372 == 1'd0) & (1'd1 == and_ln164_reg_2338) & (1'd1 == and_ln151_reg_2011) & (tmp_reg_2004 == 1'd1) & (1'b1 == ap_CS_fsm_state155))) begin
        ap_phi_mux_cooldownTimer_flag_3_phi_fu_417_p10 = 1'd1;
    end else begin
        ap_phi_mux_cooldownTimer_flag_3_phi_fu_417_p10 = cooldownTimer_flag_3_reg_413;
    end
end

always @ (*) begin
    if (((icmp_ln166_reg_2372 == 1'd0) & (1'd1 == and_ln164_reg_2338) & (1'd1 == and_ln151_reg_2011) & (tmp_reg_2004 == 1'd1) & (1'b1 == ap_CS_fsm_state155))) begin
        ap_phi_mux_empty_phi_fu_438_p10 = 31'd10;
    end else begin
        ap_phi_mux_empty_phi_fu_438_p10 = empty_reg_434;
    end
end

always @ (*) begin
    if (((select_ln46_fu_1026_p3 == 5'd10) & (1'b1 == ap_CS_fsm_state71))) begin
        ap_sig_allocacmp_p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_10_load = select_ln156_2_reg_2060;
    end else begin
        ap_sig_allocacmp_p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_10_load = p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_10;
    end
end

always @ (*) begin
    if (((select_ln46_fu_1026_p3 == 5'd16) & (1'b1 == ap_CS_fsm_state71))) begin
        ap_sig_allocacmp_p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_16_load = select_ln156_2_reg_2060;
    end else begin
        ap_sig_allocacmp_p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_16_load = p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_16;
    end
end

always @ (*) begin
    if (((select_ln46_fu_1026_p3 == 5'd17) & (1'b1 == ap_CS_fsm_state71))) begin
        ap_sig_allocacmp_p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_17_load = select_ln156_2_reg_2060;
    end else begin
        ap_sig_allocacmp_p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_17_load = p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_17;
    end
end

always @ (*) begin
    if (((select_ln46_fu_1026_p3 == 5'd18) & (1'b1 == ap_CS_fsm_state71))) begin
        ap_sig_allocacmp_p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_18_load = select_ln156_2_reg_2060;
    end else begin
        ap_sig_allocacmp_p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_18_load = p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_18;
    end
end

always @ (*) begin
    if ((~(select_ln46_fu_1026_p3 == 5'd18) & ~(select_ln46_fu_1026_p3 == 5'd17) & ~(select_ln46_fu_1026_p3 == 5'd16) & ~(select_ln46_fu_1026_p3 == 5'd15) & ~(select_ln46_fu_1026_p3 == 5'd14) & ~(select_ln46_fu_1026_p3 == 5'd13) & ~(select_ln46_fu_1026_p3 == 5'd12) & ~(select_ln46_fu_1026_p3 == 5'd11) & ~(select_ln46_fu_1026_p3 == 5'd10) & ~(select_ln46_fu_1026_p3 == 5'd9) & ~(select_ln46_fu_1026_p3 == 5'd8) & ~(select_ln46_fu_1026_p3 == 5'd7) & ~(select_ln46_fu_1026_p3 == 5'd6) & ~(select_ln46_fu_1026_p3 == 5'd5) & ~(select_ln46_fu_1026_p3 == 5'd4) & ~(select_ln46_fu_1026_p3 == 5'd3) & ~(select_ln46_fu_1026_p3 == 5'd2) & ~(select_ln46_fu_1026_p3 == 5'd1) & ~(select_ln46_fu_1026_p3 == 5'd0) & (1'b1 == ap_CS_fsm_state71))) begin
        ap_sig_allocacmp_p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_19_load = select_ln156_2_reg_2060;
    end else begin
        ap_sig_allocacmp_p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_19_load = p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_19;
    end
end

always @ (*) begin
    if (((select_ln46_fu_1026_p3 == 5'd11) & (1'b1 == ap_CS_fsm_state71))) begin
        ap_sig_allocacmp_updateMovingAverages_float_float_float_int_longTermPrices = select_ln156_2_reg_2060;
    end else begin
        ap_sig_allocacmp_updateMovingAverages_float_float_float_int_longTermPrices = p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_11;
    end
end

always @ (*) begin
    if (((select_ln46_fu_1026_p3 == 5'd6) & (1'b1 == ap_CS_fsm_state71))) begin
        ap_sig_allocacmp_updateMovingAverages_float_float_float_int_longTermPrices_10_load = select_ln156_2_reg_2060;
    end else begin
        ap_sig_allocacmp_updateMovingAverages_float_float_float_int_longTermPrices_10_load = updateMovingAverages_float_float_float_int_longTermPrices_10;
    end
end

always @ (*) begin
    if (((select_ln46_fu_1026_p3 == 5'd7) & (1'b1 == ap_CS_fsm_state71))) begin
        ap_sig_allocacmp_updateMovingAverages_float_float_float_int_longTermPrices_11_load = select_ln156_2_reg_2060;
    end else begin
        ap_sig_allocacmp_updateMovingAverages_float_float_float_int_longTermPrices_11_load = updateMovingAverages_float_float_float_int_longTermPrices_11;
    end
end

always @ (*) begin
    if (((select_ln46_fu_1026_p3 == 5'd8) & (1'b1 == ap_CS_fsm_state71))) begin
        ap_sig_allocacmp_updateMovingAverages_float_float_float_int_longTermPrices_12_load = select_ln156_2_reg_2060;
    end else begin
        ap_sig_allocacmp_updateMovingAverages_float_float_float_int_longTermPrices_12_load = updateMovingAverages_float_float_float_int_longTermPrices_12;
    end
end

always @ (*) begin
    if (((select_ln46_fu_1026_p3 == 5'd9) & (1'b1 == ap_CS_fsm_state71))) begin
        ap_sig_allocacmp_updateMovingAverages_float_float_float_int_longTermPrices_13_load = select_ln156_2_reg_2060;
    end else begin
        ap_sig_allocacmp_updateMovingAverages_float_float_float_int_longTermPrices_13_load = updateMovingAverages_float_float_float_int_longTermPrices_13;
    end
end

always @ (*) begin
    if (((select_ln46_fu_1026_p3 == 5'd12) & (1'b1 == ap_CS_fsm_state71))) begin
        ap_sig_allocacmp_updateMovingAverages_float_float_float_int_longTermPrices_35 = select_ln156_2_reg_2060;
    end else begin
        ap_sig_allocacmp_updateMovingAverages_float_float_float_int_longTermPrices_35 = p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_12;
    end
end

always @ (*) begin
    if (((select_ln46_fu_1026_p3 == 5'd13) & (1'b1 == ap_CS_fsm_state71))) begin
        ap_sig_allocacmp_updateMovingAverages_float_float_float_int_longTermPrices_36 = select_ln156_2_reg_2060;
    end else begin
        ap_sig_allocacmp_updateMovingAverages_float_float_float_int_longTermPrices_36 = p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_13;
    end
end

always @ (*) begin
    if (((select_ln46_fu_1026_p3 == 5'd14) & (1'b1 == ap_CS_fsm_state71))) begin
        ap_sig_allocacmp_updateMovingAverages_float_float_float_int_longTermPrices_37 = select_ln156_2_reg_2060;
    end else begin
        ap_sig_allocacmp_updateMovingAverages_float_float_float_int_longTermPrices_37 = p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_14;
    end
end

always @ (*) begin
    if (((select_ln46_fu_1026_p3 == 5'd15) & (1'b1 == ap_CS_fsm_state71))) begin
        ap_sig_allocacmp_updateMovingAverages_float_float_float_int_longTermPrices_38 = select_ln156_2_reg_2060;
    end else begin
        ap_sig_allocacmp_updateMovingAverages_float_float_float_int_longTermPrices_38 = p_ZZ20updateMovingAveragesfRfS_RiE14longTermPrices_15;
    end
end

always @ (*) begin
    if (((select_ln46_fu_1026_p3 == 5'd1) & (1'b1 == ap_CS_fsm_state71))) begin
        ap_sig_allocacmp_updateMovingAverages_float_float_float_int_longTermPrices_5_load = select_ln156_2_reg_2060;
    end else begin
        ap_sig_allocacmp_updateMovingAverages_float_float_float_int_longTermPrices_5_load = updateMovingAverages_float_float_float_int_longTermPrices_5;
    end
end

always @ (*) begin
    if (((select_ln46_fu_1026_p3 == 5'd2) & (1'b1 == ap_CS_fsm_state71))) begin
        ap_sig_allocacmp_updateMovingAverages_float_float_float_int_longTermPrices_6_load = select_ln156_2_reg_2060;
    end else begin
        ap_sig_allocacmp_updateMovingAverages_float_float_float_int_longTermPrices_6_load = updateMovingAverages_float_float_float_int_longTermPrices_6;
    end
end

always @ (*) begin
    if (((select_ln46_fu_1026_p3 == 5'd3) & (1'b1 == ap_CS_fsm_state71))) begin
        ap_sig_allocacmp_updateMovingAverages_float_float_float_int_longTermPrices_7_load = select_ln156_2_reg_2060;
    end else begin
        ap_sig_allocacmp_updateMovingAverages_float_float_float_int_longTermPrices_7_load = updateMovingAverages_float_float_float_int_longTermPrices_7;
    end
end

always @ (*) begin
    if (((select_ln46_fu_1026_p3 == 5'd4) & (1'b1 == ap_CS_fsm_state71))) begin
        ap_sig_allocacmp_updateMovingAverages_float_float_float_int_longTermPrices_8_load = select_ln156_2_reg_2060;
    end else begin
        ap_sig_allocacmp_updateMovingAverages_float_float_float_int_longTermPrices_8_load = updateMovingAverages_float_float_float_int_longTermPrices_8;
    end
end

always @ (*) begin
    if (((select_ln46_fu_1026_p3 == 5'd5) & (1'b1 == ap_CS_fsm_state71))) begin
        ap_sig_allocacmp_updateMovingAverages_float_float_float_int_longTermPrices_9_load = select_ln156_2_reg_2060;
    end else begin
        ap_sig_allocacmp_updateMovingAverages_float_float_float_int_longTermPrices_9_load = updateMovingAverages_float_float_float_int_longTermPrices_9;
    end
end

always @ (*) begin
    if (((select_ln46_fu_1026_p3 == 5'd0) & (1'b1 == ap_CS_fsm_state71))) begin
        ap_sig_allocacmp_updateMovingAverages_float_float_float_int_longTermPrices_load = select_ln156_2_reg_2060;
    end else begin
        ap_sig_allocacmp_updateMovingAverages_float_float_float_int_longTermPrices_load = updateMovingAverages_float_float_float_int_longTermPrices;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        grp_fu_1011_ap_start = 1'b1;
    end else begin
        grp_fu_1011_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        grp_fu_1275_ap_start = 1'b1;
    end else begin
        grp_fu_1275_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state103) | (1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state75) 
    | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state73))) begin
        grp_fu_1275_ce = 1'b1;
    end else begin
        grp_fu_1275_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        grp_fu_488_ce = grp_simple_threshold_Pipeline_VITIS_LOOP_49_1_fu_453_grp_fu_488_p_ce;
    end else begin
        grp_fu_488_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        grp_fu_488_opcode = grp_simple_threshold_Pipeline_VITIS_LOOP_49_1_fu_453_grp_fu_488_p_opcode;
    end else if (((1'b1 == ap_CS_fsm_state148) | (1'b1 == ap_CS_fsm_state107) | (1'b1 == ap_CS_fsm_state111))) begin
        grp_fu_488_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state135) | ((1'd1 == and_ln75_reg_2252) & (1'b1 == ap_CS_fsm_state113)))) begin
        grp_fu_488_opcode = 2'd0;
    end else begin
        grp_fu_488_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        grp_fu_488_p0 = grp_simple_threshold_Pipeline_VITIS_LOOP_49_1_fu_453_grp_fu_488_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state148)) begin
        grp_fu_488_p0 = 32'd1120403456;
    end else if ((1'b1 == ap_CS_fsm_state135)) begin
        grp_fu_488_p0 = rs_fu_1703_p3;
    end else if ((1'b1 == ap_CS_fsm_state113)) begin
        grp_fu_488_p0 = reg_562;
    end else if ((1'b1 == ap_CS_fsm_state111)) begin
        grp_fu_488_p0 = reg_543;
    end else if ((1'b1 == ap_CS_fsm_state107)) begin
        grp_fu_488_p0 = select_ln156_2_reg_2060;
    end else begin
        grp_fu_488_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        grp_fu_488_p1 = grp_simple_threshold_Pipeline_VITIS_LOOP_49_1_fu_453_grp_fu_488_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state148)) begin
        grp_fu_488_p1 = reg_543;
    end else if ((1'b1 == ap_CS_fsm_state135)) begin
        grp_fu_488_p1 = 32'd1065353216;
    end else if ((1'b1 == ap_CS_fsm_state113)) begin
        grp_fu_488_p1 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state111)) begin
        grp_fu_488_p1 = reg_552;
    end else if ((1'b1 == ap_CS_fsm_state107)) begin
        grp_fu_488_p1 = previousPrice_reg_2236;
    end else begin
        grp_fu_488_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state139)) begin
        grp_fu_495_p0 = 32'd1120403456;
    end else if ((1'b1 == ap_CS_fsm_state126)) begin
        grp_fu_495_p0 = reg_543;
    end else if ((1'b1 == ap_CS_fsm_state117)) begin
        grp_fu_495_p0 = gain_1_reg_2273;
    end else if ((1'b1 == ap_CS_fsm_state102)) begin
        grp_fu_495_p0 = grp_simple_threshold_Pipeline_VITIS_LOOP_49_1_fu_453_shortSum_out;
    end else begin
        grp_fu_495_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state139)) begin
        grp_fu_495_p1 = reg_562;
    end else if ((1'b1 == ap_CS_fsm_state126)) begin
        grp_fu_495_p1 = reg_552;
    end else if ((1'b1 == ap_CS_fsm_state117)) begin
        grp_fu_495_p1 = 32'd1096810496;
    end else if ((1'b1 == ap_CS_fsm_state102)) begin
        grp_fu_495_p1 = 32'd1084227584;
    end else begin
        grp_fu_495_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state117)) begin
        grp_fu_500_p0 = loss_1_reg_2278;
    end else if ((1'b1 == ap_CS_fsm_state102)) begin
        grp_fu_500_p0 = grp_simple_threshold_Pipeline_VITIS_LOOP_52_2_fu_463_longSum_out;
    end else begin
        grp_fu_500_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state117)) begin
        grp_fu_500_p1 = 32'd1096810496;
    end else if ((1'b1 == ap_CS_fsm_state102)) begin
        grp_fu_500_p1 = 32'd1101004800;
    end else begin
        grp_fu_500_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state126)) begin
        grp_fu_517_opcode = 5'd1;
    end else if (((1'b1 == ap_CS_fsm_state152) | (1'b1 == ap_CS_fsm_state140) | (1'b1 == ap_CS_fsm_state111))) begin
        grp_fu_517_opcode = 5'd2;
    end else begin
        grp_fu_517_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state140)) begin
        grp_fu_517_p0 = grp_fu_508_p1;
    end else if ((1'b1 == ap_CS_fsm_state126)) begin
        grp_fu_517_p0 = reg_552;
    end else if (((1'b1 == ap_CS_fsm_state152) | (1'b1 == ap_CS_fsm_state111))) begin
        grp_fu_517_p0 = reg_562;
    end else begin
        grp_fu_517_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state152)) begin
        grp_fu_517_p1 = 32'd1112014848;
    end else if ((1'b1 == ap_CS_fsm_state140)) begin
        grp_fu_517_p1 = 32'd1028443341;
    end else if (((1'b1 == ap_CS_fsm_state126) | (1'b1 == ap_CS_fsm_state111))) begin
        grp_fu_517_p1 = 32'd0;
    end else begin
        grp_fu_517_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state152)) begin
        grp_fu_522_opcode = 5'd4;
    end else if ((1'b1 == ap_CS_fsm_state111)) begin
        grp_fu_522_opcode = 5'd2;
    end else begin
        grp_fu_522_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state152)) begin
        grp_fu_522_p0 = reg_562;
    end else if ((1'b1 == ap_CS_fsm_state111)) begin
        grp_fu_522_p0 = reg_543;
    end else begin
        grp_fu_522_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state152)) begin
        grp_fu_522_p1 = 32'd1112014848;
    end else if ((1'b1 == ap_CS_fsm_state111)) begin
        grp_fu_522_p1 = reg_552;
    end else begin
        grp_fu_522_p1 = 'bx;
    end
end

always @ (*) begin
    if (((tmp_nbreadreq_fu_350_p3 == 1'd1) & (1'd1 == and_ln151_fu_580_p2) & (1'b1 == ap_CS_fsm_state1))) begin
        grp_fu_612_ap_start = 1'b1;
    end else begin
        grp_fu_612_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) 
    | (1'b1 == ap_CS_fsm_state2))) begin
        grp_fu_612_ce = 1'b1;
    end else begin
        grp_fu_612_ce = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln166_fu_1938_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state154))) begin
        incoming_meta_TDATA_blk_n = incoming_meta_TVALID_int_regslice;
    end else begin
        incoming_meta_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state154_io) | (1'b1 == ap_block_state154)) & (icmp_ln166_fu_1938_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state154))) begin
        incoming_meta_TREADY_int_regslice = 1'b1;
    end else begin
        incoming_meta_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln166_fu_1938_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state154))) begin
        incoming_time_TDATA_blk_n = incoming_time_TVALID_int_regslice;
    end else begin
        incoming_time_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state154_io) | (1'b1 == ap_block_state154)) & (icmp_ln166_fu_1938_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state154))) begin
        incoming_time_TREADY_int_regslice = 1'b1;
    end else begin
        incoming_time_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln166_reg_2372 == 1'd0) & (1'd1 == and_ln164_reg_2338) & (1'd1 == and_ln151_reg_2011) & (tmp_reg_2004 == 1'd1) & (1'b1 == ap_CS_fsm_state155)) | ((icmp_ln166_fu_1938_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state154)))) begin
        outgoing_meta_TDATA_blk_n = outgoing_meta_TREADY_int_regslice;
    end else begin
        outgoing_meta_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state154_io) | (1'b1 == ap_block_state154)) & (icmp_ln166_fu_1938_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state154))) begin
        outgoing_meta_TVALID_int_regslice = 1'b1;
    end else begin
        outgoing_meta_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln166_reg_2372 == 1'd0) & (1'd1 == and_ln164_reg_2338) & (1'd1 == and_ln151_reg_2011) & (tmp_reg_2004 == 1'd1) & (1'b1 == ap_CS_fsm_state155)) | ((icmp_ln166_fu_1938_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state154)))) begin
        outgoing_order_TDATA_blk_n = outgoing_order_TREADY_int_regslice;
    end else begin
        outgoing_order_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state154_io) | (1'b1 == ap_block_state154)) & (icmp_ln166_fu_1938_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state154))) begin
        outgoing_order_TVALID_int_regslice = 1'b1;
    end else begin
        outgoing_order_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln166_reg_2372 == 1'd0) & (1'd1 == and_ln164_reg_2338) & (1'd1 == and_ln151_reg_2011) & (tmp_reg_2004 == 1'd1) & (1'b1 == ap_CS_fsm_state155)) | ((icmp_ln166_fu_1938_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state154)))) begin
        outgoing_time_TDATA_blk_n = outgoing_time_TREADY_int_regslice;
    end else begin
        outgoing_time_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state154_io) | (1'b1 == ap_block_state154)) & (icmp_ln166_fu_1938_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state154))) begin
        outgoing_time_TVALID_int_regslice = 1'b1;
    end else begin
        outgoing_time_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        top_ask_TDATA_blk_n = top_ask_TVALID_int_regslice;
    end else begin
        top_ask_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state35) & (1'b1 == ap_CS_fsm_state35))) begin
        top_ask_TREADY_int_regslice = 1'b1;
    end else begin
        top_ask_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        top_bid_TDATA_blk_n = top_bid_TVALID_int_regslice;
    end else begin
        top_bid_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state35) & (1'b1 == ap_CS_fsm_state35))) begin
        top_bid_TREADY_int_regslice = 1'b1;
    end else begin
        top_bid_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((tmp_nbreadreq_fu_350_p3 == 1'd1) & (1'd1 == and_ln151_fu_580_p2) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state155;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            if (((1'b0 == ap_block_state35) & (1'b1 == ap_CS_fsm_state35))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            if (((1'b0 == ap_block_state72_on_subcall_done) & (1'b1 == ap_CS_fsm_state72))) begin
                ap_NS_fsm = ap_ST_fsm_state73;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state72;
            end
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state124;
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state125 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state126 : begin
            ap_NS_fsm = ap_ST_fsm_state127;
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state128;
        end
        ap_ST_fsm_state128 : begin
            ap_NS_fsm = ap_ST_fsm_state129;
        end
        ap_ST_fsm_state129 : begin
            ap_NS_fsm = ap_ST_fsm_state130;
        end
        ap_ST_fsm_state130 : begin
            ap_NS_fsm = ap_ST_fsm_state131;
        end
        ap_ST_fsm_state131 : begin
            ap_NS_fsm = ap_ST_fsm_state132;
        end
        ap_ST_fsm_state132 : begin
            ap_NS_fsm = ap_ST_fsm_state133;
        end
        ap_ST_fsm_state133 : begin
            ap_NS_fsm = ap_ST_fsm_state134;
        end
        ap_ST_fsm_state134 : begin
            ap_NS_fsm = ap_ST_fsm_state135;
        end
        ap_ST_fsm_state135 : begin
            ap_NS_fsm = ap_ST_fsm_state136;
        end
        ap_ST_fsm_state136 : begin
            ap_NS_fsm = ap_ST_fsm_state137;
        end
        ap_ST_fsm_state137 : begin
            ap_NS_fsm = ap_ST_fsm_state138;
        end
        ap_ST_fsm_state138 : begin
            ap_NS_fsm = ap_ST_fsm_state139;
        end
        ap_ST_fsm_state139 : begin
            ap_NS_fsm = ap_ST_fsm_state140;
        end
        ap_ST_fsm_state140 : begin
            ap_NS_fsm = ap_ST_fsm_state141;
        end
        ap_ST_fsm_state141 : begin
            ap_NS_fsm = ap_ST_fsm_state142;
        end
        ap_ST_fsm_state142 : begin
            ap_NS_fsm = ap_ST_fsm_state143;
        end
        ap_ST_fsm_state143 : begin
            ap_NS_fsm = ap_ST_fsm_state144;
        end
        ap_ST_fsm_state144 : begin
            ap_NS_fsm = ap_ST_fsm_state145;
        end
        ap_ST_fsm_state145 : begin
            ap_NS_fsm = ap_ST_fsm_state146;
        end
        ap_ST_fsm_state146 : begin
            ap_NS_fsm = ap_ST_fsm_state147;
        end
        ap_ST_fsm_state147 : begin
            ap_NS_fsm = ap_ST_fsm_state148;
        end
        ap_ST_fsm_state148 : begin
            ap_NS_fsm = ap_ST_fsm_state149;
        end
        ap_ST_fsm_state149 : begin
            ap_NS_fsm = ap_ST_fsm_state150;
        end
        ap_ST_fsm_state150 : begin
            ap_NS_fsm = ap_ST_fsm_state151;
        end
        ap_ST_fsm_state151 : begin
            ap_NS_fsm = ap_ST_fsm_state152;
        end
        ap_ST_fsm_state152 : begin
            ap_NS_fsm = ap_ST_fsm_state153;
        end
        ap_ST_fsm_state153 : begin
            if (((1'd0 == and_ln164_reg_2338) & (1'b1 == ap_CS_fsm_state153))) begin
                ap_NS_fsm = ap_ST_fsm_state155;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state154;
            end
        end
        ap_ST_fsm_state154 : begin
            if ((~((1'b1 == ap_block_state154_io) | (1'b1 == ap_block_state154)) & (1'b1 == ap_CS_fsm_state154))) begin
                ap_NS_fsm = ap_ST_fsm_state155;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state154;
            end
        end
        ap_ST_fsm_state155 : begin
            if ((~((1'b1 == ap_block_state155_io) | (1'b1 == ap_block_state155)) & (1'b1 == ap_CS_fsm_state155))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state155;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign LD_fu_948_p1 = pi_assign_fu_936_p5[31:0];

assign add_ln156_1_fu_718_p2 = ($signed(sub_ln156_fu_712_p2) + $signed(32'd4294967272));

assign add_ln156_2_fu_836_p2 = ($signed(sub_ln156_fu_712_p2) + $signed(32'd4294967271));

assign add_ln156_3_fu_880_p2 = (select_ln156_fu_868_p3 + zext_ln156_6_fu_876_p1);

assign add_ln156_4_fu_922_p2 = (sub_ln156_2_fu_916_p2 + select_ln156_1_fu_908_p3);

assign add_ln156_fu_654_p2 = (zext_ln156_1_fu_650_p1 + zext_ln156_fu_646_p1);

assign add_ln179_fu_1966_p2 = ($signed(ap_phi_mux_empty_phi_fu_438_p10) + $signed(31'd2147483647));

assign add_ln58_fu_1258_p2 = (updateCounter + 32'd1);

assign and_ln151_fu_580_p2 = (tmp_1_nbreadreq_fu_358_p3 & icmp_ln151_fu_574_p2);

assign and_ln156_1_fu_807_p2 = (xor_ln156_fu_789_p2 & bit_select30_i_i1_fu_799_p3);

assign and_ln156_2_fu_764_p2 = (trunc_ln156_2_fu_760_p1 & lshr_ln_reg_2052);

assign and_ln156_fu_775_p2 = (icmp_ln156_2_fu_769_p2 & icmp_ln156_1_fu_734_p2);

assign and_ln161_1_fu_1788_p2 = (tmp_15_reg_2258 & and_ln161_reg_2241);

assign and_ln161_2_fu_1792_p2 = (or_ln161_2_reg_2342 & grp_fu_517_p2);

assign and_ln161_fu_1573_p2 = (or_ln161_fu_1549_p2 & or_ln161_1_fu_1567_p2);

assign and_ln162_1_fu_1807_p2 = (or_ln161_2_reg_2342 & grp_fu_522_p2);

assign and_ln162_2_fu_1818_p2 = (xor_ln161_fu_1812_p2 & and_ln162_1_fu_1807_p2);

assign and_ln162_3_fu_1824_p2 = (and_ln162_fu_1803_p2 & and_ln162_2_fu_1818_p2);

assign and_ln162_4_fu_1844_p2 = (and_ln162_fu_1803_p2 & and_ln162_1_fu_1807_p2);

assign and_ln162_fu_1803_p2 = (tmp_19_reg_2263 & and_ln161_reg_2241);

assign and_ln164_fu_1746_p2 = (or_ln164_fu_1742_p2 & grp_fu_517_p2);

assign and_ln75_fu_1615_p2 = (or_ln75_fu_1609_p2 & grp_fu_517_p2);

assign and_ln83_fu_1698_p2 = (tmp_11_reg_2308 & or_ln83_fu_1694_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state100 = ap_CS_fsm[32'd99];

assign ap_CS_fsm_state101 = ap_CS_fsm[32'd100];

assign ap_CS_fsm_state102 = ap_CS_fsm[32'd101];

assign ap_CS_fsm_state103 = ap_CS_fsm[32'd102];

assign ap_CS_fsm_state104 = ap_CS_fsm[32'd103];

assign ap_CS_fsm_state105 = ap_CS_fsm[32'd104];

assign ap_CS_fsm_state106 = ap_CS_fsm[32'd105];

assign ap_CS_fsm_state107 = ap_CS_fsm[32'd106];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state110 = ap_CS_fsm[32'd109];

assign ap_CS_fsm_state111 = ap_CS_fsm[32'd110];

assign ap_CS_fsm_state112 = ap_CS_fsm[32'd111];

assign ap_CS_fsm_state113 = ap_CS_fsm[32'd112];

assign ap_CS_fsm_state114 = ap_CS_fsm[32'd113];

assign ap_CS_fsm_state115 = ap_CS_fsm[32'd114];

assign ap_CS_fsm_state116 = ap_CS_fsm[32'd115];

assign ap_CS_fsm_state117 = ap_CS_fsm[32'd116];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state125 = ap_CS_fsm[32'd124];

assign ap_CS_fsm_state126 = ap_CS_fsm[32'd125];

assign ap_CS_fsm_state127 = ap_CS_fsm[32'd126];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state134 = ap_CS_fsm[32'd133];

assign ap_CS_fsm_state135 = ap_CS_fsm[32'd134];

assign ap_CS_fsm_state138 = ap_CS_fsm[32'd137];

assign ap_CS_fsm_state139 = ap_CS_fsm[32'd138];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state140 = ap_CS_fsm[32'd139];

assign ap_CS_fsm_state141 = ap_CS_fsm[32'd140];

assign ap_CS_fsm_state147 = ap_CS_fsm[32'd146];

assign ap_CS_fsm_state148 = ap_CS_fsm[32'd147];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state151 = ap_CS_fsm[32'd150];

assign ap_CS_fsm_state152 = ap_CS_fsm[32'd151];

assign ap_CS_fsm_state153 = ap_CS_fsm[32'd152];

assign ap_CS_fsm_state154 = ap_CS_fsm[32'd153];

assign ap_CS_fsm_state155 = ap_CS_fsm[32'd154];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state88 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_state89 = ap_CS_fsm[32'd88];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state90 = ap_CS_fsm[32'd89];

assign ap_CS_fsm_state91 = ap_CS_fsm[32'd90];

assign ap_CS_fsm_state92 = ap_CS_fsm[32'd91];

assign ap_CS_fsm_state93 = ap_CS_fsm[32'd92];

assign ap_CS_fsm_state94 = ap_CS_fsm[32'd93];

assign ap_CS_fsm_state95 = ap_CS_fsm[32'd94];

assign ap_CS_fsm_state96 = ap_CS_fsm[32'd95];

assign ap_CS_fsm_state97 = ap_CS_fsm[32'd96];

assign ap_CS_fsm_state98 = ap_CS_fsm[32'd97];

assign ap_CS_fsm_state99 = ap_CS_fsm[32'd98];

always @ (*) begin
    ap_block_state154 = (((outgoing_meta_TREADY_int_regslice == 1'b0) & (icmp_ln166_fu_1938_p2 == 1'd0)) | ((outgoing_time_TREADY_int_regslice == 1'b0) & (icmp_ln166_fu_1938_p2 == 1'd0)) | ((outgoing_order_TREADY_int_regslice == 1'b0) & (icmp_ln166_fu_1938_p2 == 1'd0)) | ((incoming_meta_TVALID_int_regslice == 1'b0) & (icmp_ln166_fu_1938_p2 == 1'd0)) | ((incoming_time_TVALID_int_regslice == 1'b0) & (icmp_ln166_fu_1938_p2 == 1'd0)));
end

always @ (*) begin
    ap_block_state154_io = (((outgoing_meta_TREADY_int_regslice == 1'b0) & (icmp_ln166_fu_1938_p2 == 1'd0)) | ((outgoing_time_TREADY_int_regslice == 1'b0) & (icmp_ln166_fu_1938_p2 == 1'd0)) | ((outgoing_order_TREADY_int_regslice == 1'b0) & (icmp_ln166_fu_1938_p2 == 1'd0)));
end

always @ (*) begin
    ap_block_state155 = ((regslice_both_outgoing_meta_U_apdone_blk == 1'b1) | (regslice_both_outgoing_time_U_apdone_blk == 1'b1) | (regslice_both_outgoing_order_U_apdone_blk == 1'b1) | ((ap_predicate_op694_write_state155 == 1'b1) & (outgoing_time_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op693_write_state155 == 1'b1) & (outgoing_meta_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op692_write_state155 == 1'b1) & (outgoing_order_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state155_io = (((ap_predicate_op694_write_state155 == 1'b1) & (outgoing_time_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op693_write_state155 == 1'b1) & (outgoing_meta_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op692_write_state155 == 1'b1) & (outgoing_order_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state35 = ((top_ask_TVALID_int_regslice == 1'b0) | (top_bid_TVALID_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state72_on_subcall_done = ((grp_simple_threshold_Pipeline_VITIS_LOOP_52_2_fu_463_ap_done == 1'b0) | (grp_simple_threshold_Pipeline_VITIS_LOOP_49_1_fu_453_ap_done == 1'b0));
end

always @ (*) begin
    ap_predicate_op692_write_state155 = ((icmp_ln166_reg_2372 == 1'd0) & (1'd1 == and_ln164_reg_2338) & (1'd1 == and_ln151_reg_2011) & (tmp_reg_2004 == 1'd1));
end

always @ (*) begin
    ap_predicate_op693_write_state155 = ((icmp_ln166_reg_2372 == 1'd0) & (1'd1 == and_ln164_reg_2338) & (1'd1 == and_ln151_reg_2011) & (tmp_reg_2004 == 1'd1));
end

always @ (*) begin
    ap_predicate_op694_write_state155 = ((icmp_ln166_reg_2372 == 1'd0) & (1'd1 == and_ln164_reg_2338) & (1'd1 == and_ln151_reg_2011) & (tmp_reg_2004 == 1'd1));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ask_price_fu_632_p1 = top_ask_TDATA_int_regslice[15:0];

assign bid_price_fu_618_p1 = top_bid_TDATA_int_regslice[15:0];

assign bit_select30_i_i1_fu_799_p3 = zext_ln156_2_fu_670_p1[trunc_ln156_3_fu_795_p1];

assign bitcast_ln161_1_fu_1519_p1 = reg_552;

assign bitcast_ln161_2_fu_1752_p1 = reg_562;

assign bitcast_ln161_fu_1501_p1 = reg_543;

assign bitcast_ln164_fu_1712_p1 = grp_fu_508_p1;

assign bitcast_ln75_fu_1579_p1 = reg_562;

assign bitcast_ln766_fu_952_p1 = LD_fu_948_p1;

assign bitcast_ln83_fu_1664_p1 = reg_552;

assign data_fu_1644_p1 = grp_fu_511_p1;

assign gain_1_fu_1630_p3 = ((and_ln75_reg_2252[0:0] == 1'b1) ? grp_fu_488_p2 : 32'd0);

assign grp_fu_1011_p1 = 32'd20;

assign grp_fu_1275_p1 = 32'd14;

assign grp_fu_534_p0 = t_fu_1652_p3;

assign grp_fu_612_p0 = (updateCounter ^ select_ln45_1_fu_598_p3);

assign grp_fu_612_p1 = 32'd5;

assign grp_simple_threshold_Pipeline_VITIS_LOOP_49_1_fu_453_ap_start = grp_simple_threshold_Pipeline_VITIS_LOOP_49_1_fu_453_ap_start_reg;

assign grp_simple_threshold_Pipeline_VITIS_LOOP_52_2_fu_463_ap_start = grp_simple_threshold_Pipeline_VITIS_LOOP_52_2_fu_463_ap_start_reg;

assign icmp_ln151_fu_574_p2 = ((cooldownTimer == 31'd0) ? 1'b1 : 1'b0);

assign icmp_ln156_1_fu_734_p2 = (($signed(tmp_2_fu_724_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln156_2_fu_769_p2 = ((and_ln156_2_fu_764_p2 != 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln156_3_fu_830_p2 = (($signed(add_ln156_1_fu_718_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln156_fu_673_p2 = ((lshr_ln_reg_2052 != 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln161_1_fu_1543_p2 = ((trunc_ln161_fu_1515_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln161_2_fu_1555_p2 = ((tmp_14_fu_1523_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln161_3_fu_1561_p2 = ((trunc_ln161_1_fu_1533_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln161_4_fu_1770_p2 = ((tmp_16_fu_1756_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln161_5_fu_1776_p2 = ((trunc_ln161_2_fu_1766_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln161_fu_1537_p2 = ((tmp_12_fu_1505_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln164_1_fu_1736_p2 = ((trunc_ln164_fu_1726_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln164_fu_1730_p2 = ((tmp_21_fu_1716_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln166_fu_1938_p2 = ((tradeOrder_size_3_reg_2361 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln178_fu_1960_p2 = ((ap_phi_mux_empty_phi_fu_438_p10 != 31'd0) ? 1'b1 : 1'b0);

assign icmp_ln70_fu_1269_p2 = (($signed(add_ln58_fu_1258_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln75_1_fu_1603_p2 = ((trunc_ln75_fu_1593_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln75_fu_1597_p2 = ((tmp_9_fu_1583_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln83_1_fu_1688_p2 = ((trunc_ln83_fu_1678_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln83_fu_1682_p2 = ((tmp_10_fu_1668_p4 != 8'd255) ? 1'b1 : 1'b0);

assign incoming_meta_TREADY = regslice_both_incoming_meta_U_ack_in;

assign incoming_time_TREADY = regslice_both_incoming_time_U_ack_in;

assign isUptrend_fu_1797_p2 = (and_ln161_2_fu_1792_p2 & and_ln161_1_fu_1788_p2);

assign loss_1_fu_1637_p3 = ((and_ln75_reg_2252[0:0] == 1'b1) ? 32'd0 : loss_fu_1626_p1);

assign loss_fu_1626_p1 = xor_ln76_fu_1621_p2;

assign lshr_ln156_1_fu_754_p2 = 18'd262143 >> zext_ln156_8_fu_750_p1;

assign lshr_ln156_2_fu_886_p4 = {{add_ln156_3_fu_880_p2[63:1]}};

assign lshr_ln156_fu_846_p2 = zext_ln156_3_fu_827_p1 >> zext_ln156_4_fu_842_p1;

assign mul_ln104_fu_1859_p0 = mul_ln104_fu_1859_p00;

assign mul_ln104_fu_1859_p00 = bid_price_reg_2032;

assign mul_ln104_fu_1859_p1 = 24'd281;

assign mul_ln109_fu_538_p0 = mul_ln109_fu_538_p00;

assign mul_ln109_fu_538_p00 = shl_ln_fu_1875_p3;

assign mul_ln109_fu_538_p1 = 49'd30569163;

assign or_ln156_fu_813_p2 = (and_ln156_fu_775_p2 | and_ln156_1_fu_807_p2);

assign or_ln161_1_fu_1567_p2 = (icmp_ln161_3_fu_1561_p2 | icmp_ln161_2_fu_1555_p2);

assign or_ln161_2_fu_1782_p2 = (icmp_ln161_5_fu_1776_p2 | icmp_ln161_4_fu_1770_p2);

assign or_ln161_fu_1549_p2 = (icmp_ln161_fu_1537_p2 | icmp_ln161_1_fu_1543_p2);

assign or_ln162_fu_1918_p2 = (isUptrend_reg_2348 | and_ln162_3_reg_2354);

assign or_ln164_fu_1742_p2 = (icmp_ln164_reg_2328 | icmp_ln164_1_reg_2333);

assign or_ln178_fu_1972_p2 = (icmp_ln178_fu_1960_p2 | ap_phi_mux_cooldownTimer_flag_3_phi_fu_417_p10);

assign or_ln75_fu_1609_p2 = (icmp_ln75_fu_1597_p2 | icmp_ln75_1_fu_1603_p2);

assign or_ln83_fu_1694_p2 = (icmp_ln83_reg_2298 | icmp_ln83_1_reg_2303);

assign or_ln_fu_819_p3 = {{1'd0}, {or_ln156_fu_813_p2}};

assign outgoing_meta_TVALID = regslice_both_outgoing_meta_U_vld_out;

assign outgoing_order_TDATA_int_regslice = tmp_17_fu_1943_p6;

assign outgoing_order_TVALID = regslice_both_outgoing_order_U_vld_out;

assign outgoing_time_TVALID = regslice_both_outgoing_time_U_vld_out;

assign pi_assign_fu_936_p5 = {{zext_ln156_7_fu_896_p1[63:32]}, {tmp_3_fu_928_p3}, {zext_ln156_7_fu_896_p1[22:0]}};

assign previousPrice_fu_1425_p3 = ((icmp_ln70_reg_2221[0:0] == 1'b1) ? tmp_8_fu_1361_p31 : select_ln156_2_reg_2060);

assign rs_fu_1703_p3 = ((and_ln83_fu_1698_p2[0:0] == 1'b1) ? 32'd1120403456 : reg_543);

assign select_ln156_1_fu_908_p3 = ((tmp_13_fu_900_p3[0:0] == 1'b1) ? 8'd127 : 8'd126);

assign select_ln156_2_fu_956_p3 = ((icmp_ln156_fu_673_p2[0:0] == 1'b1) ? bitcast_ln766_fu_952_p1 : 32'd0);

assign select_ln156_fu_868_p3 = ((icmp_ln156_3_fu_830_p2[0:0] == 1'b1) ? lshr_ln156_fu_846_p2 : shl_ln156_fu_862_p2);

assign select_ln162_fu_1911_p3 = ((and_ln162_3_reg_2354[0:0] == 1'b1) ? 8'd200 : 8'd123);

assign select_ln178_fu_1978_p3 = ((icmp_ln178_fu_1960_p2[0:0] == 1'b1) ? add_ln179_fu_1966_p2 : 31'd10);

assign select_ln45_1_fu_598_p3 = ((tmp_24_fu_590_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln45_fu_974_p3 = ((tmp_24_reg_2018[0:0] == 1'b1) ? sub_ln45_fu_968_p2 : trunc_ln45_fu_964_p1);

assign select_ln46_fu_1026_p3 = ((tmp_24_reg_2018[0:0] == 1'b1) ? sub_ln46_fu_1020_p2 : trunc_ln46_fu_1016_p1);

assign select_ln72_fu_1298_p3 = ((tmp_24_reg_2018[0:0] == 1'b1) ? sub_ln72_fu_1292_p2 : trunc_ln72_fu_1288_p1);

assign sext_ln156_fu_696_p1 = $signed(tmp_5_fu_688_p3);

assign sext_ln162_fu_1930_p1 = $signed(tradeOrder_orderID_fu_1922_p3);

assign shl_ln156_fu_862_p2 = zext_ln156_3_fu_827_p1 << zext_ln156_5_fu_858_p1;

assign shl_ln_fu_1875_p3 = {{ask_price_reg_2042}, {8'd0}};

assign sub_ln156_1_fu_852_p2 = (32'd25 - sub_ln156_fu_712_p2);

assign sub_ln156_2_fu_916_p2 = (8'd10 - trunc_ln156_fu_708_p1);

assign sub_ln156_3_fu_744_p2 = (5'd11 - trunc_ln156_1_fu_740_p1);

assign sub_ln156_fu_712_p2 = (32'd18 - tmp_6_fu_700_p3);

assign sub_ln45_fu_968_p2 = ($signed(3'd4) - $signed(trunc_ln45_fu_964_p1));

assign sub_ln46_fu_1020_p2 = ($signed(5'd19) - $signed(trunc_ln46_fu_1016_p1));

assign sub_ln72_fu_1292_p2 = (4'd13 - trunc_ln72_fu_1288_p1);

assign t_fu_1652_p3 = {{1'd0}, {trunc_ln479_reg_2283}};

assign tmp_10_fu_1668_p4 = {{bitcast_ln83_fu_1664_p1[30:23]}};

assign tmp_12_fu_1505_p4 = {{bitcast_ln161_fu_1501_p1[30:23]}};

assign tmp_13_fu_900_p3 = add_ln156_3_fu_880_p2[32'd25];

assign tmp_14_fu_1523_p4 = {{bitcast_ln161_1_fu_1519_p1[30:23]}};

assign tmp_16_fu_1756_p4 = {{bitcast_ln161_2_fu_1752_p1[30:23]}};

assign tmp_17_fu_1943_p6 = {{{{{tradeOrder_direction_reg_2367}, {zext_ln162_fu_1934_p1}}, {8'd0}}, {tradeOrder_size_3_reg_2361}}, {tradeOrder_price_3_fu_1904_p3}};

assign tmp_1_nbreadreq_fu_358_p3 = top_ask_TVALID_int_regslice;

assign tmp_21_fu_1716_p4 = {{bitcast_ln164_fu_1712_p1[30:23]}};

assign tmp_24_fu_590_p3 = updateCounter[32'd31];

assign tmp_2_fu_724_p4 = {{add_ln156_1_fu_718_p2[31:1]}};

assign tmp_3_fu_928_p3 = {{1'd0}, {add_ln156_4_fu_922_p2}};

integer ap_tvar_int_0;

always @ (zext_ln156_2_fu_670_p1) begin
    for (ap_tvar_int_0 = 18 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 17 - 0) begin
            tmp_4_fu_678_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            tmp_4_fu_678_p4[ap_tvar_int_0] = zext_ln156_2_fu_670_p1[17 - ap_tvar_int_0];
        end
    end
end

assign tmp_5_fu_688_p3 = {{1'd1}, {tmp_4_fu_678_p4}};


always @ (sext_ln156_fu_696_p1) begin
    if (sext_ln156_fu_696_p1[0] == 1'b1) begin
        tmp_6_fu_700_p3 = 32'd0;
    end else if (sext_ln156_fu_696_p1[1] == 1'b1) begin
        tmp_6_fu_700_p3 = 32'd1;
    end else if (sext_ln156_fu_696_p1[2] == 1'b1) begin
        tmp_6_fu_700_p3 = 32'd2;
    end else if (sext_ln156_fu_696_p1[3] == 1'b1) begin
        tmp_6_fu_700_p3 = 32'd3;
    end else if (sext_ln156_fu_696_p1[4] == 1'b1) begin
        tmp_6_fu_700_p3 = 32'd4;
    end else if (sext_ln156_fu_696_p1[5] == 1'b1) begin
        tmp_6_fu_700_p3 = 32'd5;
    end else if (sext_ln156_fu_696_p1[6] == 1'b1) begin
        tmp_6_fu_700_p3 = 32'd6;
    end else if (sext_ln156_fu_696_p1[7] == 1'b1) begin
        tmp_6_fu_700_p3 = 32'd7;
    end else if (sext_ln156_fu_696_p1[8] == 1'b1) begin
        tmp_6_fu_700_p3 = 32'd8;
    end else if (sext_ln156_fu_696_p1[9] == 1'b1) begin
        tmp_6_fu_700_p3 = 32'd9;
    end else if (sext_ln156_fu_696_p1[10] == 1'b1) begin
        tmp_6_fu_700_p3 = 32'd10;
    end else if (sext_ln156_fu_696_p1[11] == 1'b1) begin
        tmp_6_fu_700_p3 = 32'd11;
    end else if (sext_ln156_fu_696_p1[12] == 1'b1) begin
        tmp_6_fu_700_p3 = 32'd12;
    end else if (sext_ln156_fu_696_p1[13] == 1'b1) begin
        tmp_6_fu_700_p3 = 32'd13;
    end else if (sext_ln156_fu_696_p1[14] == 1'b1) begin
        tmp_6_fu_700_p3 = 32'd14;
    end else if (sext_ln156_fu_696_p1[15] == 1'b1) begin
        tmp_6_fu_700_p3 = 32'd15;
    end else if (sext_ln156_fu_696_p1[16] == 1'b1) begin
        tmp_6_fu_700_p3 = 32'd16;
    end else if (sext_ln156_fu_696_p1[17] == 1'b1) begin
        tmp_6_fu_700_p3 = 32'd17;
    end else if (sext_ln156_fu_696_p1[18] == 1'b1) begin
        tmp_6_fu_700_p3 = 32'd18;
    end else if (sext_ln156_fu_696_p1[19] == 1'b1) begin
        tmp_6_fu_700_p3 = 32'd19;
    end else if (sext_ln156_fu_696_p1[20] == 1'b1) begin
        tmp_6_fu_700_p3 = 32'd20;
    end else if (sext_ln156_fu_696_p1[21] == 1'b1) begin
        tmp_6_fu_700_p3 = 32'd21;
    end else if (sext_ln156_fu_696_p1[22] == 1'b1) begin
        tmp_6_fu_700_p3 = 32'd22;
    end else if (sext_ln156_fu_696_p1[23] == 1'b1) begin
        tmp_6_fu_700_p3 = 32'd23;
    end else if (sext_ln156_fu_696_p1[24] == 1'b1) begin
        tmp_6_fu_700_p3 = 32'd24;
    end else if (sext_ln156_fu_696_p1[25] == 1'b1) begin
        tmp_6_fu_700_p3 = 32'd25;
    end else if (sext_ln156_fu_696_p1[26] == 1'b1) begin
        tmp_6_fu_700_p3 = 32'd26;
    end else if (sext_ln156_fu_696_p1[27] == 1'b1) begin
        tmp_6_fu_700_p3 = 32'd27;
    end else if (sext_ln156_fu_696_p1[28] == 1'b1) begin
        tmp_6_fu_700_p3 = 32'd28;
    end else if (sext_ln156_fu_696_p1[29] == 1'b1) begin
        tmp_6_fu_700_p3 = 32'd29;
    end else if (sext_ln156_fu_696_p1[30] == 1'b1) begin
        tmp_6_fu_700_p3 = 32'd30;
    end else if (sext_ln156_fu_696_p1[31] == 1'b1) begin
        tmp_6_fu_700_p3 = 32'd31;
    end else begin
        tmp_6_fu_700_p3 = 32'd32;
    end
end

assign tmp_7_fu_781_p3 = add_ln156_1_fu_718_p2[32'd31];

assign tmp_8_fu_1361_p29 = 'bx;

assign tmp_8_fu_1361_p30 = ((tmp_24_reg_2018[0:0] == 1'b1) ? sub_ln72_fu_1292_p2 : trunc_ln72_fu_1288_p1);

assign tmp_9_fu_1583_p4 = {{bitcast_ln75_fu_1579_p1[30:23]}};

assign tmp_nbreadreq_fu_350_p3 = top_bid_TVALID_int_regslice;

assign top_ask_TREADY = regslice_both_top_ask_U_ack_in;

assign top_bid_TREADY = regslice_both_top_bid_U_ack_in;

assign tradeOrder_direction_fu_1850_p2 = (xor_ln161_fu_1812_p2 & and_ln162_4_fu_1844_p2);

assign tradeOrder_orderID_fu_1922_p3 = ((or_ln162_fu_1918_p2[0:0] == 1'b1) ? select_ln162_fu_1911_p3 : 8'd0);

assign tradeOrder_price_1_fu_1887_p4 = {{mul_ln109_fu_538_p2[48:33]}};

assign tradeOrder_price_2_fu_1897_p3 = ((isUptrend_reg_2348[0:0] == 1'b1) ? tradeOrder_price_fu_1865_p4 : 16'd0);

assign tradeOrder_price_3_fu_1904_p3 = ((and_ln162_3_reg_2354[0:0] == 1'b1) ? tradeOrder_price_1_fu_1887_p4 : tradeOrder_price_2_fu_1897_p3);

assign tradeOrder_price_fu_1865_p4 = {{mul_ln104_fu_1859_p2[23:8]}};

assign tradeOrder_size_2_fu_1830_p3 = ((isUptrend_fu_1797_p2[0:0] == 1'b1) ? bid_size_reg_2037 : 8'd0);

assign tradeOrder_size_3_fu_1837_p3 = ((and_ln162_3_fu_1824_p2[0:0] == 1'b1) ? ask_size_reg_2047 : tradeOrder_size_2_fu_1830_p3);

assign trunc_ln156_1_fu_740_p1 = sub_ln156_fu_712_p2[4:0];

assign trunc_ln156_2_fu_760_p1 = lshr_ln156_1_fu_754_p2[15:0];

assign trunc_ln156_3_fu_795_p1 = add_ln156_1_fu_718_p2[17:0];

assign trunc_ln156_fu_708_p1 = tmp_6_fu_700_p3[7:0];

assign trunc_ln161_1_fu_1533_p1 = bitcast_ln161_1_fu_1519_p1[22:0];

assign trunc_ln161_2_fu_1766_p1 = bitcast_ln161_2_fu_1752_p1[22:0];

assign trunc_ln161_fu_1515_p1 = bitcast_ln161_fu_1501_p1[22:0];

assign trunc_ln164_fu_1726_p1 = bitcast_ln164_fu_1712_p1[22:0];

assign trunc_ln45_fu_964_p1 = grp_fu_612_p2[2:0];

assign trunc_ln46_fu_1016_p1 = grp_fu_1011_p2[4:0];

assign trunc_ln479_fu_1648_p1 = data_fu_1644_p1[62:0];

assign trunc_ln72_fu_1288_p1 = grp_fu_1275_p2[3:0];

assign trunc_ln75_fu_1593_p1 = bitcast_ln75_fu_1579_p1[22:0];

assign trunc_ln83_fu_1678_p1 = bitcast_ln83_fu_1664_p1[22:0];

assign xor_ln156_fu_789_p2 = (tmp_7_fu_781_p3 ^ 1'd1);

assign xor_ln161_fu_1812_p2 = (isUptrend_fu_1797_p2 ^ 1'd1);

assign xor_ln45_fu_606_p2 = (updateCounter ^ select_ln45_1_fu_598_p3);

assign xor_ln76_fu_1621_p2 = (bitcast_ln75_reg_2247 ^ 32'd2147483648);

assign zext_ln156_1_fu_650_p1 = ask_price_fu_632_p1;

assign zext_ln156_2_fu_670_p1 = lshr_ln_reg_2052;

assign zext_ln156_3_fu_827_p1 = lshr_ln_reg_2052;

assign zext_ln156_4_fu_842_p1 = add_ln156_2_fu_836_p2;

assign zext_ln156_5_fu_858_p1 = sub_ln156_1_fu_852_p2;

assign zext_ln156_6_fu_876_p1 = or_ln_fu_819_p3;

assign zext_ln156_7_fu_896_p1 = lshr_ln156_2_fu_886_p4;

assign zext_ln156_8_fu_750_p1 = sub_ln156_3_fu_744_p2;

assign zext_ln156_fu_646_p1 = bid_price_fu_618_p1;

assign zext_ln162_fu_1934_p1 = $unsigned(sext_ln162_fu_1930_p1);


reg find_kernel_block = 0;
// synthesis translate_off
`include "simple_threshold_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on

endmodule //simple_threshold

