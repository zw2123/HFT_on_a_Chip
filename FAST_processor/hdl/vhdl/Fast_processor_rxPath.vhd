-- ==============================================================
-- Generated by Vitis HLS v2023.2.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Fast_processor_rxPath is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    lbRxDataIn_TVALID : IN STD_LOGIC;
    tagsIn_TVALID : IN STD_LOGIC;
    time_to_book_TREADY : IN STD_LOGIC;
    lbRxMetadataIn_TVALID : IN STD_LOGIC;
    metadata_to_book_TREADY : IN STD_LOGIC;
    lbPortOpenReplyIn_TVALID : IN STD_LOGIC;
    order_to_book_TREADY : IN STD_LOGIC;
    lbRequestPortOpenOut_TREADY : IN STD_LOGIC;
    lbRxDataIn_TDATA : IN STD_LOGIC_VECTOR (127 downto 0);
    lbRxDataIn_TREADY : OUT STD_LOGIC;
    lbRxMetadataIn_TDATA : IN STD_LOGIC_VECTOR (127 downto 0);
    lbRxMetadataIn_TREADY : OUT STD_LOGIC;
    lbRequestPortOpenOut_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    lbRequestPortOpenOut_TVALID : OUT STD_LOGIC;
    lbPortOpenReplyIn_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    lbPortOpenReplyIn_TREADY : OUT STD_LOGIC;
    metadata_to_book_TDATA : OUT STD_LOGIC_VECTOR (127 downto 0);
    metadata_to_book_TVALID : OUT STD_LOGIC;
    tagsIn_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    tagsIn_TREADY : OUT STD_LOGIC;
    time_to_book_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    time_to_book_TVALID : OUT STD_LOGIC;
    order_to_book_TDATA : OUT STD_LOGIC_VECTOR (95 downto 0);
    order_to_book_TVALID : OUT STD_LOGIC );
end;


architecture behav of Fast_processor_rxPath is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_iter0_fsm_state1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_iter0_fsm_state2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_ST_iter1_fsm_state3 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_ST_iter1_fsm_state0 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv16_C000 : STD_LOGIC_VECTOR (15 downto 0) := "1100000000000000";
    constant ap_const_lv128_lc_1 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001001000";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv8_7 : STD_LOGIC_VECTOR (7 downto 0) := "00000111";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv25_0 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000000";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";

attribute shreg_extract : string;
    signal ap_CS_iter0_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    signal ap_CS_iter0_fsm_state1 : STD_LOGIC;
    signal ap_CS_iter1_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    signal ap_CS_iter1_fsm_state0 : STD_LOGIC;
    signal ap_CS_iter0_fsm_state2 : STD_LOGIC;
    signal next_state_1_load_reg_1516 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_s_reg_1520 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op27_read_state2 : BOOLEAN;
    signal tmp_9_reg_1524 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_1528 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op34_read_state2 : BOOLEAN;
    signal ap_predicate_op35_write_state2 : BOOLEAN;
    signal ap_predicate_op36_read_state2 : BOOLEAN;
    signal ap_predicate_op42_write_state2 : BOOLEAN;
    signal ap_predicate_op43_read_state2 : BOOLEAN;
    signal tmp_8_reg_1532 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op49_read_state2 : BOOLEAN;
    signal grp_nbwritereq_fu_256_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op161_write_state2 : BOOLEAN;
    signal and_ln125_fu_1492_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op172_write_state2 : BOOLEAN;
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state2_io : BOOLEAN;
    signal next_state_1_load_reg_1516_pp0_iter0_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_9_reg_1524_pp0_iter0_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_1528_pp0_iter0_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op175_write_state3 : BOOLEAN;
    signal ap_predicate_op176_write_state3 : BOOLEAN;
    signal tmp_19_reg_1546 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op180_write_state3 : BOOLEAN;
    signal and_ln125_reg_1555 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op182_write_state3 : BOOLEAN;
    signal regslice_both_lbRequestPortOpenOut_U_apdone_blk : STD_LOGIC;
    signal regslice_both_metadata_to_book_U_apdone_blk : STD_LOGIC;
    signal regslice_both_time_to_book_U_apdone_blk : STD_LOGIC;
    signal regslice_both_order_to_book_U_apdone_blk : STD_LOGIC;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_io : BOOLEAN;
    signal ap_CS_iter1_fsm_state3 : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal next_state_1 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal first_packet : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal second_packet : STD_LOGIC_VECTOR (42 downto 0) := "0000000000000000000000000000000000000000000";
    signal openPortWaitTime : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100100";
    signal lbRxDataIn_TDATA_blk_n : STD_LOGIC;
    signal lbRxMetadataIn_TDATA_blk_n : STD_LOGIC;
    signal lbRequestPortOpenOut_TDATA_blk_n : STD_LOGIC;
    signal lbPortOpenReplyIn_TDATA_blk_n : STD_LOGIC;
    signal metadata_to_book_TDATA_blk_n : STD_LOGIC;
    signal tagsIn_TDATA_blk_n : STD_LOGIC;
    signal time_to_book_TDATA_blk_n : STD_LOGIC;
    signal order_to_book_TDATA_blk_n : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal grp_nbreadreq_fu_232_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_nbreadreq_fu_240_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_nbreadreq_fu_248_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln147_fu_356_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln50_fu_431_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln41_fu_421_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln145_fu_346_p1 : STD_LOGIC_VECTOR (42 downto 0);
    signal add_ln129_fu_1498_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_326_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_fu_394_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln32_fu_370_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_27_fu_384_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_26_fu_374_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_2_fu_713_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal decoded_mantissa_fu_533_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_3_fu_731_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln42_9_fu_583_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_4_fu_747_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln42_3_fu_633_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal encoded_message_5_fu_573_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal encoded_message_7_fu_613_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln63_fu_763_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal encoded_message_3_fu_523_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln63_1_fu_769_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_5_fu_775_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_fu_789_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln63_fu_721_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln63_fu_797_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln63_1_fu_783_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln63_2_fu_803_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln63_1_fu_817_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln63_fu_809_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln58_fu_727_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln_fu_755_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal decoded_mantissa_1_fu_739_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln63_3_fu_833_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln63_4_fu_841_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_fu_857_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_fu_857_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_fu_857_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_fu_857_p8 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_fu_857_p9 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln63_2_fu_825_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_7_fu_857_p11 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_10_fu_885_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln86_fu_881_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln86_fu_893_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln89_fu_899_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal message_offset_fu_911_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_11_fu_923_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_11_fu_923_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_11_fu_923_p6 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_11_fu_923_p8 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_11_fu_923_p10 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_11_fu_923_p11 : STD_LOGIC_VECTOR (6 downto 0);
    signal orderID_buff_fu_951_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal orderID_buff_fu_951_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal orderID_buff_fu_951_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal orderID_buff_fu_951_p8 : STD_LOGIC_VECTOR (7 downto 0);
    signal encoded_message_fu_451_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal orderID_buff_fu_951_p11 : STD_LOGIC_VECTOR (7 downto 0);
    signal orderID_buff_fu_951_p13 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_fu_991_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_fu_991_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_fu_991_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_fu_991_p10 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_fu_991_p11 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_fu_991_p13 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln106_fu_1027_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_14_fu_1039_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln106_fu_1033_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal orderID_buff_1_fu_1059_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_15_fu_1071_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_15_fu_1071_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_15_fu_1071_p8 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_15_fu_1071_p10 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_15_fu_1071_p11 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_15_fu_1071_p13 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln106_1_fu_1107_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_20_fu_1119_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln106_1_fu_1113_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal orderID_buff_2_fu_1129_p4 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_16_fu_1143_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_16_fu_1143_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_16_fu_1143_p8 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_16_fu_1143_p10 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_16_fu_1143_p11 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_16_fu_1143_p13 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln106_2_fu_1179_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln_fu_1049_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_21_fu_1191_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln106_2_fu_1185_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_12_fu_979_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal orderID_buff_3_fu_1201_p5 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_18_fu_1019_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln101_fu_1221_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln101_fu_1227_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln48_fu_987_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal select_ln101_fu_1213_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal or_ln101_fu_1241_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_24_fu_1247_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_fu_1099_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln101_2_fu_1255_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln101_1_fu_1261_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln48_1_fu_1067_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal select_ln101_1_fu_1233_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_23_fu_1171_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln101_1_fu_1275_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln101_2_fu_1281_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln101_3_fu_1287_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln48_2_fu_1139_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal select_ln101_2_fu_1267_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal or_ln101_1_fu_1309_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln101_4_fu_1301_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln101_5_fu_1315_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln101_2_fu_1323_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln101_3_fu_1337_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln101_6_fu_1329_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln101_7_fu_1343_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln101_fu_1351_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln47_fu_919_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_17_fu_1361_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_17_fu_1361_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_17_fu_1361_p6 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_17_fu_1361_p8 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_17_fu_1361_p10 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_17_fu_1361_p12 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_17_fu_1361_p14 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_17_fu_1361_p16 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_17_fu_1361_p18 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_17_fu_1361_p19 : STD_LOGIC_VECTOR (6 downto 0);
    signal message_offset_1_fu_1355_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal order_type_buff_fu_1405_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal order_type_buff_fu_1405_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal order_type_buff_fu_1405_p6 : STD_LOGIC_VECTOR (2 downto 0);
    signal order_type_buff_fu_1405_p8 : STD_LOGIC_VECTOR (2 downto 0);
    signal order_type_buff_fu_1405_p10 : STD_LOGIC_VECTOR (2 downto 0);
    signal order_type_buff_fu_1405_p12 : STD_LOGIC_VECTOR (2 downto 0);
    signal order_type_buff_fu_1405_p14 : STD_LOGIC_VECTOR (2 downto 0);
    signal order_type_buff_fu_1405_p16 : STD_LOGIC_VECTOR (2 downto 0);
    signal order_type_buff_fu_1405_p18 : STD_LOGIC_VECTOR (2 downto 0);
    signal order_type_buff_fu_1405_p19 : STD_LOGIC_VECTOR (2 downto 0);
    signal order_type_buff_fu_1405_p21 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln101_3_fu_1293_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_17_fu_1361_p21 : STD_LOGIC_VECTOR (6 downto 0);
    signal size_buff_fu_905_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_fu_923_p13 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln63_5_fu_849_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln76_2_fu_1449_p10 : STD_LOGIC_VECTOR (67 downto 0);
    signal and_ln125_fu_1492_p0 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln125_fu_1486_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_iter0_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_NS_iter1_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_ST_iter0_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_iter1_fsm_state3_blk : STD_LOGIC;
    signal regslice_both_lbRxDataIn_U_apdone_blk : STD_LOGIC;
    signal lbRxDataIn_TDATA_int_regslice : STD_LOGIC_VECTOR (127 downto 0);
    signal lbRxDataIn_TVALID_int_regslice : STD_LOGIC;
    signal lbRxDataIn_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_lbRxDataIn_U_ack_in : STD_LOGIC;
    signal regslice_both_lbRxMetadataIn_U_apdone_blk : STD_LOGIC;
    signal lbRxMetadataIn_TDATA_int_regslice : STD_LOGIC_VECTOR (127 downto 0);
    signal lbRxMetadataIn_TVALID_int_regslice : STD_LOGIC;
    signal lbRxMetadataIn_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_lbRxMetadataIn_U_ack_in : STD_LOGIC;
    signal lbRequestPortOpenOut_TVALID_int_regslice : STD_LOGIC;
    signal lbRequestPortOpenOut_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_lbRequestPortOpenOut_U_vld_out : STD_LOGIC;
    signal regslice_both_lbPortOpenReplyIn_U_apdone_blk : STD_LOGIC;
    signal lbPortOpenReplyIn_TDATA_int_regslice : STD_LOGIC_VECTOR (7 downto 0);
    signal lbPortOpenReplyIn_TVALID_int_regslice : STD_LOGIC;
    signal lbPortOpenReplyIn_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_lbPortOpenReplyIn_U_ack_in : STD_LOGIC;
    signal metadata_to_book_TDATA_int_regslice : STD_LOGIC_VECTOR (127 downto 0);
    signal metadata_to_book_TVALID_int_regslice : STD_LOGIC;
    signal metadata_to_book_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_metadata_to_book_U_vld_out : STD_LOGIC;
    signal regslice_both_tagsIn_U_apdone_blk : STD_LOGIC;
    signal tagsIn_TDATA_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal tagsIn_TVALID_int_regslice : STD_LOGIC;
    signal tagsIn_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_tagsIn_U_ack_in : STD_LOGIC;
    signal time_to_book_TVALID_int_regslice : STD_LOGIC;
    signal time_to_book_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_time_to_book_U_vld_out : STD_LOGIC;
    signal order_to_book_TDATA_int_regslice : STD_LOGIC_VECTOR (95 downto 0);
    signal order_to_book_TVALID_int_regslice : STD_LOGIC;
    signal order_to_book_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_order_to_book_U_vld_out : STD_LOGIC;
    signal tmp_7_fu_857_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_7_fu_857_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_7_fu_857_p5 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_7_fu_857_p7 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_11_fu_923_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_11_fu_923_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_11_fu_923_p5 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_11_fu_923_p7 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_11_fu_923_p9 : STD_LOGIC_VECTOR (2 downto 0);
    signal orderID_buff_fu_951_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal orderID_buff_fu_951_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal orderID_buff_fu_951_p5 : STD_LOGIC_VECTOR (2 downto 0);
    signal orderID_buff_fu_951_p7 : STD_LOGIC_VECTOR (2 downto 0);
    signal orderID_buff_fu_951_p9 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_13_fu_991_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_13_fu_991_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_13_fu_991_p5 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_13_fu_991_p7 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_13_fu_991_p9 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_15_fu_1071_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_15_fu_1071_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_15_fu_1071_p5 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_15_fu_1071_p7 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_15_fu_1071_p9 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_16_fu_1143_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_16_fu_1143_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_16_fu_1143_p5 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_16_fu_1143_p7 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_16_fu_1143_p9 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_17_fu_1361_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_17_fu_1361_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_17_fu_1361_p5 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_17_fu_1361_p7 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_17_fu_1361_p9 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_17_fu_1361_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_17_fu_1361_p13 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_17_fu_1361_p15 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_17_fu_1361_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal order_type_buff_fu_1405_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal order_type_buff_fu_1405_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal order_type_buff_fu_1405_p5 : STD_LOGIC_VECTOR (3 downto 0);
    signal order_type_buff_fu_1405_p7 : STD_LOGIC_VECTOR (3 downto 0);
    signal order_type_buff_fu_1405_p9 : STD_LOGIC_VECTOR (3 downto 0);
    signal order_type_buff_fu_1405_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal order_type_buff_fu_1405_p13 : STD_LOGIC_VECTOR (3 downto 0);
    signal order_type_buff_fu_1405_p15 : STD_LOGIC_VECTOR (3 downto 0);
    signal order_type_buff_fu_1405_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component Fast_processor_sparsemux_9_3_8_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        CASE0 : STD_LOGIC_VECTOR (2 downto 0);
        din0_WIDTH : INTEGER;
        CASE1 : STD_LOGIC_VECTOR (2 downto 0);
        din1_WIDTH : INTEGER;
        CASE2 : STD_LOGIC_VECTOR (2 downto 0);
        din2_WIDTH : INTEGER;
        CASE3 : STD_LOGIC_VECTOR (2 downto 0);
        din3_WIDTH : INTEGER;
        def_WIDTH : INTEGER;
        sel_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (7 downto 0);
        def : IN STD_LOGIC_VECTOR (7 downto 0);
        sel : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component Fast_processor_sparsemux_11_3_7_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        CASE0 : STD_LOGIC_VECTOR (2 downto 0);
        din0_WIDTH : INTEGER;
        CASE1 : STD_LOGIC_VECTOR (2 downto 0);
        din1_WIDTH : INTEGER;
        CASE2 : STD_LOGIC_VECTOR (2 downto 0);
        din2_WIDTH : INTEGER;
        CASE3 : STD_LOGIC_VECTOR (2 downto 0);
        din3_WIDTH : INTEGER;
        CASE4 : STD_LOGIC_VECTOR (2 downto 0);
        din4_WIDTH : INTEGER;
        def_WIDTH : INTEGER;
        sel_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        din2 : IN STD_LOGIC_VECTOR (6 downto 0);
        din3 : IN STD_LOGIC_VECTOR (6 downto 0);
        din4 : IN STD_LOGIC_VECTOR (6 downto 0);
        def : IN STD_LOGIC_VECTOR (6 downto 0);
        sel : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (6 downto 0) );
    end component;


    component Fast_processor_sparsemux_11_3_8_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        CASE0 : STD_LOGIC_VECTOR (2 downto 0);
        din0_WIDTH : INTEGER;
        CASE1 : STD_LOGIC_VECTOR (2 downto 0);
        din1_WIDTH : INTEGER;
        CASE2 : STD_LOGIC_VECTOR (2 downto 0);
        din2_WIDTH : INTEGER;
        CASE3 : STD_LOGIC_VECTOR (2 downto 0);
        din3_WIDTH : INTEGER;
        CASE4 : STD_LOGIC_VECTOR (2 downto 0);
        din4_WIDTH : INTEGER;
        def_WIDTH : INTEGER;
        sel_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (7 downto 0);
        din4 : IN STD_LOGIC_VECTOR (7 downto 0);
        def : IN STD_LOGIC_VECTOR (7 downto 0);
        sel : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component Fast_processor_sparsemux_19_4_7_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        CASE0 : STD_LOGIC_VECTOR (3 downto 0);
        din0_WIDTH : INTEGER;
        CASE1 : STD_LOGIC_VECTOR (3 downto 0);
        din1_WIDTH : INTEGER;
        CASE2 : STD_LOGIC_VECTOR (3 downto 0);
        din2_WIDTH : INTEGER;
        CASE3 : STD_LOGIC_VECTOR (3 downto 0);
        din3_WIDTH : INTEGER;
        CASE4 : STD_LOGIC_VECTOR (3 downto 0);
        din4_WIDTH : INTEGER;
        CASE5 : STD_LOGIC_VECTOR (3 downto 0);
        din5_WIDTH : INTEGER;
        CASE6 : STD_LOGIC_VECTOR (3 downto 0);
        din6_WIDTH : INTEGER;
        CASE7 : STD_LOGIC_VECTOR (3 downto 0);
        din7_WIDTH : INTEGER;
        CASE8 : STD_LOGIC_VECTOR (3 downto 0);
        din8_WIDTH : INTEGER;
        def_WIDTH : INTEGER;
        sel_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        din2 : IN STD_LOGIC_VECTOR (6 downto 0);
        din3 : IN STD_LOGIC_VECTOR (6 downto 0);
        din4 : IN STD_LOGIC_VECTOR (6 downto 0);
        din5 : IN STD_LOGIC_VECTOR (6 downto 0);
        din6 : IN STD_LOGIC_VECTOR (6 downto 0);
        din7 : IN STD_LOGIC_VECTOR (6 downto 0);
        din8 : IN STD_LOGIC_VECTOR (6 downto 0);
        def : IN STD_LOGIC_VECTOR (6 downto 0);
        sel : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (6 downto 0) );
    end component;


    component Fast_processor_sparsemux_19_4_3_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        CASE0 : STD_LOGIC_VECTOR (3 downto 0);
        din0_WIDTH : INTEGER;
        CASE1 : STD_LOGIC_VECTOR (3 downto 0);
        din1_WIDTH : INTEGER;
        CASE2 : STD_LOGIC_VECTOR (3 downto 0);
        din2_WIDTH : INTEGER;
        CASE3 : STD_LOGIC_VECTOR (3 downto 0);
        din3_WIDTH : INTEGER;
        CASE4 : STD_LOGIC_VECTOR (3 downto 0);
        din4_WIDTH : INTEGER;
        CASE5 : STD_LOGIC_VECTOR (3 downto 0);
        din5_WIDTH : INTEGER;
        CASE6 : STD_LOGIC_VECTOR (3 downto 0);
        din6_WIDTH : INTEGER;
        CASE7 : STD_LOGIC_VECTOR (3 downto 0);
        din7_WIDTH : INTEGER;
        CASE8 : STD_LOGIC_VECTOR (3 downto 0);
        din8_WIDTH : INTEGER;
        def_WIDTH : INTEGER;
        sel_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (2 downto 0);
        din1 : IN STD_LOGIC_VECTOR (2 downto 0);
        din2 : IN STD_LOGIC_VECTOR (2 downto 0);
        din3 : IN STD_LOGIC_VECTOR (2 downto 0);
        din4 : IN STD_LOGIC_VECTOR (2 downto 0);
        din5 : IN STD_LOGIC_VECTOR (2 downto 0);
        din6 : IN STD_LOGIC_VECTOR (2 downto 0);
        din7 : IN STD_LOGIC_VECTOR (2 downto 0);
        din8 : IN STD_LOGIC_VECTOR (2 downto 0);
        def : IN STD_LOGIC_VECTOR (2 downto 0);
        sel : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (2 downto 0) );
    end component;


    component Fast_processor_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    sparsemux_9_3_8_1_1_U1 : component Fast_processor_sparsemux_9_3_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "011",
        din0_WIDTH => 8,
        CASE1 => "100",
        din1_WIDTH => 8,
        CASE2 => "101",
        din2_WIDTH => 8,
        CASE3 => "110",
        din3_WIDTH => 8,
        def_WIDTH => 8,
        sel_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din0 => tmp_7_fu_857_p2,
        din1 => tmp_7_fu_857_p4,
        din2 => tmp_7_fu_857_p6,
        din3 => tmp_7_fu_857_p8,
        def => tmp_7_fu_857_p9,
        sel => select_ln63_2_fu_825_p3,
        dout => tmp_7_fu_857_p11);

    sparsemux_11_3_7_1_1_U2 : component Fast_processor_sparsemux_11_3_7_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "011",
        din0_WIDTH => 7,
        CASE1 => "100",
        din1_WIDTH => 7,
        CASE2 => "101",
        din2_WIDTH => 7,
        CASE3 => "110",
        din3_WIDTH => 7,
        CASE4 => "111",
        din4_WIDTH => 7,
        def_WIDTH => 7,
        sel_WIDTH => 3,
        dout_WIDTH => 7)
    port map (
        din0 => tmp_11_fu_923_p2,
        din1 => tmp_11_fu_923_p4,
        din2 => tmp_11_fu_923_p6,
        din3 => tmp_11_fu_923_p8,
        din4 => tmp_11_fu_923_p10,
        def => tmp_11_fu_923_p11,
        sel => message_offset_fu_911_p3,
        dout => tmp_11_fu_923_p13);

    sparsemux_11_3_8_1_1_U3 : component Fast_processor_sparsemux_11_3_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "011",
        din0_WIDTH => 8,
        CASE1 => "100",
        din1_WIDTH => 8,
        CASE2 => "101",
        din2_WIDTH => 8,
        CASE3 => "110",
        din3_WIDTH => 8,
        CASE4 => "111",
        din4_WIDTH => 8,
        def_WIDTH => 8,
        sel_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din0 => orderID_buff_fu_951_p2,
        din1 => orderID_buff_fu_951_p4,
        din2 => orderID_buff_fu_951_p6,
        din3 => orderID_buff_fu_951_p8,
        din4 => encoded_message_fu_451_p1,
        def => orderID_buff_fu_951_p11,
        sel => message_offset_fu_911_p3,
        dout => orderID_buff_fu_951_p13);

    sparsemux_11_3_8_1_1_U4 : component Fast_processor_sparsemux_11_3_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "011",
        din0_WIDTH => 8,
        CASE1 => "100",
        din1_WIDTH => 8,
        CASE2 => "101",
        din2_WIDTH => 8,
        CASE3 => "110",
        din3_WIDTH => 8,
        CASE4 => "111",
        din4_WIDTH => 8,
        def_WIDTH => 8,
        sel_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din0 => tmp_13_fu_991_p2,
        din1 => tmp_13_fu_991_p4,
        din2 => tmp_13_fu_991_p6,
        din3 => encoded_message_fu_451_p1,
        din4 => tmp_13_fu_991_p10,
        def => tmp_13_fu_991_p11,
        sel => message_offset_fu_911_p3,
        dout => tmp_13_fu_991_p13);

    sparsemux_11_3_8_1_1_U5 : component Fast_processor_sparsemux_11_3_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "011",
        din0_WIDTH => 8,
        CASE1 => "100",
        din1_WIDTH => 8,
        CASE2 => "101",
        din2_WIDTH => 8,
        CASE3 => "110",
        din3_WIDTH => 8,
        CASE4 => "111",
        din4_WIDTH => 8,
        def_WIDTH => 8,
        sel_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din0 => tmp_15_fu_1071_p2,
        din1 => tmp_15_fu_1071_p4,
        din2 => encoded_message_fu_451_p1,
        din3 => tmp_15_fu_1071_p8,
        din4 => tmp_15_fu_1071_p10,
        def => tmp_15_fu_1071_p11,
        sel => message_offset_fu_911_p3,
        dout => tmp_15_fu_1071_p13);

    sparsemux_11_3_8_1_1_U6 : component Fast_processor_sparsemux_11_3_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "011",
        din0_WIDTH => 8,
        CASE1 => "100",
        din1_WIDTH => 8,
        CASE2 => "101",
        din2_WIDTH => 8,
        CASE3 => "110",
        din3_WIDTH => 8,
        CASE4 => "111",
        din4_WIDTH => 8,
        def_WIDTH => 8,
        sel_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din0 => tmp_16_fu_1143_p2,
        din1 => encoded_message_fu_451_p1,
        din2 => tmp_16_fu_1143_p6,
        din3 => tmp_16_fu_1143_p8,
        din4 => tmp_16_fu_1143_p10,
        def => tmp_16_fu_1143_p11,
        sel => message_offset_fu_911_p3,
        dout => tmp_16_fu_1143_p13);

    sparsemux_19_4_7_1_1_U7 : component Fast_processor_sparsemux_19_4_7_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "0100",
        din0_WIDTH => 7,
        CASE1 => "0101",
        din1_WIDTH => 7,
        CASE2 => "0110",
        din2_WIDTH => 7,
        CASE3 => "0111",
        din3_WIDTH => 7,
        CASE4 => "1000",
        din4_WIDTH => 7,
        CASE5 => "1001",
        din5_WIDTH => 7,
        CASE6 => "1010",
        din6_WIDTH => 7,
        CASE7 => "1011",
        din7_WIDTH => 7,
        CASE8 => "1100",
        din8_WIDTH => 7,
        def_WIDTH => 7,
        sel_WIDTH => 4,
        dout_WIDTH => 7)
    port map (
        din0 => tmp_17_fu_1361_p2,
        din1 => tmp_17_fu_1361_p4,
        din2 => tmp_17_fu_1361_p6,
        din3 => tmp_17_fu_1361_p8,
        din4 => tmp_17_fu_1361_p10,
        din5 => tmp_17_fu_1361_p12,
        din6 => tmp_17_fu_1361_p14,
        din7 => tmp_17_fu_1361_p16,
        din8 => tmp_17_fu_1361_p18,
        def => tmp_17_fu_1361_p19,
        sel => message_offset_1_fu_1355_p2,
        dout => tmp_17_fu_1361_p21);

    sparsemux_19_4_3_1_1_U8 : component Fast_processor_sparsemux_19_4_3_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "0100",
        din0_WIDTH => 3,
        CASE1 => "0101",
        din1_WIDTH => 3,
        CASE2 => "0110",
        din2_WIDTH => 3,
        CASE3 => "0111",
        din3_WIDTH => 3,
        CASE4 => "1000",
        din4_WIDTH => 3,
        CASE5 => "1001",
        din5_WIDTH => 3,
        CASE6 => "1010",
        din6_WIDTH => 3,
        CASE7 => "1011",
        din7_WIDTH => 3,
        CASE8 => "1100",
        din8_WIDTH => 3,
        def_WIDTH => 3,
        sel_WIDTH => 4,
        dout_WIDTH => 3)
    port map (
        din0 => order_type_buff_fu_1405_p2,
        din1 => order_type_buff_fu_1405_p4,
        din2 => order_type_buff_fu_1405_p6,
        din3 => order_type_buff_fu_1405_p8,
        din4 => order_type_buff_fu_1405_p10,
        din5 => order_type_buff_fu_1405_p12,
        din6 => order_type_buff_fu_1405_p14,
        din7 => order_type_buff_fu_1405_p16,
        din8 => order_type_buff_fu_1405_p18,
        def => order_type_buff_fu_1405_p19,
        sel => message_offset_1_fu_1355_p2,
        dout => order_type_buff_fu_1405_p21);

    regslice_both_lbRxDataIn_U : component Fast_processor_regslice_both
    generic map (
        DataWidth => 128)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => lbRxDataIn_TDATA,
        vld_in => lbRxDataIn_TVALID,
        ack_in => regslice_both_lbRxDataIn_U_ack_in,
        data_out => lbRxDataIn_TDATA_int_regslice,
        vld_out => lbRxDataIn_TVALID_int_regslice,
        ack_out => lbRxDataIn_TREADY_int_regslice,
        apdone_blk => regslice_both_lbRxDataIn_U_apdone_blk);

    regslice_both_lbRxMetadataIn_U : component Fast_processor_regslice_both
    generic map (
        DataWidth => 128)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => lbRxMetadataIn_TDATA,
        vld_in => lbRxMetadataIn_TVALID,
        ack_in => regslice_both_lbRxMetadataIn_U_ack_in,
        data_out => lbRxMetadataIn_TDATA_int_regslice,
        vld_out => lbRxMetadataIn_TVALID_int_regslice,
        ack_out => lbRxMetadataIn_TREADY_int_regslice,
        apdone_blk => regslice_both_lbRxMetadataIn_U_apdone_blk);

    regslice_both_lbRequestPortOpenOut_U : component Fast_processor_regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => ap_const_lv16_C000,
        vld_in => lbRequestPortOpenOut_TVALID_int_regslice,
        ack_in => lbRequestPortOpenOut_TREADY_int_regslice,
        data_out => lbRequestPortOpenOut_TDATA,
        vld_out => regslice_both_lbRequestPortOpenOut_U_vld_out,
        ack_out => lbRequestPortOpenOut_TREADY,
        apdone_blk => regslice_both_lbRequestPortOpenOut_U_apdone_blk);

    regslice_both_lbPortOpenReplyIn_U : component Fast_processor_regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => lbPortOpenReplyIn_TDATA,
        vld_in => lbPortOpenReplyIn_TVALID,
        ack_in => regslice_both_lbPortOpenReplyIn_U_ack_in,
        data_out => lbPortOpenReplyIn_TDATA_int_regslice,
        vld_out => lbPortOpenReplyIn_TVALID_int_regslice,
        ack_out => lbPortOpenReplyIn_TREADY_int_regslice,
        apdone_blk => regslice_both_lbPortOpenReplyIn_U_apdone_blk);

    regslice_both_metadata_to_book_U : component Fast_processor_regslice_both
    generic map (
        DataWidth => 128)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => metadata_to_book_TDATA_int_regslice,
        vld_in => metadata_to_book_TVALID_int_regslice,
        ack_in => metadata_to_book_TREADY_int_regslice,
        data_out => metadata_to_book_TDATA,
        vld_out => regslice_both_metadata_to_book_U_vld_out,
        ack_out => metadata_to_book_TREADY,
        apdone_blk => regslice_both_metadata_to_book_U_apdone_blk);

    regslice_both_tagsIn_U : component Fast_processor_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => tagsIn_TDATA,
        vld_in => tagsIn_TVALID,
        ack_in => regslice_both_tagsIn_U_ack_in,
        data_out => tagsIn_TDATA_int_regslice,
        vld_out => tagsIn_TVALID_int_regslice,
        ack_out => tagsIn_TREADY_int_regslice,
        apdone_blk => regslice_both_tagsIn_U_apdone_blk);

    regslice_both_time_to_book_U : component Fast_processor_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => tagsIn_TDATA_int_regslice,
        vld_in => time_to_book_TVALID_int_regslice,
        ack_in => time_to_book_TREADY_int_regslice,
        data_out => time_to_book_TDATA,
        vld_out => regslice_both_time_to_book_U_vld_out,
        ack_out => time_to_book_TREADY,
        apdone_blk => regslice_both_time_to_book_U_apdone_blk);

    regslice_both_order_to_book_U : component Fast_processor_regslice_both
    generic map (
        DataWidth => 96)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => order_to_book_TDATA_int_regslice,
        vld_in => order_to_book_TVALID_int_regslice,
        ack_in => order_to_book_TREADY_int_regslice,
        data_out => order_to_book_TDATA,
        vld_out => regslice_both_order_to_book_U_vld_out,
        ack_out => order_to_book_TREADY,
        apdone_blk => regslice_both_order_to_book_U_apdone_blk);





    ap_CS_iter0_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_iter0_fsm <= ap_ST_iter0_fsm_state1;
            else
                ap_CS_iter0_fsm <= ap_NS_iter0_fsm;
            end if;
        end if;
    end process;


    ap_CS_iter1_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_iter1_fsm <= ap_ST_iter1_fsm_state0;
            else
                ap_CS_iter1_fsm <= ap_NS_iter1_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((not(((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter1) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter1_fsm_state3))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    next_state_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((next_state_1_load_reg_1516 = ap_const_lv3_4)) and not((next_state_1_load_reg_1516 = ap_const_lv3_1)) and not((next_state_1_load_reg_1516 = ap_const_lv3_2)) and not((next_state_1_load_reg_1516 = ap_const_lv3_3)) and not(((ap_const_boolean_1 = ap_block_state2_io) or (ap_const_boolean_1 = ap_block_state2_pp0_stage1_iter0) or (ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state3) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter1))))) and (ap_const_lv1_1 = and_ln125_fu_1492_p2) and (ap_const_logic_1 = ap_CS_iter0_fsm_state2))) then 
                next_state_1 <= ap_const_lv3_1;
            elsif (((not(((ap_const_boolean_1 = ap_block_state2_io) or (ap_const_boolean_1 = ap_block_state2_pp0_stage1_iter0) or (ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state3) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter1))))) and (next_state_1_load_reg_1516 = ap_const_lv3_4) and (ap_const_logic_1 = ap_CS_iter0_fsm_state2)) or (not(((ap_const_boolean_1 = ap_block_state2_io) or (ap_const_boolean_1 = ap_block_state2_pp0_stage1_iter0) or (ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state3) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter1))))) and (tmp_8_reg_1532 = ap_const_lv1_1) and (next_state_1_load_reg_1516 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state2)))) then 
                next_state_1 <= ap_const_lv3_2;
            elsif ((not(((ap_const_boolean_1 = ap_block_state2_io) or (ap_const_boolean_1 = ap_block_state2_pp0_stage1_iter0) or (ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state3) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter1))))) and (tmp_1_reg_1528 = ap_const_lv1_1) and (tmp_9_reg_1524 = ap_const_lv1_1) and (next_state_1_load_reg_1516 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_iter0_fsm_state2))) then 
                next_state_1 <= select_ln50_fu_431_p3;
            elsif ((not(((ap_const_boolean_1 = ap_block_state2_io) or (ap_const_boolean_1 = ap_block_state2_pp0_stage1_iter0) or (ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state3) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter1))))) and (tmp_s_reg_1520 = ap_const_lv1_1) and (next_state_1_load_reg_1516 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_iter0_fsm_state2))) then 
                next_state_1 <= select_ln147_fu_356_p3;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_boolean_1 = ap_block_state2_io) or (ap_const_boolean_1 = ap_block_state2_pp0_stage1_iter0) or (ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state3) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter1))))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state2))) then
                and_ln125_reg_1555 <= and_ln125_fu_1492_p2;
                next_state_1_load_reg_1516_pp0_iter0_reg <= next_state_1_load_reg_1516;
                tmp_19_reg_1546 <= (0=>order_to_book_TREADY_int_regslice, others=>'-');
                tmp_1_reg_1528_pp0_iter0_reg <= tmp_1_reg_1528;
                tmp_9_reg_1524_pp0_iter0_reg <= tmp_9_reg_1524;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_boolean_1 = ap_block_state2_io) or (ap_const_boolean_1 = ap_block_state2_pp0_stage1_iter0) or (ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state3) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter1))))) and (tmp_1_reg_1528 = ap_const_lv1_1) and (tmp_9_reg_1524 = ap_const_lv1_1) and (next_state_1_load_reg_1516 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_iter0_fsm_state2))) then
                first_packet <= trunc_ln41_fu_421_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0) or (ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state3) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter1))))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then
                next_state_1_load_reg_1516 <= next_state_1;
                tmp_1_reg_1528 <= tmp_1_nbreadreq_fu_240_p3;
                tmp_8_reg_1532 <= tmp_8_nbreadreq_fu_248_p3;
                tmp_9_reg_1524 <= grp_nbreadreq_fu_232_p3;
                tmp_s_reg_1520 <= grp_nbreadreq_fu_232_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((next_state_1_load_reg_1516 = ap_const_lv3_4)) and not((next_state_1_load_reg_1516 = ap_const_lv3_1)) and not((next_state_1_load_reg_1516 = ap_const_lv3_2)) and not((next_state_1_load_reg_1516 = ap_const_lv3_3)) and not(((ap_const_boolean_1 = ap_block_state2_io) or (ap_const_boolean_1 = ap_block_state2_pp0_stage1_iter0) or (ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state3) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter1))))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state2) and (ap_const_lv1_0 = and_ln125_fu_1492_p2))) then
                openPortWaitTime <= add_ln129_fu_1498_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_boolean_1 = ap_block_state2_io) or (ap_const_boolean_1 = ap_block_state2_pp0_stage1_iter0) or (ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state3) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter1))))) and (tmp_s_reg_1520 = ap_const_lv1_1) and (next_state_1_load_reg_1516 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_iter0_fsm_state2))) then
                second_packet <= trunc_ln145_fu_346_p1;
            end if;
        end if;
    end process;

    ap_NS_iter0_fsm_assign_proc : process (ap_CS_iter0_fsm, ap_CS_iter0_fsm_state1, ap_block_state2_pp0_stage1_iter0, ap_block_state2_io, ap_block_state3_pp0_stage0_iter1, ap_block_state3_io, ap_CS_iter1_fsm_state3, ap_done_reg, ap_block_state1_pp0_stage0_iter0)
    begin
        case ap_CS_iter0_fsm is
            when ap_ST_iter0_fsm_state1 => 
                if ((not(((ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0) or (ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state3) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter1))))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state2;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state1;
                end if;
            when ap_ST_iter0_fsm_state2 => 
                if (not(((ap_const_boolean_1 = ap_block_state2_io) or (ap_const_boolean_1 = ap_block_state2_pp0_stage1_iter0) or (ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state3) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter1)))))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state1;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state2;
                end if;
            when others =>  
                ap_NS_iter0_fsm <= "XX";
        end case;
    end process;

    ap_NS_iter1_fsm_assign_proc : process (ap_CS_iter1_fsm, ap_CS_iter0_fsm_state2, ap_block_state2_pp0_stage1_iter0, ap_block_state2_io, ap_block_state3_pp0_stage0_iter1, ap_block_state3_io, ap_CS_iter1_fsm_state3, ap_done_reg)
    begin
        case ap_CS_iter1_fsm is
            when ap_ST_iter1_fsm_state3 => 
                if ((not(((ap_const_boolean_1 = ap_block_state2_io) or (ap_const_boolean_1 = ap_block_state2_pp0_stage1_iter0))) and not(((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter1) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state2))) then
                    ap_NS_iter1_fsm <= ap_ST_iter1_fsm_state3;
                elsif ((not(((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter1) or (ap_done_reg = ap_const_logic_1))) and ((ap_const_logic_0 = ap_CS_iter0_fsm_state2) or ((ap_const_logic_1 = ap_CS_iter0_fsm_state2) and ((ap_const_boolean_1 = ap_block_state2_io) or (ap_const_boolean_1 = ap_block_state2_pp0_stage1_iter0)))))) then
                    ap_NS_iter1_fsm <= ap_ST_iter1_fsm_state0;
                else
                    ap_NS_iter1_fsm <= ap_ST_iter1_fsm_state3;
                end if;
            when ap_ST_iter1_fsm_state0 => 
                if ((not(((ap_const_boolean_1 = ap_block_state2_io) or (ap_const_boolean_1 = ap_block_state2_pp0_stage1_iter0) or (ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state3) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter1))))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state2))) then
                    ap_NS_iter1_fsm <= ap_ST_iter1_fsm_state3;
                else
                    ap_NS_iter1_fsm <= ap_ST_iter1_fsm_state0;
                end if;
            when others =>  
                ap_NS_iter1_fsm <= "XX";
        end case;
    end process;
    add_ln129_fu_1498_p2 <= std_logic_vector(unsigned(openPortWaitTime) + unsigned(ap_const_lv32_FFFFFFFF));
    add_ln89_fu_899_p2 <= std_logic_vector(unsigned(select_ln63_2_fu_825_p3) + unsigned(ap_const_lv3_1));
    and_ln101_1_fu_1261_p2 <= (xor_ln101_2_fu_1255_p2 and tmp_22_fu_1099_p3);
    and_ln101_2_fu_1281_p2 <= (xor_ln101_1_fu_1275_p2 and tmp_23_fu_1171_p3);
    and_ln101_3_fu_1287_p2 <= (xor_ln101_2_fu_1255_p2 and and_ln101_2_fu_1281_p2);
    and_ln101_fu_1227_p2 <= (xor_ln101_fu_1221_p2 and tmp_18_fu_1019_p3);
    and_ln125_fu_1492_p0 <= (0=>lbRequestPortOpenOut_TREADY_int_regslice, others=>'-');
    and_ln125_fu_1492_p2 <= (icmp_ln125_fu_1486_p2 and and_ln125_fu_1492_p0);
    and_ln63_fu_797_p2 <= (xor_ln63_fu_721_p2 and tmp_6_fu_789_p3);
    ap_CS_iter0_fsm_state1 <= ap_CS_iter0_fsm(0);
    ap_CS_iter0_fsm_state2 <= ap_CS_iter0_fsm(1);
    ap_CS_iter1_fsm_state0 <= ap_CS_iter1_fsm(0);
    ap_CS_iter1_fsm_state3 <= ap_CS_iter1_fsm(1);

    ap_ST_iter0_fsm_state1_blk_assign_proc : process(ap_block_state1_pp0_stage0_iter0)
    begin
        if ((ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0)) then 
            ap_ST_iter0_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_iter0_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_iter0_fsm_state2_blk_assign_proc : process(ap_block_state2_pp0_stage1_iter0, ap_block_state2_io)
    begin
        if (((ap_const_boolean_1 = ap_block_state2_io) or (ap_const_boolean_1 = ap_block_state2_pp0_stage1_iter0))) then 
            ap_ST_iter0_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_iter0_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_iter1_fsm_state3_blk_assign_proc : process(ap_block_state3_pp0_stage0_iter1, ap_block_state3_io)
    begin
        if (((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter1))) then 
            ap_ST_iter1_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_iter1_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state2_io_assign_proc : process(ap_predicate_op35_write_state2, ap_predicate_op42_write_state2, ap_predicate_op161_write_state2, ap_predicate_op172_write_state2, lbRequestPortOpenOut_TREADY_int_regslice, metadata_to_book_TREADY_int_regslice, time_to_book_TREADY_int_regslice, order_to_book_TREADY_int_regslice)
    begin
                ap_block_state2_io <= (((ap_predicate_op42_write_state2 = ap_const_boolean_1) and (metadata_to_book_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op35_write_state2 = ap_const_boolean_1) and (time_to_book_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op172_write_state2 = ap_const_boolean_1) and (lbRequestPortOpenOut_TREADY_int_regslice = ap_const_logic_0)) or ((order_to_book_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op161_write_state2 = ap_const_boolean_1)));
    end process;


    ap_block_state2_pp0_stage1_iter0_assign_proc : process(ap_predicate_op27_read_state2, ap_predicate_op34_read_state2, ap_predicate_op35_write_state2, ap_predicate_op36_read_state2, ap_predicate_op42_write_state2, ap_predicate_op43_read_state2, ap_predicate_op49_read_state2, ap_predicate_op161_write_state2, ap_predicate_op172_write_state2, lbRxDataIn_TVALID_int_regslice, lbRxMetadataIn_TVALID_int_regslice, lbRequestPortOpenOut_TREADY_int_regslice, lbPortOpenReplyIn_TVALID_int_regslice, metadata_to_book_TREADY_int_regslice, tagsIn_TVALID_int_regslice, time_to_book_TREADY_int_regslice, order_to_book_TREADY_int_regslice)
    begin
                ap_block_state2_pp0_stage1_iter0 <= (((ap_predicate_op49_read_state2 = ap_const_boolean_1) and (lbPortOpenReplyIn_TVALID_int_regslice = ap_const_logic_0)) or ((ap_predicate_op43_read_state2 = ap_const_boolean_1) and (lbRxDataIn_TVALID_int_regslice = ap_const_logic_0)) or ((ap_predicate_op42_write_state2 = ap_const_boolean_1) and (metadata_to_book_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op36_read_state2 = ap_const_boolean_1) and (lbRxMetadataIn_TVALID_int_regslice = ap_const_logic_0)) or ((ap_predicate_op35_write_state2 = ap_const_boolean_1) and (time_to_book_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op34_read_state2 = ap_const_boolean_1) and (tagsIn_TVALID_int_regslice = ap_const_logic_0)) or ((ap_predicate_op27_read_state2 = ap_const_boolean_1) and (lbRxDataIn_TVALID_int_regslice = ap_const_logic_0)) or ((ap_predicate_op172_write_state2 = ap_const_boolean_1) and (lbRequestPortOpenOut_TREADY_int_regslice = ap_const_logic_0)) or ((order_to_book_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op161_write_state2 
    = ap_const_boolean_1)));
    end process;


    ap_block_state3_io_assign_proc : process(ap_predicate_op175_write_state3, ap_predicate_op176_write_state3, ap_predicate_op180_write_state3, ap_predicate_op182_write_state3, lbRequestPortOpenOut_TREADY_int_regslice, metadata_to_book_TREADY_int_regslice, time_to_book_TREADY_int_regslice, order_to_book_TREADY_int_regslice)
    begin
                ap_block_state3_io <= (((ap_predicate_op182_write_state3 = ap_const_boolean_1) and (lbRequestPortOpenOut_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op180_write_state3 = ap_const_boolean_1) and (order_to_book_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op176_write_state3 = ap_const_boolean_1) and (metadata_to_book_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op175_write_state3 = ap_const_boolean_1) and (time_to_book_TREADY_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_state3_pp0_stage0_iter1_assign_proc : process(ap_predicate_op175_write_state3, ap_predicate_op176_write_state3, ap_predicate_op180_write_state3, ap_predicate_op182_write_state3, regslice_both_lbRequestPortOpenOut_U_apdone_blk, regslice_both_metadata_to_book_U_apdone_blk, regslice_both_time_to_book_U_apdone_blk, regslice_both_order_to_book_U_apdone_blk, lbRequestPortOpenOut_TREADY_int_regslice, metadata_to_book_TREADY_int_regslice, time_to_book_TREADY_int_regslice, order_to_book_TREADY_int_regslice)
    begin
                ap_block_state3_pp0_stage0_iter1 <= ((regslice_both_order_to_book_U_apdone_blk = ap_const_logic_1) or (regslice_both_time_to_book_U_apdone_blk = ap_const_logic_1) or (regslice_both_metadata_to_book_U_apdone_blk = ap_const_logic_1) or (regslice_both_lbRequestPortOpenOut_U_apdone_blk = ap_const_logic_1) or ((ap_predicate_op182_write_state3 = ap_const_boolean_1) and (lbRequestPortOpenOut_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op180_write_state3 = ap_const_boolean_1) and (order_to_book_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op176_write_state3 = ap_const_boolean_1) and (metadata_to_book_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op175_write_state3 = ap_const_boolean_1) and (time_to_book_TREADY_int_regslice = ap_const_logic_0)));
    end process;


    ap_done_assign_proc : process(ap_block_state3_pp0_stage0_iter1, ap_block_state3_io, ap_CS_iter1_fsm_state3, ap_done_reg)
    begin
        if ((not(((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter1) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter1_fsm_state3))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_iter0_fsm_state1, ap_CS_iter1_fsm_state0)
    begin
        if (((ap_const_logic_1 = ap_CS_iter1_fsm_state0) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op161_write_state2_assign_proc : process(next_state_1_load_reg_1516, grp_nbwritereq_fu_256_p3)
    begin
                ap_predicate_op161_write_state2 <= ((next_state_1_load_reg_1516 = ap_const_lv3_4) and (grp_nbwritereq_fu_256_p3 = ap_const_lv1_1));
    end process;


    ap_predicate_op172_write_state2_assign_proc : process(next_state_1_load_reg_1516, and_ln125_fu_1492_p2)
    begin
                ap_predicate_op172_write_state2 <= (not((next_state_1_load_reg_1516 = ap_const_lv3_4)) and not((next_state_1_load_reg_1516 = ap_const_lv3_1)) and not((next_state_1_load_reg_1516 = ap_const_lv3_2)) and not((next_state_1_load_reg_1516 = ap_const_lv3_3)) and (ap_const_lv1_1 = and_ln125_fu_1492_p2));
    end process;


    ap_predicate_op175_write_state3_assign_proc : process(next_state_1_load_reg_1516_pp0_iter0_reg, tmp_9_reg_1524_pp0_iter0_reg, tmp_1_reg_1528_pp0_iter0_reg)
    begin
                ap_predicate_op175_write_state3 <= ((tmp_1_reg_1528_pp0_iter0_reg = ap_const_lv1_1) and (tmp_9_reg_1524_pp0_iter0_reg = ap_const_lv1_1) and (next_state_1_load_reg_1516_pp0_iter0_reg = ap_const_lv3_2));
    end process;


    ap_predicate_op176_write_state3_assign_proc : process(next_state_1_load_reg_1516_pp0_iter0_reg, tmp_9_reg_1524_pp0_iter0_reg, tmp_1_reg_1528_pp0_iter0_reg)
    begin
                ap_predicate_op176_write_state3 <= ((tmp_1_reg_1528_pp0_iter0_reg = ap_const_lv1_1) and (tmp_9_reg_1524_pp0_iter0_reg = ap_const_lv1_1) and (next_state_1_load_reg_1516_pp0_iter0_reg = ap_const_lv3_2));
    end process;


    ap_predicate_op180_write_state3_assign_proc : process(next_state_1_load_reg_1516_pp0_iter0_reg, tmp_19_reg_1546)
    begin
                ap_predicate_op180_write_state3 <= ((tmp_19_reg_1546 = ap_const_lv1_1) and (next_state_1_load_reg_1516_pp0_iter0_reg = ap_const_lv3_4));
    end process;


    ap_predicate_op182_write_state3_assign_proc : process(next_state_1_load_reg_1516_pp0_iter0_reg, and_ln125_reg_1555)
    begin
                ap_predicate_op182_write_state3 <= (not((next_state_1_load_reg_1516_pp0_iter0_reg = ap_const_lv3_3)) and not((next_state_1_load_reg_1516_pp0_iter0_reg = ap_const_lv3_1)) and not((next_state_1_load_reg_1516_pp0_iter0_reg = ap_const_lv3_4)) and not((next_state_1_load_reg_1516_pp0_iter0_reg = ap_const_lv3_2)) and (ap_const_lv1_1 = and_ln125_reg_1555));
    end process;


    ap_predicate_op27_read_state2_assign_proc : process(next_state_1_load_reg_1516, tmp_s_reg_1520)
    begin
                ap_predicate_op27_read_state2 <= ((tmp_s_reg_1520 = ap_const_lv1_1) and (next_state_1_load_reg_1516 = ap_const_lv3_3));
    end process;


    ap_predicate_op34_read_state2_assign_proc : process(next_state_1_load_reg_1516, tmp_9_reg_1524, tmp_1_reg_1528)
    begin
                ap_predicate_op34_read_state2 <= ((tmp_1_reg_1528 = ap_const_lv1_1) and (tmp_9_reg_1524 = ap_const_lv1_1) and (next_state_1_load_reg_1516 = ap_const_lv3_2));
    end process;


    ap_predicate_op35_write_state2_assign_proc : process(next_state_1_load_reg_1516, tmp_9_reg_1524, tmp_1_reg_1528)
    begin
                ap_predicate_op35_write_state2 <= ((tmp_1_reg_1528 = ap_const_lv1_1) and (tmp_9_reg_1524 = ap_const_lv1_1) and (next_state_1_load_reg_1516 = ap_const_lv3_2));
    end process;


    ap_predicate_op36_read_state2_assign_proc : process(next_state_1_load_reg_1516, tmp_9_reg_1524, tmp_1_reg_1528)
    begin
                ap_predicate_op36_read_state2 <= ((tmp_1_reg_1528 = ap_const_lv1_1) and (tmp_9_reg_1524 = ap_const_lv1_1) and (next_state_1_load_reg_1516 = ap_const_lv3_2));
    end process;


    ap_predicate_op42_write_state2_assign_proc : process(next_state_1_load_reg_1516, tmp_9_reg_1524, tmp_1_reg_1528)
    begin
                ap_predicate_op42_write_state2 <= ((tmp_1_reg_1528 = ap_const_lv1_1) and (tmp_9_reg_1524 = ap_const_lv1_1) and (next_state_1_load_reg_1516 = ap_const_lv3_2));
    end process;


    ap_predicate_op43_read_state2_assign_proc : process(next_state_1_load_reg_1516, tmp_9_reg_1524, tmp_1_reg_1528)
    begin
                ap_predicate_op43_read_state2 <= ((tmp_1_reg_1528 = ap_const_lv1_1) and (tmp_9_reg_1524 = ap_const_lv1_1) and (next_state_1_load_reg_1516 = ap_const_lv3_2));
    end process;


    ap_predicate_op49_read_state2_assign_proc : process(next_state_1_load_reg_1516, tmp_8_reg_1532)
    begin
                ap_predicate_op49_read_state2 <= ((tmp_8_reg_1532 = ap_const_lv1_1) and (next_state_1_load_reg_1516 = ap_const_lv3_1));
    end process;


    ap_ready_assign_proc : process(ap_CS_iter0_fsm_state2, ap_block_state2_pp0_stage1_iter0, ap_block_state2_io, ap_block_state3_pp0_stage0_iter1, ap_block_state3_io, ap_CS_iter1_fsm_state3, ap_done_reg)
    begin
        if ((not(((ap_const_boolean_1 = ap_block_state2_io) or (ap_const_boolean_1 = ap_block_state2_pp0_stage1_iter0) or (ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state3) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter1))))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    decoded_mantissa_1_fu_739_p3 <= (tmp_3_fu_731_p3 & trunc_ln42_9_fu_583_p4);
    decoded_mantissa_fu_533_p4 <= first_packet(30 downto 24);
    encoded_message_3_fu_523_p4 <= first_packet(31 downto 24);
    encoded_message_5_fu_573_p4 <= first_packet(39 downto 32);
    encoded_message_7_fu_613_p4 <= first_packet(47 downto 40);
    encoded_message_fu_451_p1 <= second_packet(8 - 1 downto 0);
    grp_fu_326_p3 <= lbRxDataIn_TDATA_int_regslice(72 downto 72);
    grp_nbreadreq_fu_232_p3 <= (0=>(lbRxDataIn_TVALID_int_regslice), others=>'-');
    grp_nbwritereq_fu_256_p3 <= (0=>order_to_book_TREADY_int_regslice, others=>'-');
    icmp_ln125_fu_1486_p2 <= "1" when (openPortWaitTime = ap_const_lv32_0) else "0";

    lbPortOpenReplyIn_TDATA_blk_n_assign_proc : process(ap_CS_iter0_fsm_state2, ap_predicate_op49_read_state2, lbPortOpenReplyIn_TVALID_int_regslice)
    begin
        if (((ap_predicate_op49_read_state2 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state2))) then 
            lbPortOpenReplyIn_TDATA_blk_n <= lbPortOpenReplyIn_TVALID_int_regslice;
        else 
            lbPortOpenReplyIn_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    lbPortOpenReplyIn_TREADY <= regslice_both_lbPortOpenReplyIn_U_ack_in;

    lbPortOpenReplyIn_TREADY_int_regslice_assign_proc : process(ap_CS_iter0_fsm_state2, ap_predicate_op49_read_state2, ap_block_state2_pp0_stage1_iter0, ap_block_state2_io, ap_block_state3_pp0_stage0_iter1, ap_block_state3_io, ap_CS_iter1_fsm_state3, ap_done_reg)
    begin
        if ((not(((ap_const_boolean_1 = ap_block_state2_io) or (ap_const_boolean_1 = ap_block_state2_pp0_stage1_iter0) or (ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state3) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter1))))) and (ap_predicate_op49_read_state2 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state2))) then 
            lbPortOpenReplyIn_TREADY_int_regslice <= ap_const_logic_1;
        else 
            lbPortOpenReplyIn_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    lbRequestPortOpenOut_TDATA_blk_n_assign_proc : process(ap_CS_iter0_fsm_state2, ap_predicate_op172_write_state2, ap_predicate_op182_write_state3, ap_CS_iter1_fsm_state3, lbRequestPortOpenOut_TREADY_int_regslice)
    begin
        if ((((ap_const_logic_1 = ap_CS_iter0_fsm_state2) and (ap_predicate_op172_write_state2 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state3) and (ap_predicate_op182_write_state3 = ap_const_boolean_1)))) then 
            lbRequestPortOpenOut_TDATA_blk_n <= lbRequestPortOpenOut_TREADY_int_regslice;
        else 
            lbRequestPortOpenOut_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    lbRequestPortOpenOut_TVALID <= regslice_both_lbRequestPortOpenOut_U_vld_out;

    lbRequestPortOpenOut_TVALID_int_regslice_assign_proc : process(ap_CS_iter0_fsm_state2, ap_predicate_op172_write_state2, ap_block_state2_pp0_stage1_iter0, ap_block_state2_io, ap_block_state3_pp0_stage0_iter1, ap_block_state3_io, ap_CS_iter1_fsm_state3, ap_done_reg)
    begin
        if ((not(((ap_const_boolean_1 = ap_block_state2_io) or (ap_const_boolean_1 = ap_block_state2_pp0_stage1_iter0) or (ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state3) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter1))))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state2) and (ap_predicate_op172_write_state2 = ap_const_boolean_1))) then 
            lbRequestPortOpenOut_TVALID_int_regslice <= ap_const_logic_1;
        else 
            lbRequestPortOpenOut_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    lbRxDataIn_TDATA_blk_n_assign_proc : process(ap_CS_iter0_fsm_state2, ap_predicate_op27_read_state2, ap_predicate_op43_read_state2, lbRxDataIn_TVALID_int_regslice)
    begin
        if ((((ap_predicate_op43_read_state2 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state2)) or ((ap_predicate_op27_read_state2 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state2)))) then 
            lbRxDataIn_TDATA_blk_n <= lbRxDataIn_TVALID_int_regslice;
        else 
            lbRxDataIn_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    lbRxDataIn_TREADY <= regslice_both_lbRxDataIn_U_ack_in;

    lbRxDataIn_TREADY_int_regslice_assign_proc : process(ap_CS_iter0_fsm_state2, ap_predicate_op27_read_state2, ap_predicate_op43_read_state2, ap_block_state2_pp0_stage1_iter0, ap_block_state2_io, ap_block_state3_pp0_stage0_iter1, ap_block_state3_io, ap_CS_iter1_fsm_state3, ap_done_reg)
    begin
        if (((not(((ap_const_boolean_1 = ap_block_state2_io) or (ap_const_boolean_1 = ap_block_state2_pp0_stage1_iter0) or (ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state3) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter1))))) and (ap_predicate_op43_read_state2 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state2)) or (not(((ap_const_boolean_1 = ap_block_state2_io) or (ap_const_boolean_1 = ap_block_state2_pp0_stage1_iter0) or (ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state3) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter1))))) and (ap_predicate_op27_read_state2 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state2)))) then 
            lbRxDataIn_TREADY_int_regslice <= ap_const_logic_1;
        else 
            lbRxDataIn_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    lbRxMetadataIn_TDATA_blk_n_assign_proc : process(ap_CS_iter0_fsm_state2, ap_predicate_op36_read_state2, lbRxMetadataIn_TVALID_int_regslice)
    begin
        if (((ap_predicate_op36_read_state2 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state2))) then 
            lbRxMetadataIn_TDATA_blk_n <= lbRxMetadataIn_TVALID_int_regslice;
        else 
            lbRxMetadataIn_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    lbRxMetadataIn_TREADY <= regslice_both_lbRxMetadataIn_U_ack_in;

    lbRxMetadataIn_TREADY_int_regslice_assign_proc : process(ap_CS_iter0_fsm_state2, ap_predicate_op36_read_state2, ap_block_state2_pp0_stage1_iter0, ap_block_state2_io, ap_block_state3_pp0_stage0_iter1, ap_block_state3_io, ap_CS_iter1_fsm_state3, ap_done_reg)
    begin
        if ((not(((ap_const_boolean_1 = ap_block_state2_io) or (ap_const_boolean_1 = ap_block_state2_pp0_stage1_iter0) or (ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state3) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter1))))) and (ap_predicate_op36_read_state2 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state2))) then 
            lbRxMetadataIn_TREADY_int_regslice <= ap_const_logic_1;
        else 
            lbRxMetadataIn_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    message_offset_1_fu_1355_p2 <= std_logic_vector(unsigned(zext_ln101_fu_1351_p1) + unsigned(zext_ln47_fu_919_p1));
    message_offset_fu_911_p3 <= 
        select_ln63_2_fu_825_p3 when (tmp_10_fu_885_p3(0) = '1') else 
        add_ln89_fu_899_p2;

    metadata_to_book_TDATA_blk_n_assign_proc : process(ap_CS_iter0_fsm_state2, ap_predicate_op42_write_state2, ap_predicate_op176_write_state3, ap_CS_iter1_fsm_state3, metadata_to_book_TREADY_int_regslice)
    begin
        if ((((ap_predicate_op42_write_state2 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state2)) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state3) and (ap_predicate_op176_write_state3 = ap_const_boolean_1)))) then 
            metadata_to_book_TDATA_blk_n <= metadata_to_book_TREADY_int_regslice;
        else 
            metadata_to_book_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    metadata_to_book_TDATA_int_regslice <= (((((tmp_28_fu_394_p4 & ap_const_lv16_0) & trunc_ln32_fu_370_p1) & tmp_27_fu_384_p4) & ap_const_lv16_0) & tmp_26_fu_374_p4);
    metadata_to_book_TVALID <= regslice_both_metadata_to_book_U_vld_out;

    metadata_to_book_TVALID_int_regslice_assign_proc : process(ap_CS_iter0_fsm_state2, ap_predicate_op42_write_state2, ap_block_state2_pp0_stage1_iter0, ap_block_state2_io, ap_block_state3_pp0_stage0_iter1, ap_block_state3_io, ap_CS_iter1_fsm_state3, ap_done_reg)
    begin
        if ((not(((ap_const_boolean_1 = ap_block_state2_io) or (ap_const_boolean_1 = ap_block_state2_pp0_stage1_iter0) or (ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state3) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter1))))) and (ap_predicate_op42_write_state2 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state2))) then 
            metadata_to_book_TVALID_int_regslice <= ap_const_logic_1;
        else 
            metadata_to_book_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    or_ln101_1_fu_1309_p2 <= (and_ln101_3_fu_1287_p2 or and_ln101_1_fu_1261_p2);
    or_ln101_2_fu_1323_p2 <= (tmp_12_fu_979_p3 or and_ln101_fu_1227_p2);
    or_ln101_3_fu_1337_p2 <= (or_ln101_2_fu_1323_p2 or or_ln101_1_fu_1309_p2);
    or_ln101_fu_1241_p2 <= (tmp_13_fu_991_p13 or orderID_buff_fu_951_p13);
    or_ln106_1_fu_1113_p2 <= (tmp_15_fu_1071_p13 or shl_ln106_1_fu_1107_p2);
    or_ln106_2_fu_1185_p2 <= (tmp_16_fu_1143_p13 or shl_ln106_2_fu_1179_p2);
    or_ln106_fu_1033_p2 <= (tmp_13_fu_991_p13 or shl_ln106_fu_1027_p2);
    or_ln63_1_fu_769_p2 <= (or_ln63_fu_763_p2 or encoded_message_3_fu_523_p4);
    or_ln63_2_fu_803_p2 <= (xor_ln63_1_fu_783_p2 or and_ln63_fu_797_p2);
    or_ln63_fu_763_p2 <= (encoded_message_7_fu_613_p4 or encoded_message_5_fu_573_p4);
    or_ln76_2_fu_1449_p10 <= ((((((((ap_const_lv1_0 & order_type_buff_fu_1405_p21) & select_ln101_3_fu_1293_p3) & tmp_17_fu_1361_p21) & ap_const_lv8_0) & size_buff_fu_905_p2) & tmp_11_fu_923_p13) & select_ln63_5_fu_849_p3) & ap_const_lv8_0);
    or_ln_fu_755_p3 <= (tmp_4_fu_747_p3 & trunc_ln42_3_fu_633_p4);
    orderID_buff_1_fu_1059_p3 <= (tmp_14_fu_1039_p4 & or_ln106_fu_1033_p2);
    orderID_buff_2_fu_1129_p4 <= ((tmp_14_fu_1039_p4 & tmp_20_fu_1119_p4) & or_ln106_1_fu_1113_p2);
    orderID_buff_3_fu_1201_p5 <= (((trunc_ln_fu_1049_p4 & tmp_20_fu_1119_p4) & tmp_21_fu_1191_p4) & or_ln106_2_fu_1185_p2);
    orderID_buff_fu_951_p11 <= "XXXXXXXX";
    orderID_buff_fu_951_p2 <= first_packet(39 downto 32);
    orderID_buff_fu_951_p4 <= first_packet(47 downto 40);
    orderID_buff_fu_951_p6 <= first_packet(55 downto 48);
    orderID_buff_fu_951_p8 <= first_packet(63 downto 56);

    order_to_book_TDATA_blk_n_assign_proc : process(ap_CS_iter0_fsm_state2, ap_predicate_op161_write_state2, ap_predicate_op180_write_state3, ap_CS_iter1_fsm_state3, order_to_book_TREADY_int_regslice)
    begin
        if ((((ap_const_logic_1 = ap_CS_iter0_fsm_state2) and (ap_predicate_op161_write_state2 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state3) and (ap_predicate_op180_write_state3 = ap_const_boolean_1)))) then 
            order_to_book_TDATA_blk_n <= order_to_book_TREADY_int_regslice;
        else 
            order_to_book_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    order_to_book_TDATA_int_regslice <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln76_2_fu_1449_p10),96));
    order_to_book_TVALID <= regslice_both_order_to_book_U_vld_out;

    order_to_book_TVALID_int_regslice_assign_proc : process(ap_CS_iter0_fsm_state2, ap_predicate_op161_write_state2, ap_block_state2_pp0_stage1_iter0, ap_block_state2_io, ap_block_state3_pp0_stage0_iter1, ap_block_state3_io, ap_CS_iter1_fsm_state3, ap_done_reg)
    begin
        if ((not(((ap_const_boolean_1 = ap_block_state2_io) or (ap_const_boolean_1 = ap_block_state2_pp0_stage1_iter0) or (ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state3) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter1))))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state2) and (ap_predicate_op161_write_state2 = ap_const_boolean_1))) then 
            order_to_book_TVALID_int_regslice <= ap_const_logic_1;
        else 
            order_to_book_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    order_type_buff_fu_1405_p10 <= second_packet(10 downto 8);
    order_type_buff_fu_1405_p12 <= second_packet(18 downto 16);
    order_type_buff_fu_1405_p14 <= second_packet(26 downto 24);
    order_type_buff_fu_1405_p16 <= second_packet(34 downto 32);
    order_type_buff_fu_1405_p18 <= second_packet(42 downto 40);
    order_type_buff_fu_1405_p19 <= "XXX";
    order_type_buff_fu_1405_p2 <= first_packet(42 downto 40);
    order_type_buff_fu_1405_p4 <= first_packet(50 downto 48);
    order_type_buff_fu_1405_p6 <= first_packet(58 downto 56);
    order_type_buff_fu_1405_p8 <= second_packet(3 - 1 downto 0);
    select_ln101_1_fu_1233_p3 <= 
        zext_ln48_fu_987_p1 when (and_ln101_fu_1227_p2(0) = '1') else 
        select_ln101_fu_1213_p3;
    select_ln101_2_fu_1267_p3 <= 
        zext_ln48_1_fu_1067_p1 when (and_ln101_1_fu_1261_p2(0) = '1') else 
        select_ln101_1_fu_1233_p3;
    select_ln101_3_fu_1293_p3 <= 
        zext_ln48_2_fu_1139_p1 when (and_ln101_3_fu_1287_p2(0) = '1') else 
        select_ln101_2_fu_1267_p3;
    select_ln101_4_fu_1301_p3 <= 
        ap_const_lv3_4 when (and_ln101_3_fu_1287_p2(0) = '1') else 
        ap_const_lv3_3;
    select_ln101_5_fu_1315_p3 <= 
        ap_const_lv3_2 when (and_ln101_fu_1227_p2(0) = '1') else 
        ap_const_lv3_1;
    select_ln101_6_fu_1329_p3 <= 
        select_ln101_4_fu_1301_p3 when (or_ln101_1_fu_1309_p2(0) = '1') else 
        select_ln101_5_fu_1315_p3;
    select_ln101_7_fu_1343_p3 <= 
        select_ln101_6_fu_1329_p3 when (or_ln101_3_fu_1337_p2(0) = '1') else 
        ap_const_lv3_5;
    select_ln101_fu_1213_p3 <= 
        ap_const_lv25_0 when (tmp_12_fu_979_p3(0) = '1') else 
        orderID_buff_3_fu_1201_p5;
    select_ln147_fu_356_p3 <= 
        ap_const_lv3_4 when (grp_fu_326_p3(0) = '1') else 
        ap_const_lv3_2;
    select_ln50_fu_431_p3 <= 
        ap_const_lv3_4 when (grp_fu_326_p3(0) = '1') else 
        ap_const_lv3_3;
    select_ln63_1_fu_817_p3 <= 
        ap_const_lv3_4 when (and_ln63_fu_797_p2(0) = '1') else 
        ap_const_lv3_6;
    select_ln63_2_fu_825_p3 <= 
        select_ln63_1_fu_817_p3 when (or_ln63_2_fu_803_p2(0) = '1') else 
        select_ln63_fu_809_p3;
    select_ln63_3_fu_833_p3 <= 
        zext_ln58_fu_727_p1 when (and_ln63_fu_797_p2(0) = '1') else 
        or_ln_fu_755_p3;
    select_ln63_4_fu_841_p3 <= 
        ap_const_lv8_0 when (tmp_2_fu_713_p3(0) = '1') else 
        decoded_mantissa_1_fu_739_p3;
    select_ln63_5_fu_849_p3 <= 
        select_ln63_3_fu_833_p3 when (or_ln63_2_fu_803_p2(0) = '1') else 
        select_ln63_4_fu_841_p3;
    select_ln63_fu_809_p3 <= 
        ap_const_lv3_3 when (tmp_2_fu_713_p3(0) = '1') else 
        ap_const_lv3_5;
    shl_ln106_1_fu_1107_p2 <= std_logic_vector(shift_left(unsigned(tmp_13_fu_991_p13),to_integer(unsigned('0' & ap_const_lv8_7(8-1 downto 0)))));
    shl_ln106_2_fu_1179_p2 <= std_logic_vector(shift_left(unsigned(tmp_15_fu_1071_p13),to_integer(unsigned('0' & ap_const_lv8_7(8-1 downto 0)))));
    shl_ln106_fu_1027_p2 <= std_logic_vector(shift_left(unsigned(orderID_buff_fu_951_p13),to_integer(unsigned('0' & ap_const_lv8_7(8-1 downto 0)))));
    size_buff_fu_905_p2 <= (xor_ln86_fu_893_p2 and trunc_ln86_fu_881_p1);

    tagsIn_TDATA_blk_n_assign_proc : process(ap_CS_iter0_fsm_state2, ap_predicate_op34_read_state2, tagsIn_TVALID_int_regslice)
    begin
        if (((ap_predicate_op34_read_state2 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state2))) then 
            tagsIn_TDATA_blk_n <= tagsIn_TVALID_int_regslice;
        else 
            tagsIn_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    tagsIn_TREADY <= regslice_both_tagsIn_U_ack_in;

    tagsIn_TREADY_int_regslice_assign_proc : process(ap_CS_iter0_fsm_state2, ap_predicate_op34_read_state2, ap_block_state2_pp0_stage1_iter0, ap_block_state2_io, ap_block_state3_pp0_stage0_iter1, ap_block_state3_io, ap_CS_iter1_fsm_state3, ap_done_reg)
    begin
        if ((not(((ap_const_boolean_1 = ap_block_state2_io) or (ap_const_boolean_1 = ap_block_state2_pp0_stage1_iter0) or (ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state3) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter1))))) and (ap_predicate_op34_read_state2 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state2))) then 
            tagsIn_TREADY_int_regslice <= ap_const_logic_1;
        else 
            tagsIn_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    time_to_book_TDATA_blk_n_assign_proc : process(ap_CS_iter0_fsm_state2, ap_predicate_op35_write_state2, ap_predicate_op175_write_state3, ap_CS_iter1_fsm_state3, time_to_book_TREADY_int_regslice)
    begin
        if ((((ap_predicate_op35_write_state2 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state2)) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state3) and (ap_predicate_op175_write_state3 = ap_const_boolean_1)))) then 
            time_to_book_TDATA_blk_n <= time_to_book_TREADY_int_regslice;
        else 
            time_to_book_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    time_to_book_TVALID <= regslice_both_time_to_book_U_vld_out;

    time_to_book_TVALID_int_regslice_assign_proc : process(ap_CS_iter0_fsm_state2, ap_predicate_op35_write_state2, ap_block_state2_pp0_stage1_iter0, ap_block_state2_io, ap_block_state3_pp0_stage0_iter1, ap_block_state3_io, ap_CS_iter1_fsm_state3, ap_done_reg)
    begin
        if ((not(((ap_const_boolean_1 = ap_block_state2_io) or (ap_const_boolean_1 = ap_block_state2_pp0_stage1_iter0) or (ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state3) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter1))))) and (ap_predicate_op35_write_state2 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state2))) then 
            time_to_book_TVALID_int_regslice <= ap_const_logic_1;
        else 
            time_to_book_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    tmp_10_fu_885_p3 <= tmp_7_fu_857_p11(7 downto 7);
    tmp_11_fu_923_p10 <= first_packet(62 downto 56);
    tmp_11_fu_923_p11 <= "XXXXXXX";
    tmp_11_fu_923_p2 <= first_packet(30 downto 24);
    tmp_11_fu_923_p4 <= first_packet(38 downto 32);
    tmp_11_fu_923_p6 <= first_packet(46 downto 40);
    tmp_11_fu_923_p8 <= first_packet(54 downto 48);
    tmp_12_fu_979_p3 <= orderID_buff_fu_951_p13(7 downto 7);
    tmp_13_fu_991_p10 <= second_packet(15 downto 8);
    tmp_13_fu_991_p11 <= "XXXXXXXX";
    tmp_13_fu_991_p2 <= first_packet(47 downto 40);
    tmp_13_fu_991_p4 <= first_packet(55 downto 48);
    tmp_13_fu_991_p6 <= first_packet(63 downto 56);
    tmp_14_fu_1039_p4 <= orderID_buff_fu_951_p13(7 downto 1);
    tmp_15_fu_1071_p10 <= second_packet(23 downto 16);
    tmp_15_fu_1071_p11 <= "XXXXXXXX";
    tmp_15_fu_1071_p2 <= first_packet(55 downto 48);
    tmp_15_fu_1071_p4 <= first_packet(63 downto 56);
    tmp_15_fu_1071_p8 <= second_packet(15 downto 8);
    tmp_16_fu_1143_p10 <= second_packet(31 downto 24);
    tmp_16_fu_1143_p11 <= "XXXXXXXX";
    tmp_16_fu_1143_p2 <= first_packet(63 downto 56);
    tmp_16_fu_1143_p6 <= second_packet(15 downto 8);
    tmp_16_fu_1143_p8 <= second_packet(23 downto 16);
    tmp_17_fu_1361_p10 <= second_packet(7 - 1 downto 0);
    tmp_17_fu_1361_p12 <= second_packet(14 downto 8);
    tmp_17_fu_1361_p14 <= second_packet(22 downto 16);
    tmp_17_fu_1361_p16 <= second_packet(30 downto 24);
    tmp_17_fu_1361_p18 <= second_packet(38 downto 32);
    tmp_17_fu_1361_p19 <= "XXXXXXX";
    tmp_17_fu_1361_p2 <= first_packet(38 downto 32);
    tmp_17_fu_1361_p4 <= first_packet(46 downto 40);
    tmp_17_fu_1361_p6 <= first_packet(54 downto 48);
    tmp_17_fu_1361_p8 <= first_packet(62 downto 56);
    tmp_18_fu_1019_p3 <= tmp_13_fu_991_p13(7 downto 7);
    tmp_1_nbreadreq_fu_240_p3 <= (0=>(lbRxMetadataIn_TVALID_int_regslice), others=>'-');
    tmp_20_fu_1119_p4 <= or_ln106_fu_1033_p2(7 downto 1);
    tmp_21_fu_1191_p4 <= or_ln106_1_fu_1113_p2(7 downto 1);
    tmp_22_fu_1099_p3 <= tmp_15_fu_1071_p13(7 downto 7);
    tmp_23_fu_1171_p3 <= tmp_16_fu_1143_p13(7 downto 7);
    tmp_24_fu_1247_p3 <= or_ln101_fu_1241_p2(7 downto 7);
    tmp_26_fu_374_p4 <= lbRxMetadataIn_TDATA_int_regslice(79 downto 64);
    tmp_27_fu_384_p4 <= lbRxMetadataIn_TDATA_int_regslice(127 downto 96);
    tmp_28_fu_394_p4 <= lbRxMetadataIn_TDATA_int_regslice(63 downto 32);
    tmp_2_fu_713_p3 <= first_packet(31 downto 31);
    tmp_3_fu_731_p3 <= first_packet(24 downto 24);
    tmp_4_fu_747_p3 <= first_packet(32 downto 32);
    tmp_5_fu_775_p3 <= or_ln63_1_fu_769_p2(7 downto 7);
    tmp_6_fu_789_p3 <= first_packet(39 downto 39);
    tmp_7_fu_857_p2 <= first_packet(31 downto 24);
    tmp_7_fu_857_p4 <= first_packet(39 downto 32);
    tmp_7_fu_857_p6 <= first_packet(47 downto 40);
    tmp_7_fu_857_p8 <= first_packet(55 downto 48);
    tmp_7_fu_857_p9 <= "XXXXXXXX";
    tmp_8_nbreadreq_fu_248_p3 <= (0=>(lbPortOpenReplyIn_TVALID_int_regslice), others=>'-');
    trunc_ln145_fu_346_p1 <= lbRxDataIn_TDATA_int_regslice(43 - 1 downto 0);
    trunc_ln32_fu_370_p1 <= lbRxMetadataIn_TDATA_int_regslice(16 - 1 downto 0);
    trunc_ln41_fu_421_p1 <= lbRxDataIn_TDATA_int_regslice(64 - 1 downto 0);
    trunc_ln42_3_fu_633_p4 <= first_packet(46 downto 40);
    trunc_ln42_9_fu_583_p4 <= first_packet(38 downto 32);
    trunc_ln86_fu_881_p1 <= tmp_7_fu_857_p11(1 - 1 downto 0);
    trunc_ln_fu_1049_p4 <= orderID_buff_fu_951_p13(3 downto 1);
    xor_ln101_1_fu_1275_p2 <= (tmp_22_fu_1099_p3 xor ap_const_lv1_1);
    xor_ln101_2_fu_1255_p2 <= (tmp_24_fu_1247_p3 xor ap_const_lv1_1);
    xor_ln101_fu_1221_p2 <= (tmp_12_fu_979_p3 xor ap_const_lv1_1);
    xor_ln63_1_fu_783_p2 <= (tmp_5_fu_775_p3 xor ap_const_lv1_1);
    xor_ln63_fu_721_p2 <= (tmp_2_fu_713_p3 xor ap_const_lv1_1);
    xor_ln86_fu_893_p2 <= (tmp_10_fu_885_p3 xor ap_const_lv1_1);
    zext_ln101_fu_1351_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln101_7_fu_1343_p3),4));
    zext_ln47_fu_919_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(message_offset_fu_911_p3),4));
    zext_ln48_1_fu_1067_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(orderID_buff_1_fu_1059_p3),25));
    zext_ln48_2_fu_1139_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(orderID_buff_2_fu_1129_p4),25));
    zext_ln48_fu_987_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(orderID_buff_fu_951_p13),25));
    zext_ln58_fu_727_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(decoded_mantissa_fu_533_p4),8));
end behav;
